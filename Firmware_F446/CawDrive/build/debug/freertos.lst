ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/freertos.c"
  20              		.section	.text.StartDefaultTask,"ax",%progbits
  21              		.align	1
  22              		.global	StartDefaultTask
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	StartDefaultTask:
  28              	.LFB246:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****  ******************************************************************************
   4:Core/Src/freertos.c ****  * File Name          : freertos.c
   5:Core/Src/freertos.c ****  * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****  ******************************************************************************
   7:Core/Src/freertos.c ****  * @attention
   8:Core/Src/freertos.c ****  *
   9:Core/Src/freertos.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/freertos.c ****  * All rights reserved.
  11:Core/Src/freertos.c ****  *
  12:Core/Src/freertos.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****  * in the root directory of this software component.
  14:Core/Src/freertos.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****  *
  16:Core/Src/freertos.c ****  ******************************************************************************
  17:Core/Src/freertos.c ****  */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** 
  23:Core/Src/freertos.c **** #include "cmsis_os.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "task.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "state.h"
  30:Core/Src/freertos.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 2


  31:Core/Src/freertos.c **** 
  32:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/freertos.c **** 
  35:Core/Src/freertos.c **** /* USER CODE END PTD */
  36:Core/Src/freertos.c **** 
  37:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  39:Core/Src/freertos.c **** 
  40:Core/Src/freertos.c **** /* USER CODE END PD */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* USER CODE END PM */
  46:Core/Src/freertos.c **** 
  47:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** /* USER CODE END Variables */
  51:Core/Src/freertos.c **** osThreadId defaultTaskHandle;
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** void StartDefaultTask(void const *argument);
  59:Core/Src/freertos.c **** 
  60:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  61:Core/Src/freertos.c **** 
  62:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
  63:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer,
  64:Core/Src/freertos.c ****                                    StackType_t **ppxIdleTaskStackBuffer,
  65:Core/Src/freertos.c ****                                    uint32_t *pulIdleTaskStackSize);
  66:Core/Src/freertos.c **** 
  67:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
  68:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
  69:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
  70:Core/Src/freertos.c **** 
  71:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer,
  72:Core/Src/freertos.c ****                                    StackType_t **ppxIdleTaskStackBuffer,
  73:Core/Src/freertos.c ****                                    uint32_t *pulIdleTaskStackSize) {
  74:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  75:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  76:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  77:Core/Src/freertos.c ****   /* place for user code */
  78:Core/Src/freertos.c **** }
  79:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  80:Core/Src/freertos.c **** 
  81:Core/Src/freertos.c **** /**
  82:Core/Src/freertos.c ****  * @brief  FreeRTOS initialization
  83:Core/Src/freertos.c ****  * @param  None
  84:Core/Src/freertos.c ****  * @retval None
  85:Core/Src/freertos.c ****  */
  86:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  87:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 3


  88:Core/Src/freertos.c **** 
  89:Core/Src/freertos.c ****   /* USER CODE END Init */
  90:Core/Src/freertos.c **** 
  91:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  92:Core/Src/freertos.c ****   /* add mutexes, ... */
  93:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  94:Core/Src/freertos.c **** 
  95:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  96:Core/Src/freertos.c ****   /* add semaphores, ... */
  97:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  98:Core/Src/freertos.c **** 
  99:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 100:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 101:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 102:Core/Src/freertos.c **** 
 103:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 104:Core/Src/freertos.c ****   /* add queues, ... */
 105:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 106:Core/Src/freertos.c **** 
 107:Core/Src/freertos.c ****   /* Create the thread(s) */
 108:Core/Src/freertos.c ****   /* definition and creation of defaultTask */
 109:Core/Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 110:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 113:Core/Src/freertos.c ****   /* add threads, ... */
 114:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 115:Core/Src/freertos.c **** }
 116:Core/Src/freertos.c **** 
 117:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 118:Core/Src/freertos.c **** /**
 119:Core/Src/freertos.c ****  * @brief  Function implementing the defaultTask thread.
 120:Core/Src/freertos.c ****  * @param  argument: Not used
 121:Core/Src/freertos.c ****  * @retval None
 122:Core/Src/freertos.c ****  */
 123:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 124:Core/Src/freertos.c **** void StartDefaultTask(void const *argument) {
  29              		.loc 1 124 45 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35              		.loc 1 124 45 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  41              	.L2:
 125:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 126:Core/Src/freertos.c ****   /* Infinite loop */
 127:Core/Src/freertos.c ****   for (;;) {
  42              		.loc 1 127 3 is_stmt 1 view .LVU2
 128:Core/Src/freertos.c ****     state_step();
  43              		.loc 1 128 5 view .LVU3
  44 0002 FFF7FEFF 		bl	state_step
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 4


  45              	.LVL2:
 129:Core/Src/freertos.c ****     osDelay(50);
  46              		.loc 1 129 5 discriminator 1 view .LVU4
  47 0006 3220     		movs	r0, #50
  48 0008 FFF7FEFF 		bl	osDelay
  49              	.LVL3:
 127:Core/Src/freertos.c ****     state_step();
  50              		.loc 1 127 3 view .LVU5
  51 000c F9E7     		b	.L2
  52              		.cfi_endproc
  53              	.LFE246:
  55              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
  56              		.align	1
  57              		.global	vApplicationGetIdleTaskMemory
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  62              	vApplicationGetIdleTaskMemory:
  63              	.LVL4:
  64              	.LFB244:
  73:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
  65              		.loc 1 73 68 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  74:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  70              		.loc 1 74 3 view .LVU7
  74:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
  71              		.loc 1 74 25 is_stmt 0 view .LVU8
  72 0000 034B     		ldr	r3, .L5
  73 0002 0360     		str	r3, [r0]
  75:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  74              		.loc 1 75 3 is_stmt 1 view .LVU9
  75:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
  75              		.loc 1 75 27 is_stmt 0 view .LVU10
  76 0004 034B     		ldr	r3, .L5+4
  77 0006 0B60     		str	r3, [r1]
  76:Core/Src/freertos.c ****   /* place for user code */
  78              		.loc 1 76 3 is_stmt 1 view .LVU11
  76:Core/Src/freertos.c ****   /* place for user code */
  79              		.loc 1 76 25 is_stmt 0 view .LVU12
  80 0008 8023     		movs	r3, #128
  81 000a 1360     		str	r3, [r2]
  78:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
  82              		.loc 1 78 1 view .LVU13
  83 000c 7047     		bx	lr
  84              	.L6:
  85 000e 00BF     		.align	2
  86              	.L5:
  87 0010 00000000 		.word	xIdleTaskTCBBuffer
  88 0014 00000000 		.word	xIdleStack
  89              		.cfi_endproc
  90              	.LFE244:
  92              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  93              		.align	1
  94              		.global	MX_FREERTOS_Init
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 5


  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  99              	MX_FREERTOS_Init:
 100              	.LFB245:
  86:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 101              		.loc 1 86 29 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105 0000 10B5     		push	{r4, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 4, -8
 108              		.cfi_offset 14, -4
 109 0002 88B0     		sub	sp, sp, #32
 110              		.cfi_def_cfa_offset 40
 109:Core/Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 111              		.loc 1 109 3 view .LVU15
 112 0004 0DF1040C 		add	ip, sp, #4
 113 0008 074C     		ldr	r4, .L9
 114 000a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 115 000c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 116 0010 94E80700 		ldm	r4, {r0, r1, r2}
 117 0014 8CE80700 		stm	ip, {r0, r1, r2}
 110:Core/Src/freertos.c **** 
 118              		.loc 1 110 3 view .LVU16
 110:Core/Src/freertos.c **** 
 119              		.loc 1 110 23 is_stmt 0 view .LVU17
 120 0018 0021     		movs	r1, #0
 121 001a 01A8     		add	r0, sp, #4
 122 001c FFF7FEFF 		bl	osThreadCreate
 123              	.LVL5:
 110:Core/Src/freertos.c **** 
 124              		.loc 1 110 21 discriminator 1 view .LVU18
 125 0020 024B     		ldr	r3, .L9+4
 126 0022 1860     		str	r0, [r3]
 115:Core/Src/freertos.c **** 
 127              		.loc 1 115 1 view .LVU19
 128 0024 08B0     		add	sp, sp, #32
 129              		.cfi_def_cfa_offset 8
 130              		@ sp needed
 131 0026 10BD     		pop	{r4, pc}
 132              	.L10:
 133              		.align	2
 134              	.L9:
 135 0028 00000000 		.word	.LANCHOR0
 136 002c 00000000 		.word	defaultTaskHandle
 137              		.cfi_endproc
 138              	.LFE245:
 140              		.section	.rodata.str1.4,"aMS",%progbits,1
 141              		.align	2
 142              	.LC0:
 143 0000 64656661 		.ascii	"defaultTask\000"
 143      756C7454 
 143      61736B00 
 144              		.section	.bss.xIdleStack,"aw",%nobits
 145              		.align	2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 6


 148              	xIdleStack:
 149 0000 00000000 		.space	512
 149      00000000 
 149      00000000 
 149      00000000 
 149      00000000 
 150              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 151              		.align	2
 154              	xIdleTaskTCBBuffer:
 155 0000 00000000 		.space	84
 155      00000000 
 155      00000000 
 155      00000000 
 155      00000000 
 156              		.global	defaultTaskHandle
 157              		.section	.bss.defaultTaskHandle,"aw",%nobits
 158              		.align	2
 161              	defaultTaskHandle:
 162 0000 00000000 		.space	4
 163              		.section	.rodata
 164              		.align	2
 165              		.set	.LANCHOR0,. + 0
 166              	.LC2:
 167 0000 00000000 		.word	.LC0
 168 0004 00000000 		.word	StartDefaultTask
 169 0008 0000     		.short	0
 170 000a 0000     		.space	2
 171 000c 00000000 		.word	0
 172 0010 80000000 		.word	128
 173 0014 00000000 		.word	0
 174 0018 00000000 		.word	0
 175              		.text
 176              	.Letext0:
 177              		.file 2 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 178              		.file 3 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 179              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 180              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 181              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 182              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 183              		.file 8 "Controller/State/state.h"
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:21     .text.StartDefaultTask:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:27     .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:56     .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:62     .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:87     .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:154    .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:148    .bss.xIdleStack:00000000 xIdleStack
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:93     .text.MX_FREERTOS_Init:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:99     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:135    .text.MX_FREERTOS_Init:00000028 $d
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:161    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:141    .rodata.str1.4:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:145    .bss.xIdleStack:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:151    .bss.xIdleTaskTCBBuffer:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:158    .bss.defaultTaskHandle:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccWwxstr.s:164    .rodata:00000000 $d

UNDEFINED SYMBOLS
state_step
osDelay
osThreadCreate
