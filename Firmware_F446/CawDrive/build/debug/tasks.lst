ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTaskIsTaskSuspended:
  27              	.LVL0:
  28              	.LFB15:
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  29              		.loc 1 1806 2 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1807 2 view .LVU1
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1808 2 view .LVU2
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  36              		.loc 1 1814 3 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
  38              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1817 3 view .LVU5
  40              		.loc 1 1817 7 is_stmt 0 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1817 5 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1807 13 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1807 13 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU10
  54              	.LBB110:
  55              	.LBI110:
  56              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 34


   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 35


  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 36


 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 37


 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 191 30 view .LVU11
  58              	.LBB111:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  59              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  60              		.loc 2 195 2 view .LVU13
  61              		.syntax unified
  62              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              		.thumb
  70              		.syntax unified
  71              	.L3:
  72              	.LBE111:
  73              	.LBE110:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74              		.loc 1 1814 3 discriminator 3 view .LVU14
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  75              		.loc 1 1814 3 discriminator 3 view .LVU15
  76 001e FEE7     		b	.L3
  77              	.L9:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  78              		.loc 1 1820 4 view .LVU16
  79              		.loc 1 1820 8 is_stmt 0 view .LVU17
  80 0020 836A     		ldr	r3, [r0, #40]
  81              		.loc 1 1820 6 view .LVU18
  82 0022 064A     		ldr	r2, .L10+4
  83 0024 9342     		cmp	r3, r2
  84 0026 02D0     		beq	.L6
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  85              		.loc 1 1824 5 is_stmt 1 view .LVU19
  86              		.loc 1 1824 7 is_stmt 0 view .LVU20
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 38


  87 0028 1BB1     		cbz	r3, .L7
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  88              		.loc 1 1807 13 view .LVU21
  89 002a 0020     		movs	r0, #0
  90              	.LVL3:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  91              		.loc 1 1807 13 view .LVU22
  92 002c 7047     		bx	lr
  93              	.LVL4:
  94              	.L6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  95              		.loc 1 1807 13 view .LVU23
  96 002e 0020     		movs	r0, #0
  97              	.LVL5:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  98              		.loc 1 1807 13 view .LVU24
  99 0030 7047     		bx	lr
 100              	.LVL6:
 101              	.L7:
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 102              		.loc 1 1826 14 view .LVU25
 103 0032 0120     		movs	r0, #1
 104              	.LVL7:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 105              		.loc 1 1840 28 is_stmt 1 view .LVU26
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 106              		.loc 1 1843 3 view .LVU27
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 107              		.loc 1 1844 2 is_stmt 0 view .LVU28
 108 0034 7047     		bx	lr
 109              	.L11:
 110 0036 00BF     		.align	2
 111              	.L10:
 112 0038 00000000 		.word	xSuspendedTaskList
 113 003c 00000000 		.word	xPendingReadyList
 114              		.cfi_endproc
 115              	.LFE15:
 117              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 39


 121              		.thumb_func
 123              	prvResetNextTaskUnblockTime:
 124              	.LFB41:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 40


1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 41


1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 42


2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 43


2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 44


2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 45


2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 46


2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 47


2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 48


2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 49


2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 50


2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 51


2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 52


2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 53


2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 54


2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 55


2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 56


2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 57


2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 58


2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 59


2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 60


3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 61


3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 62


3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 63


3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 64


3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 65


3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 66


3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 67


3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 68


3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 69


3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 70


3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 71


3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 72


3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 73


3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 74


3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 75


3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 125              		.loc 1 3944 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 76


 130              		.loc 1 3945 1 view .LVU30
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 131              		.loc 1 3947 2 view .LVU31
 132              		.loc 1 3947 6 is_stmt 0 view .LVU32
 133 0000 084B     		ldr	r3, .L15
 134 0002 1B68     		ldr	r3, [r3]
 135 0004 1B68     		ldr	r3, [r3]
 136              		.loc 1 3947 4 view .LVU33
 137 0006 23B9     		cbnz	r3, .L13
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 138              		.loc 1 3953 3 is_stmt 1 view .LVU34
 139              		.loc 1 3953 24 is_stmt 0 view .LVU35
 140 0008 074B     		ldr	r3, .L15+4
 141 000a 4FF0FF32 		mov	r2, #-1
 142 000e 1A60     		str	r2, [r3]
 143 0010 7047     		bx	lr
 144              	.L13:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 145              		.loc 1 3961 3 is_stmt 1 view .LVU36
 146              		.loc 1 3961 15 is_stmt 0 view .LVU37
 147 0012 044B     		ldr	r3, .L15
 148 0014 1B68     		ldr	r3, [r3]
 149 0016 DB68     		ldr	r3, [r3, #12]
 150              		.loc 1 3961 13 view .LVU38
 151 0018 DB68     		ldr	r3, [r3, #12]
 152              	.LVL8:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 153              		.loc 1 3962 3 is_stmt 1 view .LVU39
 154              		.loc 1 3962 26 is_stmt 0 view .LVU40
 155 001a 5A68     		ldr	r2, [r3, #4]
 156              		.loc 1 3962 24 view .LVU41
 157 001c 024B     		ldr	r3, .L15+4
 158              	.LVL9:
 159              		.loc 1 3962 24 view .LVU42
 160 001e 1A60     		str	r2, [r3]
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 161              		.loc 1 3964 1 view .LVU43
 162 0020 7047     		bx	lr
 163              	.L16:
 164 0022 00BF     		.align	2
 165              	.L15:
 166 0024 00000000 		.word	pxDelayedTaskList
 167 0028 00000000 		.word	xNextTaskUnblockTime
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 77


 168              		.cfi_endproc
 169              	.LFE41:
 171              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	prvInitialiseNewTask:
 178              	.LVL10:
 179              	.LFB7:
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 180              		.loc 1 832 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 16, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 832 1 is_stmt 0 view .LVU45
 185 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 186              		.cfi_def_cfa_offset 32
 187              		.cfi_offset 4, -32
 188              		.cfi_offset 5, -28
 189              		.cfi_offset 6, -24
 190              		.cfi_offset 7, -20
 191              		.cfi_offset 8, -16
 192              		.cfi_offset 9, -12
 193              		.cfi_offset 10, -8
 194              		.cfi_offset 14, -4
 195 0004 0746     		mov	r7, r0
 196 0006 9846     		mov	r8, r3
 197 0008 089D     		ldr	r5, [sp, #32]
 198 000a DDF82490 		ldr	r9, [sp, #36]
 199 000e 0A9C     		ldr	r4, [sp, #40]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 200              		.loc 1 833 1 is_stmt 1 view .LVU46
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201              		.loc 1 834 1 view .LVU47
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 202              		.loc 1 864 3 view .LVU48
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 203              		.loc 1 864 29 is_stmt 0 view .LVU49
 204 0010 266B     		ldr	r6, [r4, #48]
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 205              		.loc 1 864 38 view .LVU50
 206 0012 02F18042 		add	r2, r2, #1073741824
 207              	.LVL11:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 864 38 view .LVU51
 209 0016 013A     		subs	r2, r2, #1
 210              	.LVL12:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 211              		.loc 1 864 16 view .LVU52
 212 0018 06EB8206 		add	r6, r6, r2, lsl #2
 213              	.LVL13:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214              		.loc 1 865 3 is_stmt 1 view .LVU53
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 215              		.loc 1 865 81 is_stmt 0 view .LVU54
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 78


 216 001c 26F00706 		bic	r6, r6, #7
 217              	.LVL14:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 868 3 is_stmt 1 view .LVU55
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 219              		.loc 1 868 124 discriminator 2 view .LVU56
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 220              		.loc 1 892 2 view .LVU57
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 221              		.loc 1 892 4 is_stmt 0 view .LVU58
 222 0020 C1B3     		cbz	r1, .L29
 223 0022 0846     		mov	r0, r1
 224              	.LVL15:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 225              		.loc 1 894 10 view .LVU59
 226 0024 4FF0000C 		mov	ip, #0
 227              	.LVL16:
 228              	.L18:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 229              		.loc 1 894 33 is_stmt 1 discriminator 1 view .LVU60
 230 0028 BCF10F0F 		cmp	ip, #15
 231 002c 09D8     		bhi	.L20
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 232              		.loc 1 896 4 view .LVU61
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233              		.loc 1 896 38 is_stmt 0 view .LVU62
 234 002e 10F80C20 		ldrb	r2, [r0, ip]	@ zero_extendqisi2
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 235              		.loc 1 896 30 view .LVU63
 236 0032 04EB0C03 		add	r3, r4, ip
 237 0036 83F83420 		strb	r2, [r3, #52]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 238              		.loc 1 901 4 is_stmt 1 view .LVU64
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 239              		.loc 1 901 6 is_stmt 0 view .LVU65
 240 003a 12B1     		cbz	r2, .L20
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 241              		.loc 1 907 29 is_stmt 1 view .LVU66
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 242              		.loc 1 894 77 discriminator 2 view .LVU67
 243 003c 0CF1010C 		add	ip, ip, #1
 244              	.LVL17:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 245              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU68
 246 0040 F2E7     		b	.L18
 247              	.LVL18:
 248              	.L20:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 249              		.loc 1 913 3 is_stmt 1 view .LVU69
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 250              		.loc 1 913 55 is_stmt 0 view .LVU70
 251 0042 0023     		movs	r3, #0
 252 0044 84F84330 		strb	r3, [r4, #67]
 253              	.LVL19:
 254              	.L22:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 255              		.loc 1 924 2 is_stmt 1 view .LVU71
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 79


 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 256              		.loc 1 924 4 is_stmt 0 view .LVU72
 257 0048 062D     		cmp	r5, #6
 258 004a 00D9     		bls	.L23
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 259              		.loc 1 926 14 view .LVU73
 260 004c 0625     		movs	r5, #6
 261              	.L23:
 262              	.LVL20:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 263              		.loc 1 930 27 is_stmt 1 view .LVU74
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 264              		.loc 1 933 2 view .LVU75
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 933 23 is_stmt 0 view .LVU76
 266 004e E562     		str	r5, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 267              		.loc 1 936 3 is_stmt 1 view .LVU77
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 268              		.loc 1 936 28 is_stmt 0 view .LVU78
 269 0050 6564     		str	r5, [r4, #68]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 270              		.loc 1 937 3 is_stmt 1 view .LVU79
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 271              		.loc 1 937 27 is_stmt 0 view .LVU80
 272 0052 4FF0000A 		mov	r10, #0
 273 0056 C4F848A0 		str	r10, [r4, #72]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 274              		.loc 1 941 2 is_stmt 1 view .LVU81
 275 005a 201D     		adds	r0, r4, #4
 276 005c FFF7FEFF 		bl	vListInitialiseItem
 277              	.LVL21:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 278              		.loc 1 942 2 view .LVU82
 279 0060 04F11800 		add	r0, r4, #24
 280 0064 FFF7FEFF 		bl	vListInitialiseItem
 281              	.LVL22:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 282              		.loc 1 946 2 view .LVU83
 283 0068 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 284              		.loc 1 949 2 view .LVU84
 285 006a C5F10705 		rsb	r5, r5, #7
 286              	.LVL23:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 287              		.loc 1 949 2 is_stmt 0 view .LVU85
 288 006e A561     		str	r5, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 289              		.loc 1 950 2 is_stmt 1 view .LVU86
 290 0070 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 291              		.loc 1 977 3 view .LVU87
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 292              		.loc 1 992 3 view .LVU88
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 293              		.loc 1 992 29 is_stmt 0 view .LVU89
 294 0072 C4F84CA0 		str	r10, [r4, #76]
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 80


 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 295              		.loc 1 993 3 is_stmt 1 view .LVU90
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 296              		.loc 1 993 27 is_stmt 0 view .LVU91
 297 0076 84F850A0 		strb	r10, [r4, #80]
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 298              		.loc 1 1058 4 is_stmt 1 view .LVU92
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 299              		.loc 1 1058 29 is_stmt 0 view .LVU93
 300 007a 4246     		mov	r2, r8
 301 007c 3946     		mov	r1, r7
 302 007e 3046     		mov	r0, r6
 303 0080 FFF7FEFF 		bl	pxPortInitialiseStack
 304              	.LVL24:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 305              		.loc 1 1058 27 discriminator 1 view .LVU94
 306 0084 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 307              		.loc 1 1064 2 is_stmt 1 view .LVU95
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 308              		.loc 1 1064 4 is_stmt 0 view .LVU96
 309 0086 B9F1000F 		cmp	r9, #0
 310 008a 01D0     		beq	.L17
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 311              		.loc 1 1068 3 is_stmt 1 view .LVU97
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 312              		.loc 1 1068 18 is_stmt 0 view .LVU98
 313 008c C9F80040 		str	r4, [r9]
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 314              		.loc 1 1072 27 is_stmt 1 view .LVU99
 315              	.L17:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 316              		.loc 1 1074 1 is_stmt 0 view .LVU100
 317 0090 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 318              	.LVL25:
 319              	.L29:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 320              		.loc 1 919 3 is_stmt 1 view .LVU101
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 321              		.loc 1 919 29 is_stmt 0 view .LVU102
 322 0094 0023     		movs	r3, #0
 323              	.LVL26:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 324              		.loc 1 919 29 view .LVU103
 325 0096 84F83430 		strb	r3, [r4, #52]
 326 009a D5E7     		b	.L22
 327              		.cfi_endproc
 328              	.LFE7:
 330              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 331              		.align	1
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
 336              	prvInitialiseTaskLists:
 337              	.LFB38:
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 338              		.loc 1 3608 1 is_stmt 1 view -0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 81


 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 38B5     		push	{r3, r4, r5, lr}
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 3, -16
 345              		.cfi_offset 4, -12
 346              		.cfi_offset 5, -8
 347              		.cfi_offset 14, -4
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348              		.loc 1 3609 1 view .LVU105
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 349              		.loc 1 3611 2 view .LVU106
 350              	.LVL27:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 351              		.loc 1 3611 18 is_stmt 0 view .LVU107
 352 0002 0024     		movs	r4, #0
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 353              		.loc 1 3611 2 view .LVU108
 354 0004 07E0     		b	.L31
 355              	.LVL28:
 356              	.L32:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 357              		.loc 1 3613 3 is_stmt 1 view .LVU109
 358 0006 04EB8402 		add	r2, r4, r4, lsl #2
 359 000a 9300     		lsls	r3, r2, #2
 360 000c 0E48     		ldr	r0, .L34
 361 000e 1844     		add	r0, r0, r3
 362 0010 FFF7FEFF 		bl	vListInitialise
 363              	.LVL29:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 364              		.loc 1 3611 101 discriminator 3 view .LVU110
 365 0014 0134     		adds	r4, r4, #1
 366              	.LVL30:
 367              	.L31:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 368              		.loc 1 3611 51 discriminator 1 view .LVU111
 369 0016 062C     		cmp	r4, #6
 370 0018 F5D9     		bls	.L32
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 371              		.loc 1 3616 2 view .LVU112
 372 001a 0C4D     		ldr	r5, .L34+4
 373 001c 2846     		mov	r0, r5
 374 001e FFF7FEFF 		bl	vListInitialise
 375              	.LVL31:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 376              		.loc 1 3617 2 view .LVU113
 377 0022 0B4C     		ldr	r4, .L34+8
 378              	.LVL32:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 379              		.loc 1 3617 2 is_stmt 0 view .LVU114
 380 0024 2046     		mov	r0, r4
 381 0026 FFF7FEFF 		bl	vListInitialise
 382              	.LVL33:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383              		.loc 1 3618 2 is_stmt 1 view .LVU115
 384 002a 0A48     		ldr	r0, .L34+12
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 82


 385 002c FFF7FEFF 		bl	vListInitialise
 386              	.LVL34:
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 387              		.loc 1 3622 3 view .LVU116
 388 0030 0948     		ldr	r0, .L34+16
 389 0032 FFF7FEFF 		bl	vListInitialise
 390              	.LVL35:
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 391              		.loc 1 3628 3 view .LVU117
 392 0036 0948     		ldr	r0, .L34+20
 393 0038 FFF7FEFF 		bl	vListInitialise
 394              	.LVL36:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 395              		.loc 1 3634 2 view .LVU118
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 396              		.loc 1 3634 20 is_stmt 0 view .LVU119
 397 003c 084B     		ldr	r3, .L34+24
 398 003e 1D60     		str	r5, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 399              		.loc 1 3635 2 is_stmt 1 view .LVU120
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 400              		.loc 1 3635 28 is_stmt 0 view .LVU121
 401 0040 084B     		ldr	r3, .L34+28
 402 0042 1C60     		str	r4, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403              		.loc 1 3636 1 view .LVU122
 404 0044 38BD     		pop	{r3, r4, r5, pc}
 405              	.L35:
 406 0046 00BF     		.align	2
 407              	.L34:
 408 0048 00000000 		.word	pxReadyTasksLists
 409 004c 00000000 		.word	xDelayedTaskList1
 410 0050 00000000 		.word	xDelayedTaskList2
 411 0054 00000000 		.word	xPendingReadyList
 412 0058 00000000 		.word	xTasksWaitingTermination
 413 005c 00000000 		.word	xSuspendedTaskList
 414 0060 00000000 		.word	pxDelayedTaskList
 415 0064 00000000 		.word	pxOverflowDelayedTaskList
 416              		.cfi_endproc
 417              	.LFE38:
 419              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 420              		.align	1
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	prvAddNewTaskToReadyList:
 426              	.LVL37:
 427              	.LFB8:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 428              		.loc 1 1078 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 432              		.loc 1 1078 1 is_stmt 0 view .LVU124
 433 0000 10B5     		push	{r4, lr}
 434              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 83


 435              		.cfi_offset 4, -8
 436              		.cfi_offset 14, -4
 437 0002 0446     		mov	r4, r0
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 438              		.loc 1 1081 2 is_stmt 1 view .LVU125
 439 0004 FFF7FEFF 		bl	vPortEnterCritical
 440              	.LVL38:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 441              		.loc 1 1083 3 view .LVU126
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 442              		.loc 1 1083 25 is_stmt 0 view .LVU127
 443 0008 214A     		ldr	r2, .L43
 444 000a 1368     		ldr	r3, [r2]
 445 000c 0133     		adds	r3, r3, #1
 446 000e 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 447              		.loc 1 1084 3 is_stmt 1 view .LVU128
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 448              		.loc 1 1084 20 is_stmt 0 view .LVU129
 449 0010 204B     		ldr	r3, .L43+4
 450 0012 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 451              		.loc 1 1084 5 view .LVU130
 452 0014 5BB1     		cbz	r3, .L41
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 453              		.loc 1 1107 4 is_stmt 1 view .LVU131
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 454              		.loc 1 1107 26 is_stmt 0 view .LVU132
 455 0016 204B     		ldr	r3, .L43+8
 456 0018 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 457              		.loc 1 1107 6 view .LVU133
 458 001a 6BB9     		cbnz	r3, .L38
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 459              		.loc 1 1109 5 is_stmt 1 view .LVU134
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 460              		.loc 1 1109 21 is_stmt 0 view .LVU135
 461 001c 1D4B     		ldr	r3, .L43+4
 462 001e 1B68     		ldr	r3, [r3]
 463 0020 DA6A     		ldr	r2, [r3, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 464              		.loc 1 1109 45 view .LVU136
 465 0022 E36A     		ldr	r3, [r4, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 466              		.loc 1 1109 7 view .LVU137
 467 0024 9A42     		cmp	r2, r3
 468 0026 07D8     		bhi	.L38
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 469              		.loc 1 1111 6 is_stmt 1 view .LVU138
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 470              		.loc 1 1111 19 is_stmt 0 view .LVU139
 471 0028 1A4B     		ldr	r3, .L43+4
 472 002a 1C60     		str	r4, [r3]
 473 002c 04E0     		b	.L38
 474              	.L41:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475              		.loc 1 1088 4 is_stmt 1 view .LVU140
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 84


1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 476              		.loc 1 1088 17 is_stmt 0 view .LVU141
 477 002e 194B     		ldr	r3, .L43+4
 478 0030 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 479              		.loc 1 1090 4 is_stmt 1 view .LVU142
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 480              		.loc 1 1090 31 is_stmt 0 view .LVU143
 481 0032 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 482              		.loc 1 1090 6 view .LVU144
 483 0034 012B     		cmp	r3, #1
 484 0036 28D0     		beq	.L42
 485              	.L38:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 486              		.loc 1 1120 29 is_stmt 1 view .LVU145
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487              		.loc 1 1124 3 view .LVU146
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 488              		.loc 1 1124 15 is_stmt 0 view .LVU147
 489 0038 184A     		ldr	r2, .L43+12
 490 003a 1368     		ldr	r3, [r2]
 491 003c 0133     		adds	r3, r3, #1
 492 003e 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493              		.loc 1 1132 31 is_stmt 1 view .LVU148
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 494              		.loc 1 1134 3 view .LVU149
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495              		.loc 1 1134 3 view .LVU150
 496 0040 E06A     		ldr	r0, [r4, #44]
 497 0042 0123     		movs	r3, #1
 498 0044 8340     		lsls	r3, r3, r0
 499 0046 164A     		ldr	r2, .L43+16
 500 0048 1168     		ldr	r1, [r2]
 501 004a 0B43     		orrs	r3, r3, r1
 502 004c 1360     		str	r3, [r2]
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503              		.loc 1 1134 3 view .LVU151
 504 004e 00EB8000 		add	r0, r0, r0, lsl #2
 505 0052 211D     		adds	r1, r4, #4
 506 0054 134B     		ldr	r3, .L43+20
 507 0056 03EB8000 		add	r0, r3, r0, lsl #2
 508 005a FFF7FEFF 		bl	vListInsertEnd
 509              	.LVL39:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510              		.loc 1 1134 36 discriminator 1 view .LVU152
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 511              		.loc 1 1136 3 view .LVU153
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512              		.loc 1 1138 2 view .LVU154
 513 005e FFF7FEFF 		bl	vPortExitCritical
 514              	.LVL40:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 515              		.loc 1 1140 2 view .LVU155
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 516              		.loc 1 1140 24 is_stmt 0 view .LVU156
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 85


 517 0062 0D4B     		ldr	r3, .L43+8
 518 0064 1B68     		ldr	r3, [r3]
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 519              		.loc 1 1140 4 view .LVU157
 520 0066 7BB1     		cbz	r3, .L36
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 521              		.loc 1 1144 3 is_stmt 1 view .LVU158
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 522              		.loc 1 1144 19 is_stmt 0 view .LVU159
 523 0068 0A4B     		ldr	r3, .L43+4
 524 006a 1B68     		ldr	r3, [r3]
 525 006c DA6A     		ldr	r2, [r3, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 526              		.loc 1 1144 42 view .LVU160
 527 006e E36A     		ldr	r3, [r4, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 528              		.loc 1 1144 5 view .LVU161
 529 0070 9A42     		cmp	r2, r3
 530 0072 09D2     		bcs	.L36
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 531              		.loc 1 1146 4 is_stmt 1 view .LVU162
 532 0074 4FF0E023 		mov	r3, #-536813568
 533 0078 4FF08052 		mov	r2, #268435456
 534 007c C3F8042D 		str	r2, [r3, #3332]
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 535              		.loc 1 1146 4 view .LVU163
 536              		.syntax unified
 537              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 538 0080 BFF34F8F 		dsb
 539              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 540              		.loc 1 1146 4 view .LVU164
 541              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 542 0084 BFF36F8F 		isb
 543              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 544              		.loc 1 1146 35 view .LVU165
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 545              		.loc 1 1155 27 view .LVU166
 546              		.thumb
 547              		.syntax unified
 548              	.L36:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 549              		.loc 1 1157 1 is_stmt 0 view .LVU167
 550 0088 10BD     		pop	{r4, pc}
 551              	.LVL41:
 552              	.L42:
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 553              		.loc 1 1095 5 is_stmt 1 view .LVU168
 554 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 555              	.LVL42:
 556 008e D3E7     		b	.L38
 557              	.L44:
 558              		.align	2
 559              	.L43:
 560 0090 00000000 		.word	uxCurrentNumberOfTasks
 561 0094 00000000 		.word	pxCurrentTCB
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 86


 562 0098 00000000 		.word	xSchedulerRunning
 563 009c 00000000 		.word	uxTaskNumber
 564 00a0 00000000 		.word	uxTopReadyPriority
 565 00a4 00000000 		.word	pxReadyTasksLists
 566              		.cfi_endproc
 567              	.LFE8:
 569              		.section	.text.prvDeleteTCB,"ax",%progbits
 570              		.align	1
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	prvDeleteTCB:
 576              	.LVL43:
 577              	.LFB40:
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 578              		.loc 1 3888 2 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 582              		.loc 1 3888 2 is_stmt 0 view .LVU170
 583 0000 10B5     		push	{r4, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 587 0002 0446     		mov	r4, r0
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 588              		.loc 1 3892 3 is_stmt 1 view .LVU171
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 589              		.loc 1 3916 4 view .LVU172
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 590              		.loc 1 3916 13 is_stmt 0 view .LVU173
 591 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 592              		.loc 1 3916 6 view .LVU174
 593 0008 63B1     		cbz	r3, .L51
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 594              		.loc 1 3923 9 is_stmt 1 view .LVU175
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 595              		.loc 1 3923 11 is_stmt 0 view .LVU176
 596 000a 012B     		cmp	r3, #1
 597 000c 11D0     		beq	.L52
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 598              		.loc 1 3933 5 is_stmt 1 view .LVU177
 599 000e 022B     		cmp	r3, #2
 600 0010 0ED0     		beq	.L45
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 601              		.loc 1 3933 5 discriminator 1 view .LVU178
 602              	.LBB112:
 603              	.LBI112:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 604              		.loc 2 191 30 view .LVU179
 605              	.LBB113:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 606              		.loc 2 193 1 view .LVU180
 607              		.loc 2 195 2 view .LVU181
 608              		.syntax unified
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 87


 609              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 610 0012 4FF05003 			mov r3, #80												
 611 0016 83F31188 		msr basepri, r3											
 612 001a BFF36F8F 		isb														
 613 001e BFF34F8F 		dsb														
 614              	
 615              	@ 0 "" 2
 616              		.thumb
 617              		.syntax unified
 618              	.L49:
 619              	.LBE113:
 620              	.LBE112:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 621              		.loc 1 3933 5 discriminator 3 view .LVU182
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 622              		.loc 1 3933 5 discriminator 3 view .LVU183
 623 0022 FEE7     		b	.L49
 624              	.L51:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 625              		.loc 1 3920 5 view .LVU184
 626 0024 006B     		ldr	r0, [r0, #48]
 627              	.LVL44:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 628              		.loc 1 3920 5 is_stmt 0 view .LVU185
 629 0026 FFF7FEFF 		bl	vPortFree
 630              	.LVL45:
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 631              		.loc 1 3921 5 is_stmt 1 view .LVU186
 632 002a 2046     		mov	r0, r4
 633 002c FFF7FEFF 		bl	vPortFree
 634              	.LVL46:
 635              	.L45:
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636              		.loc 1 3938 2 is_stmt 0 view .LVU187
 637 0030 10BD     		pop	{r4, pc}
 638              	.LVL47:
 639              	.L52:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 640              		.loc 1 3927 5 is_stmt 1 view .LVU188
 641 0032 FFF7FEFF 		bl	vPortFree
 642              	.LVL48:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 643              		.loc 1 3927 5 is_stmt 0 view .LVU189
 644 0036 FBE7     		b	.L45
 645              		.cfi_endproc
 646              	.LFE40:
 648              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 649              		.align	1
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	prvCheckTasksWaitingTermination:
 655              	.LFB39:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656              		.loc 1 3640 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 88


 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              	.LBB114:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 661              		.loc 1 3646 3 view .LVU191
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 662              		.loc 1 3650 3 view .LVU192
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 663              		.loc 1 3650 39 view .LVU193
 664 0000 0F4B     		ldr	r3, .L60
 665 0002 1B68     		ldr	r3, [r3]
 666 0004 D3B1     		cbz	r3, .L59
 667              	.LBE114:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 668              		.loc 1 3640 1 is_stmt 0 view .LVU194
 669 0006 10B5     		push	{r4, lr}
 670              		.cfi_def_cfa_offset 8
 671              		.cfi_offset 4, -8
 672              		.cfi_offset 14, -4
 673              	.L55:
 674              	.LBB115:
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 675              		.loc 1 3652 4 is_stmt 1 view .LVU195
 676 0008 FFF7FEFF 		bl	vPortEnterCritical
 677              	.LVL49:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 678              		.loc 1 3654 5 view .LVU196
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 679              		.loc 1 3654 13 is_stmt 0 view .LVU197
 680 000c 0D4B     		ldr	r3, .L60+4
 681 000e DB68     		ldr	r3, [r3, #12]
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 682              		.loc 1 3654 11 view .LVU198
 683 0010 DC68     		ldr	r4, [r3, #12]
 684              	.LVL50:
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 685              		.loc 1 3655 5 is_stmt 1 view .LVU199
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 686              		.loc 1 3655 14 is_stmt 0 view .LVU200
 687 0012 201D     		adds	r0, r4, #4
 688 0014 FFF7FEFF 		bl	uxListRemove
 689              	.LVL51:
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 690              		.loc 1 3656 5 is_stmt 1 view .LVU201
 691 0018 0B4A     		ldr	r2, .L60+8
 692 001a 1368     		ldr	r3, [r2]
 693 001c 013B     		subs	r3, r3, #1
 694 001e 1360     		str	r3, [r2]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 695              		.loc 1 3657 5 view .LVU202
 696 0020 074A     		ldr	r2, .L60
 697 0022 1368     		ldr	r3, [r2]
 698 0024 013B     		subs	r3, r3, #1
 699 0026 1360     		str	r3, [r2]
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 700              		.loc 1 3659 4 view .LVU203
 701 0028 FFF7FEFF 		bl	vPortExitCritical
 702              	.LVL52:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 89


3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 703              		.loc 1 3661 4 view .LVU204
 704 002c 2046     		mov	r0, r4
 705 002e FFF7FEFF 		bl	prvDeleteTCB
 706              	.LVL53:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 707              		.loc 1 3650 39 view .LVU205
 708 0032 034B     		ldr	r3, .L60
 709 0034 1B68     		ldr	r3, [r3]
 710 0036 002B     		cmp	r3, #0
 711 0038 E6D1     		bne	.L55
 712              	.LBE115:
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 713              		.loc 1 3665 1 is_stmt 0 view .LVU206
 714 003a 10BD     		pop	{r4, pc}
 715              	.LVL54:
 716              	.L59:
 717              		.cfi_def_cfa_offset 0
 718              		.cfi_restore 4
 719              		.cfi_restore 14
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 720              		.loc 1 3665 1 view .LVU207
 721 003c 7047     		bx	lr
 722              	.L61:
 723 003e 00BF     		.align	2
 724              	.L60:
 725 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 726 0044 00000000 		.word	xTasksWaitingTermination
 727 0048 00000000 		.word	uxCurrentNumberOfTasks
 728              		.cfi_endproc
 729              	.LFE39:
 731              		.section	.text.prvIdleTask,"ax",%progbits
 732              		.align	1
 733              		.syntax unified
 734              		.thumb
 735              		.thumb_func
 737              	prvIdleTask:
 738              	.LFB37:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 739              		.loc 1 3393 1 is_stmt 1 view -0
 740              		.cfi_startproc
 741              		@ Volatile: function does not return.
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              	.LVL55:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 745              		.loc 1 3393 1 is_stmt 0 view .LVU209
 746 0000 08B5     		push	{r3, lr}
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 3, -8
 749              		.cfi_offset 14, -4
 750              	.LVL56:
 751              	.L63:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 752              		.loc 1 3395 2 is_stmt 1 view .LVU210
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753              		.loc 1 3403 64 view .LVU211
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 90


3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 754              		.loc 1 3405 2 view .LVU212
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 755              		.loc 1 3409 3 view .LVU213
 756 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 757              	.LVL57:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 758              		.loc 1 3432 4 view .LVU214
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 759              		.loc 1 3432 8 is_stmt 0 view .LVU215
 760 0006 074B     		ldr	r3, .L66
 761 0008 1B68     		ldr	r3, [r3]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 762              		.loc 1 3432 6 view .LVU216
 763 000a 012B     		cmp	r3, #1
 764 000c F9D9     		bls	.L63
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 765              		.loc 1 3434 5 is_stmt 1 view .LVU217
 766 000e 4FF0E023 		mov	r3, #-536813568
 767 0012 4FF08052 		mov	r2, #268435456
 768 0016 C3F8042D 		str	r2, [r3, #3332]
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 769              		.loc 1 3434 5 view .LVU218
 770              		.syntax unified
 771              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 772 001a BFF34F8F 		dsb
 773              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 774              		.loc 1 3434 5 view .LVU219
 775              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 776 001e BFF36F8F 		isb
 777              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 778              		.loc 1 3434 16 view .LVU220
 779              		.thumb
 780              		.syntax unified
 781 0022 EEE7     		b	.L63
 782              	.L67:
 783              		.align	2
 784              	.L66:
 785 0024 00000000 		.word	pxReadyTasksLists
 786              		.cfi_endproc
 787              	.LFE37:
 789              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 790              		.align	1
 791              		.syntax unified
 792              		.thumb
 793              		.thumb_func
 795              	prvAddCurrentTaskToDelayedList:
 796              	.LVL58:
 797              	.LFB56:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 91


3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 92


4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 93


4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 94


4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 95


4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 96


4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 97


4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 98


4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 99


4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 100


4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 101


4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 102


4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 103


4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 104


4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 105


4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 106


4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 107


4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 108


4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 109


4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 110


5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 111


5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 112


5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 798              		.loc 1 5178 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		.loc 1 5178 1 is_stmt 0 view .LVU222
 803 0000 70B5     		push	{r4, r5, r6, lr}
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 4, -16
 806              		.cfi_offset 5, -12
 807              		.cfi_offset 6, -8
 808              		.cfi_offset 14, -4
 809 0002 0446     		mov	r4, r0
 810 0004 0D46     		mov	r5, r1
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 811              		.loc 1 5179 1 is_stmt 1 view .LVU223
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 812              		.loc 1 5180 1 view .LVU224
 813              		.loc 1 5180 18 is_stmt 0 view .LVU225
 814 0006 1D4B     		ldr	r3, .L75
 815 0008 1E68     		ldr	r6, [r3]
 816              	.LVL59:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 817              		.loc 1 5193 2 is_stmt 1 view .LVU226
 818              		.loc 1 5193 35 is_stmt 0 view .LVU227
 819 000a 1D4B     		ldr	r3, .L75+4
 820 000c 1868     		ldr	r0, [r3]
 821              	.LVL60:
 822              		.loc 1 5193 6 view .LVU228
 823 000e 0430     		adds	r0, r0, #4
 824 0010 FFF7FEFF 		bl	uxListRemove
 825              	.LVL61:
 826              		.loc 1 5193 4 discriminator 1 view .LVU229
 827 0014 48B9     		cbnz	r0, .L69
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 113


5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 828              		.loc 1 5197 3 is_stmt 1 view .LVU230
 829 0016 1A4B     		ldr	r3, .L75+4
 830 0018 1B68     		ldr	r3, [r3]
 831 001a DB6A     		ldr	r3, [r3, #44]
 832 001c 0122     		movs	r2, #1
 833 001e 9A40     		lsls	r2, r2, r3
 834 0020 1849     		ldr	r1, .L75+8
 835 0022 0B68     		ldr	r3, [r1]
 836 0024 23EA0203 		bic	r3, r3, r2
 837 0028 0B60     		str	r3, [r1]
 838              	.L69:
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 839              		.loc 1 5201 27 view .LVU231
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 840              		.loc 1 5206 3 view .LVU232
 841              		.loc 1 5206 5 is_stmt 0 view .LVU233
 842 002a B4F1FF3F 		cmp	r4, #-1
 843 002e 0DD0     		beq	.L74
 844              	.L70:
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 845              		.loc 1 5218 4 is_stmt 1 view .LVU234
 846              		.loc 1 5218 16 is_stmt 0 view .LVU235
 847 0030 3444     		add	r4, r4, r6
 848              	.LVL62:
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 849              		.loc 1 5221 4 is_stmt 1 view .LVU236
 850 0032 134B     		ldr	r3, .L75+4
 851 0034 1B68     		ldr	r3, [r3]
 852 0036 5C60     		str	r4, [r3, #4]
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 853              		.loc 1 5223 4 view .LVU237
 854              		.loc 1 5223 6 is_stmt 0 view .LVU238
 855 0038 A642     		cmp	r6, r4
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 114


 856 003a 10D9     		bls	.L72
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 857              		.loc 1 5227 5 is_stmt 1 view .LVU239
 858 003c 124B     		ldr	r3, .L75+12
 859 003e 1868     		ldr	r0, [r3]
 860              		.loc 1 5227 60 is_stmt 0 view .LVU240
 861 0040 0F4B     		ldr	r3, .L75+4
 862 0042 1968     		ldr	r1, [r3]
 863              		.loc 1 5227 5 view .LVU241
 864 0044 0431     		adds	r1, r1, #4
 865 0046 FFF7FEFF 		bl	vListInsert
 866              	.LVL63:
 867              	.L68:
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 115


5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 868              		.loc 1 5286 1 view .LVU242
 869 004a 70BD     		pop	{r4, r5, r6, pc}
 870              	.LVL64:
 871              	.L74:
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872              		.loc 1 5206 41 discriminator 1 view .LVU243
 873 004c 002D     		cmp	r5, #0
 874 004e EFD0     		beq	.L70
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 875              		.loc 1 5211 4 is_stmt 1 view .LVU244
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876              		.loc 1 5211 56 is_stmt 0 view .LVU245
 877 0050 0B4B     		ldr	r3, .L75+4
 878 0052 1968     		ldr	r1, [r3]
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 879              		.loc 1 5211 4 view .LVU246
 880 0054 0431     		adds	r1, r1, #4
 881 0056 0D48     		ldr	r0, .L75+16
 882 0058 FFF7FEFF 		bl	vListInsertEnd
 883              	.LVL65:
 884 005c F5E7     		b	.L68
 885              	.LVL66:
 886              	.L72:
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 887              		.loc 1 5233 5 is_stmt 1 view .LVU247
 888 005e 0C4B     		ldr	r3, .L75+20
 889 0060 1868     		ldr	r0, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 890              		.loc 1 5233 52 is_stmt 0 view .LVU248
 891 0062 074B     		ldr	r3, .L75+4
 892 0064 1968     		ldr	r1, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 893              		.loc 1 5233 5 view .LVU249
 894 0066 0431     		adds	r1, r1, #4
 895 0068 FFF7FEFF 		bl	vListInsert
 896              	.LVL67:
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 897              		.loc 1 5238 5 is_stmt 1 view .LVU250
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 116


 898              		.loc 1 5238 21 is_stmt 0 view .LVU251
 899 006c 094B     		ldr	r3, .L75+24
 900 006e 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 901              		.loc 1 5238 7 view .LVU252
 902 0070 A342     		cmp	r3, r4
 903 0072 EAD9     		bls	.L68
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 904              		.loc 1 5240 6 is_stmt 1 view .LVU253
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 905              		.loc 1 5240 27 is_stmt 0 view .LVU254
 906 0074 074B     		ldr	r3, .L75+24
 907 0076 1C60     		str	r4, [r3]
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 908              		.loc 1 5244 30 is_stmt 1 view .LVU255
 909              		.loc 1 5286 1 is_stmt 0 view .LVU256
 910 0078 E7E7     		b	.L68
 911              	.L76:
 912 007a 00BF     		.align	2
 913              	.L75:
 914 007c 00000000 		.word	xTickCount
 915 0080 00000000 		.word	pxCurrentTCB
 916 0084 00000000 		.word	uxTopReadyPriority
 917 0088 00000000 		.word	pxOverflowDelayedTaskList
 918 008c 00000000 		.word	xSuspendedTaskList
 919 0090 00000000 		.word	pxDelayedTaskList
 920 0094 00000000 		.word	xNextTaskUnblockTime
 921              		.cfi_endproc
 922              	.LFE56:
 924              		.section	.text.xTaskCreateStatic,"ax",%progbits
 925              		.align	1
 926              		.global	xTaskCreateStatic
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 931              	xTaskCreateStatic:
 932              	.LVL68:
 933              	.LFB5:
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 934              		.loc 1 588 2 is_stmt 1 view -0
 935              		.cfi_startproc
 936              		@ args = 12, pretend = 0, frame = 8
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 938              		.loc 1 588 2 is_stmt 0 view .LVU258
 939 0000 30B5     		push	{r4, r5, lr}
 940              		.cfi_def_cfa_offset 12
 941              		.cfi_offset 4, -12
 942              		.cfi_offset 5, -8
 943              		.cfi_offset 14, -4
 944 0002 87B0     		sub	sp, sp, #28
 945              		.cfi_def_cfa_offset 40
 946 0004 0B9C     		ldr	r4, [sp, #44]
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 947              		.loc 1 589 2 is_stmt 1 view .LVU259
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948              		.loc 1 590 2 view .LVU260
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 117


 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 949              		.loc 1 592 3 view .LVU261
 950 0006 7CB1     		cbz	r4, .L85
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 951              		.loc 1 592 41 discriminator 2 view .LVU262
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952              		.loc 1 593 3 view .LVU263
 953 0008 0C9D     		ldr	r5, [sp, #48]
 954 000a B5B1     		cbz	r5, .L86
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 955              		.loc 1 593 39 discriminator 2 view .LVU264
 956              	.LBB116:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 957              		.loc 1 600 4 view .LVU265
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 958              		.loc 1 600 20 is_stmt 0 view .LVU266
 959 000c 5425     		movs	r5, #84
 960 000e 0495     		str	r5, [sp, #16]
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 961              		.loc 1 601 4 is_stmt 1 view .LVU267
 962 0010 049D     		ldr	r5, [sp, #16]
 963 0012 542D     		cmp	r5, #84
 964 0014 1AD0     		beq	.L82
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 965              		.loc 1 601 4 discriminator 1 view .LVU268
 966              	.LBB117:
 967              	.LBI117:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 968              		.loc 2 191 30 view .LVU269
 969              	.LBB118:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 970              		.loc 2 193 1 view .LVU270
 971              		.loc 2 195 2 view .LVU271
 972              		.syntax unified
 973              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 974 0016 4FF05003 			mov r3, #80												
 975 001a 83F31188 		msr basepri, r3											
 976 001e BFF36F8F 		isb														
 977 0022 BFF34F8F 		dsb														
 978              	
 979              	@ 0 "" 2
 980              	.LVL69:
 981              		.thumb
 982              		.syntax unified
 983              	.L83:
 984              		.loc 2 195 2 is_stmt 0 view .LVU272
 985              	.LBE118:
 986              	.LBE117:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 987              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU273
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 988              		.loc 1 601 4 discriminator 3 view .LVU274
 989 0026 FEE7     		b	.L83
 990              	.LVL70:
 991              	.L85:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 992              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU275
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 118


 993              	.LBE116:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 994              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU276
 995              	.LBB119:
 996              	.LBI119:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 997              		.loc 2 191 30 view .LVU277
 998              	.LBB120:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 999              		.loc 2 193 1 view .LVU278
 1000              		.loc 2 195 2 view .LVU279
 1001              		.syntax unified
 1002              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1003 0028 4FF05003 			mov r3, #80												
 1004 002c 83F31188 		msr basepri, r3											
 1005 0030 BFF36F8F 		isb														
 1006 0034 BFF34F8F 		dsb														
 1007              	
 1008              	@ 0 "" 2
 1009              	.LVL71:
 1010              		.thumb
 1011              		.syntax unified
 1012              	.L79:
 1013              		.loc 2 195 2 is_stmt 0 view .LVU280
 1014              	.LBE120:
 1015              	.LBE119:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1016              		.loc 1 592 3 is_stmt 1 discriminator 3 view .LVU281
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1017              		.loc 1 592 3 discriminator 3 view .LVU282
 1018 0038 FEE7     		b	.L79
 1019              	.LVL72:
 1020              	.L86:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1021              		.loc 1 593 3 discriminator 1 view .LVU283
 1022              	.LBB121:
 1023              	.LBI121:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1024              		.loc 2 191 30 view .LVU284
 1025              	.LBB122:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1026              		.loc 2 193 1 view .LVU285
 1027              		.loc 2 195 2 view .LVU286
 1028              		.syntax unified
 1029              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1030 003a 4FF05003 			mov r3, #80												
 1031 003e 83F31188 		msr basepri, r3											
 1032 0042 BFF36F8F 		isb														
 1033 0046 BFF34F8F 		dsb														
 1034              	
 1035              	@ 0 "" 2
 1036              	.LVL73:
 1037              		.thumb
 1038              		.syntax unified
 1039              	.L81:
 1040              		.loc 2 195 2 is_stmt 0 view .LVU287
 1041              	.LBE122:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 119


 1042              	.LBE121:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1043              		.loc 1 593 3 is_stmt 1 discriminator 3 view .LVU288
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1044              		.loc 1 593 3 discriminator 3 view .LVU289
 1045 004a FEE7     		b	.L81
 1046              	.LVL74:
 1047              	.L82:
 1048              	.LBB123:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1049              		.loc 1 601 44 discriminator 2 view .LVU290
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1050              		.loc 1 602 4 view .LVU291
 1051 004c 049D     		ldr	r5, [sp, #16]
 1052              	.LBE123:
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1053              		.loc 1 607 3 view .LVU292
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1054              		.loc 1 611 4 view .LVU293
 1055              	.LVL75:
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1056              		.loc 1 612 4 view .LVU294
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1057              		.loc 1 612 22 is_stmt 0 view .LVU295
 1058 004e 0C9D     		ldr	r5, [sp, #48]
 1059 0050 2C63     		str	r4, [r5, #48]
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1060              		.loc 1 618 5 is_stmt 1 view .LVU296
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1061              		.loc 1 618 37 is_stmt 0 view .LVU297
 1062 0052 0224     		movs	r4, #2
 1063 0054 85F85140 		strb	r4, [r5, #81]
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1064              		.loc 1 622 4 is_stmt 1 view .LVU298
 1065 0058 0024     		movs	r4, #0
 1066 005a 0394     		str	r4, [sp, #12]
 1067 005c 0295     		str	r5, [sp, #8]
 1068 005e 05AC     		add	r4, sp, #20
 1069 0060 0194     		str	r4, [sp, #4]
 1070 0062 0A9C     		ldr	r4, [sp, #40]
 1071 0064 0094     		str	r4, [sp]
 1072 0066 FFF7FEFF 		bl	prvInitialiseNewTask
 1073              	.LVL76:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1074              		.loc 1 623 4 view .LVU299
 1075 006a 0C98     		ldr	r0, [sp, #48]
 1076 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1077              	.LVL77:
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1078              		.loc 1 630 3 view .LVU300
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1079              		.loc 1 631 2 is_stmt 0 view .LVU301
 1080 0070 0598     		ldr	r0, [sp, #20]
 1081 0072 07B0     		add	sp, sp, #28
 1082              		.cfi_def_cfa_offset 12
 1083              		@ sp needed
 1084 0074 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 120


 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1085              		.loc 1 631 2 view .LVU302
 1086              		.cfi_endproc
 1087              	.LFE5:
 1089              		.section	.text.xTaskCreate,"ax",%progbits
 1090              		.align	1
 1091              		.global	xTaskCreate
 1092              		.syntax unified
 1093              		.thumb
 1094              		.thumb_func
 1096              	xTaskCreate:
 1097              	.LVL78:
 1098              	.LFB6:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1099              		.loc 1 739 2 is_stmt 1 view -0
 1100              		.cfi_startproc
 1101              		@ args = 8, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1103              		.loc 1 739 2 is_stmt 0 view .LVU304
 1104 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1105              		.cfi_def_cfa_offset 28
 1106              		.cfi_offset 4, -28
 1107              		.cfi_offset 5, -24
 1108              		.cfi_offset 6, -20
 1109              		.cfi_offset 7, -16
 1110              		.cfi_offset 8, -12
 1111              		.cfi_offset 9, -8
 1112              		.cfi_offset 14, -4
 1113 0004 85B0     		sub	sp, sp, #20
 1114              		.cfi_def_cfa_offset 48
 1115 0006 0746     		mov	r7, r0
 1116 0008 8846     		mov	r8, r1
 1117 000a 1446     		mov	r4, r2
 1118 000c 1E46     		mov	r6, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1119              		.loc 1 740 2 is_stmt 1 view .LVU305
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1120              		.loc 1 741 2 view .LVU306
 1121              	.LBB124:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1122              		.loc 1 770 3 view .LVU307
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1123              		.loc 1 773 4 view .LVU308
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1124              		.loc 1 773 14 is_stmt 0 view .LVU309
 1125 000e 9000     		lsls	r0, r2, #2
 1126              	.LVL79:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1127              		.loc 1 773 14 view .LVU310
 1128 0010 FFF7FEFF 		bl	pvPortMalloc
 1129              	.LVL80:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1130              		.loc 1 775 4 is_stmt 1 view .LVU311
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1131              		.loc 1 775 6 is_stmt 0 view .LVU312
 1132 0014 08B3     		cbz	r0, .L90
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 121


 1133 0016 8146     		mov	r9, r0
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1134              		.loc 1 778 5 is_stmt 1 view .LVU313
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1135              		.loc 1 778 28 is_stmt 0 view .LVU314
 1136 0018 5420     		movs	r0, #84
 1137              	.LVL81:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1138              		.loc 1 778 28 view .LVU315
 1139 001a FFF7FEFF 		bl	pvPortMalloc
 1140              	.LVL82:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1141              		.loc 1 780 5 is_stmt 1 view .LVU316
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1142              		.loc 1 780 7 is_stmt 0 view .LVU317
 1143 001e 0546     		mov	r5, r0
 1144 0020 A8B1     		cbz	r0, .L89
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1145              		.loc 1 783 6 is_stmt 1 view .LVU318
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1146              		.loc 1 783 24 is_stmt 0 view .LVU319
 1147 0022 C0F83090 		str	r9, [r0, #48]
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1148              		.loc 1 783 24 view .LVU320
 1149              	.LBE124:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1150              		.loc 1 799 3 is_stmt 1 view .LVU321
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1151              		.loc 1 805 5 view .LVU322
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1152              		.loc 1 805 37 is_stmt 0 view .LVU323
 1153 0026 0023     		movs	r3, #0
 1154 0028 80F85130 		strb	r3, [r0, #81]
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1155              		.loc 1 809 4 is_stmt 1 view .LVU324
 1156 002c 0393     		str	r3, [sp, #12]
 1157 002e 0290     		str	r0, [sp, #8]
 1158 0030 0D9B     		ldr	r3, [sp, #52]
 1159 0032 0193     		str	r3, [sp, #4]
 1160 0034 0C9B     		ldr	r3, [sp, #48]
 1161 0036 0093     		str	r3, [sp]
 1162 0038 3346     		mov	r3, r6
 1163 003a 2246     		mov	r2, r4
 1164 003c 4146     		mov	r1, r8
 1165 003e 3846     		mov	r0, r7
 1166              	.LVL83:
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1167              		.loc 1 809 4 is_stmt 0 view .LVU325
 1168 0040 FFF7FEFF 		bl	prvInitialiseNewTask
 1169              	.LVL84:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1170              		.loc 1 810 4 is_stmt 1 view .LVU326
 1171 0044 2846     		mov	r0, r5
 1172 0046 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1173              	.LVL85:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1174              		.loc 1 811 4 view .LVU327
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 122


 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1175              		.loc 1 811 12 is_stmt 0 view .LVU328
 1176 004a 0120     		movs	r0, #1
 1177 004c 07E0     		b	.L87
 1178              	.LVL86:
 1179              	.L89:
 1180              	.LBB125:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1181              		.loc 1 789 6 is_stmt 1 view .LVU329
 1182 004e 4846     		mov	r0, r9
 1183              	.LVL87:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1184              		.loc 1 789 6 is_stmt 0 view .LVU330
 1185 0050 FFF7FEFF 		bl	vPortFree
 1186              	.LVL88:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1187              		.loc 1 789 6 view .LVU331
 1188              	.LBE125:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1189              		.loc 1 799 3 is_stmt 1 view .LVU332
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1190              		.loc 1 815 12 is_stmt 0 view .LVU333
 1191 0054 4FF0FF30 		mov	r0, #-1
 1192 0058 01E0     		b	.L87
 1193              	.LVL89:
 1194              	.L90:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1195              		.loc 1 815 12 view .LVU334
 1196 005a 4FF0FF30 		mov	r0, #-1
 1197              	.LVL90:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1198              		.loc 1 818 3 is_stmt 1 view .LVU335
 1199              	.L87:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1200              		.loc 1 819 2 is_stmt 0 view .LVU336
 1201 005e 05B0     		add	sp, sp, #20
 1202              		.cfi_def_cfa_offset 28
 1203              		@ sp needed
 1204 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1205              		.loc 1 819 2 view .LVU337
 1206              		.cfi_endproc
 1207              	.LFE6:
 1209              		.section	.text.vTaskDelete,"ax",%progbits
 1210              		.align	1
 1211              		.global	vTaskDelete
 1212              		.syntax unified
 1213              		.thumb
 1214              		.thumb_func
 1216              	vTaskDelete:
 1217              	.LVL91:
 1218              	.LFB9:
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1219              		.loc 1 1163 2 is_stmt 1 view -0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 123


1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1223              		.loc 1 1163 2 is_stmt 0 view .LVU339
 1224 0000 38B5     		push	{r3, r4, r5, lr}
 1225              		.cfi_def_cfa_offset 16
 1226              		.cfi_offset 3, -16
 1227              		.cfi_offset 4, -12
 1228              		.cfi_offset 5, -8
 1229              		.cfi_offset 14, -4
 1230 0002 0446     		mov	r4, r0
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1231              		.loc 1 1164 2 is_stmt 1 view .LVU340
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1232              		.loc 1 1166 3 view .LVU341
 1233 0004 FFF7FEFF 		bl	vPortEnterCritical
 1234              	.LVL92:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1235              		.loc 1 1170 4 view .LVU342
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1236              		.loc 1 1170 12 is_stmt 0 view .LVU343
 1237 0008 002C     		cmp	r4, #0
 1238 000a 34D0     		beq	.L102
 1239              	.LVL93:
 1240              	.L93:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1241              		.loc 1 1173 4 is_stmt 1 view .LVU344
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1242              		.loc 1 1173 8 is_stmt 0 view .LVU345
 1243 000c 251D     		adds	r5, r4, #4
 1244 000e 2846     		mov	r0, r5
 1245 0010 FFF7FEFF 		bl	uxListRemove
 1246              	.LVL94:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1247              		.loc 1 1173 6 discriminator 1 view .LVU346
 1248 0014 70B9     		cbnz	r0, .L94
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1249              		.loc 1 1175 5 is_stmt 1 view .LVU347
 1250 0016 E26A     		ldr	r2, [r4, #44]
 1251 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1252 001c 9B00     		lsls	r3, r3, #2
 1253 001e 2749     		ldr	r1, .L105
 1254 0020 CB58     		ldr	r3, [r1, r3]
 1255 0022 3BB9     		cbnz	r3, .L94
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1256              		.loc 1 1175 5 discriminator 1 view .LVU348
 1257 0024 0123     		movs	r3, #1
 1258 0026 03FA02F2 		lsl	r2, r3, r2
 1259 002a 2549     		ldr	r1, .L105+4
 1260 002c 0B68     		ldr	r3, [r1]
 1261 002e 23EA0203 		bic	r3, r3, r2
 1262 0032 0B60     		str	r3, [r1]
 1263              	.L94:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1264              		.loc 1 1179 29 view .LVU349
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1265              		.loc 1 1183 4 view .LVU350
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1266              		.loc 1 1183 8 is_stmt 0 view .LVU351
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 124


 1267 0034 A36A     		ldr	r3, [r4, #40]
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1268              		.loc 1 1183 6 view .LVU352
 1269 0036 1BB1     		cbz	r3, .L95
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1270              		.loc 1 1185 5 is_stmt 1 view .LVU353
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1271              		.loc 1 1185 14 is_stmt 0 view .LVU354
 1272 0038 04F11800 		add	r0, r4, #24
 1273 003c FFF7FEFF 		bl	uxListRemove
 1274              	.LVL95:
 1275              	.L95:
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1276              		.loc 1 1189 29 is_stmt 1 view .LVU355
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1277              		.loc 1 1196 4 view .LVU356
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1278              		.loc 1 1196 16 is_stmt 0 view .LVU357
 1279 0040 204A     		ldr	r2, .L105+8
 1280 0042 1368     		ldr	r3, [r2]
 1281 0044 0133     		adds	r3, r3, #1
 1282 0046 1360     		str	r3, [r2]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1283              		.loc 1 1198 4 is_stmt 1 view .LVU358
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1284              		.loc 1 1198 14 is_stmt 0 view .LVU359
 1285 0048 1F4B     		ldr	r3, .L105+12
 1286 004a 1B68     		ldr	r3, [r3]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1287              		.loc 1 1198 6 view .LVU360
 1288 004c A342     		cmp	r3, r4
 1289 004e 15D0     		beq	.L103
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 1290              		.loc 1 1225 5 is_stmt 1 view .LVU361
 1291 0050 1E4A     		ldr	r2, .L105+16
 1292 0052 1368     		ldr	r3, [r2]
 1293 0054 013B     		subs	r3, r3, #1
 1294 0056 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1295              		.loc 1 1226 30 view .LVU362
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1296              		.loc 1 1227 5 view .LVU363
 1297 0058 2046     		mov	r0, r4
 1298 005a FFF7FEFF 		bl	prvDeleteTCB
 1299              	.LVL96:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1300              		.loc 1 1231 5 view .LVU364
 1301 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1302              	.LVL97:
 1303              	.L97:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1304              		.loc 1 1234 3 view .LVU365
 1305 0062 FFF7FEFF 		bl	vPortExitCritical
 1306              	.LVL98:
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1307              		.loc 1 1238 3 view .LVU366
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 125


 1308              		.loc 1 1238 25 is_stmt 0 view .LVU367
 1309 0066 1A4B     		ldr	r3, .L105+20
 1310 0068 1B68     		ldr	r3, [r3]
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1311              		.loc 1 1238 5 view .LVU368
 1312 006a 1BB1     		cbz	r3, .L92
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1313              		.loc 1 1240 4 is_stmt 1 view .LVU369
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1314              		.loc 1 1240 14 is_stmt 0 view .LVU370
 1315 006c 164B     		ldr	r3, .L105+12
 1316 006e 1B68     		ldr	r3, [r3]
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1317              		.loc 1 1240 6 view .LVU371
 1318 0070 A342     		cmp	r3, r4
 1319 0072 0CD0     		beq	.L104
 1320              	.L92:
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1321              		.loc 1 1250 2 view .LVU372
 1322 0074 38BD     		pop	{r3, r4, r5, pc}
 1323              	.LVL99:
 1324              	.L102:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1325              		.loc 1 1170 12 discriminator 1 view .LVU373
 1326 0076 144B     		ldr	r3, .L105+12
 1327 0078 1C68     		ldr	r4, [r3]
 1328              	.LVL100:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1329              		.loc 1 1170 12 discriminator 1 view .LVU374
 1330 007a C7E7     		b	.L93
 1331              	.LVL101:
 1332              	.L103:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1333              		.loc 1 1205 5 is_stmt 1 view .LVU375
 1334 007c 2946     		mov	r1, r5
 1335 007e 1548     		ldr	r0, .L105+24
 1336 0080 FFF7FEFF 		bl	vListInsertEnd
 1337              	.LVL102:
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1338              		.loc 1 1210 5 view .LVU376
 1339 0084 144A     		ldr	r2, .L105+28
 1340 0086 1368     		ldr	r3, [r2]
 1341 0088 0133     		adds	r3, r3, #1
 1342 008a 1360     		str	r3, [r2]
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1343              		.loc 1 1214 30 view .LVU377
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1344              		.loc 1 1221 54 view .LVU378
 1345 008c E9E7     		b	.L97
 1346              	.L104:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1347              		.loc 1 1242 5 view .LVU379
 1348 008e 134B     		ldr	r3, .L105+32
 1349 0090 1B68     		ldr	r3, [r3]
 1350 0092 43B1     		cbz	r3, .L99
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1351              		.loc 1 1242 5 discriminator 1 view .LVU380
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 126


 1352              	.LBB126:
 1353              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1354              		.loc 2 191 30 view .LVU381
 1355              	.LBB127:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1356              		.loc 2 193 1 view .LVU382
 1357              		.loc 2 195 2 view .LVU383
 1358              		.syntax unified
 1359              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1360 0094 4FF05003 			mov r3, #80												
 1361 0098 83F31188 		msr basepri, r3											
 1362 009c BFF36F8F 		isb														
 1363 00a0 BFF34F8F 		dsb														
 1364              	
 1365              	@ 0 "" 2
 1366              		.thumb
 1367              		.syntax unified
 1368              	.L100:
 1369              	.LBE127:
 1370              	.LBE126:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1371              		.loc 1 1242 5 discriminator 3 view .LVU384
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1372              		.loc 1 1242 5 discriminator 3 view .LVU385
 1373 00a4 FEE7     		b	.L100
 1374              	.L99:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1375              		.loc 1 1242 46 discriminator 2 view .LVU386
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1376              		.loc 1 1243 5 view .LVU387
 1377 00a6 4FF0E023 		mov	r3, #-536813568
 1378 00aa 4FF08052 		mov	r2, #268435456
 1379 00ae C3F8042D 		str	r2, [r3, #3332]
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1380              		.loc 1 1243 5 view .LVU388
 1381              		.syntax unified
 1382              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1383 00b2 BFF34F8F 		dsb
 1384              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1385              		.loc 1 1243 5 view .LVU389
 1386              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1387 00b6 BFF36F8F 		isb
 1388              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1389              		.loc 1 1243 27 view .LVU390
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1390              		.loc 1 1247 29 view .LVU391
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1391              		.loc 1 1250 2 is_stmt 0 view .LVU392
 1392              		.thumb
 1393              		.syntax unified
 1394 00ba DBE7     		b	.L92
 1395              	.L106:
 1396              		.align	2
 1397              	.L105:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 127


 1398 00bc 00000000 		.word	pxReadyTasksLists
 1399 00c0 00000000 		.word	uxTopReadyPriority
 1400 00c4 00000000 		.word	uxTaskNumber
 1401 00c8 00000000 		.word	pxCurrentTCB
 1402 00cc 00000000 		.word	uxCurrentNumberOfTasks
 1403 00d0 00000000 		.word	xSchedulerRunning
 1404 00d4 00000000 		.word	xTasksWaitingTermination
 1405 00d8 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1406 00dc 00000000 		.word	uxSchedulerSuspended
 1407              		.cfi_endproc
 1408              	.LFE9:
 1410              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1411              		.align	1
 1412              		.global	uxTaskPriorityGet
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1417              	uxTaskPriorityGet:
 1418              	.LVL103:
 1419              	.LFB11:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1420              		.loc 1 1479 2 is_stmt 1 view -0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 0
 1423              		@ frame_needed = 0, uses_anonymous_args = 0
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1424              		.loc 1 1479 2 is_stmt 0 view .LVU394
 1425 0000 10B5     		push	{r4, lr}
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 4, -8
 1428              		.cfi_offset 14, -4
 1429 0002 0446     		mov	r4, r0
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1430              		.loc 1 1480 2 is_stmt 1 view .LVU395
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1431              		.loc 1 1481 2 view .LVU396
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1432              		.loc 1 1483 3 view .LVU397
 1433 0004 FFF7FEFF 		bl	vPortEnterCritical
 1434              	.LVL104:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1435              		.loc 1 1487 4 view .LVU398
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1436              		.loc 1 1487 12 is_stmt 0 view .LVU399
 1437 0008 24B1     		cbz	r4, .L110
 1438              	.LVL105:
 1439              	.L108:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1440              		.loc 1 1488 4 is_stmt 1 view .LVU400
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1441              		.loc 1 1488 13 is_stmt 0 view .LVU401
 1442 000a E46A     		ldr	r4, [r4, #44]
 1443              	.LVL106:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1444              		.loc 1 1490 3 is_stmt 1 view .LVU402
 1445 000c FFF7FEFF 		bl	vPortExitCritical
 1446              	.LVL107:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 128


1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1447              		.loc 1 1492 3 view .LVU403
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1448              		.loc 1 1493 2 is_stmt 0 view .LVU404
 1449 0010 2046     		mov	r0, r4
 1450 0012 10BD     		pop	{r4, pc}
 1451              	.LVL108:
 1452              	.L110:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1453              		.loc 1 1487 12 discriminator 1 view .LVU405
 1454 0014 014B     		ldr	r3, .L111
 1455 0016 1C68     		ldr	r4, [r3]
 1456              	.LVL109:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1457              		.loc 1 1487 12 discriminator 1 view .LVU406
 1458 0018 F7E7     		b	.L108
 1459              	.L112:
 1460 001a 00BF     		.align	2
 1461              	.L111:
 1462 001c 00000000 		.word	pxCurrentTCB
 1463              		.cfi_endproc
 1464              	.LFE11:
 1466              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1467              		.align	1
 1468              		.global	uxTaskPriorityGetFromISR
 1469              		.syntax unified
 1470              		.thumb
 1471              		.thumb_func
 1473              	uxTaskPriorityGetFromISR:
 1474              	.LVL110:
 1475              	.LFB12:
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1476              		.loc 1 1501 2 is_stmt 1 view -0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1480              		.loc 1 1501 2 is_stmt 0 view .LVU408
 1481 0000 10B5     		push	{r4, lr}
 1482              		.cfi_def_cfa_offset 8
 1483              		.cfi_offset 4, -8
 1484              		.cfi_offset 14, -4
 1485 0002 0446     		mov	r4, r0
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1486              		.loc 1 1502 2 is_stmt 1 view .LVU409
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1487              		.loc 1 1503 2 view .LVU410
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1488              		.loc 1 1521 3 view .LVU411
 1489 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1490              	.LVL111:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1491              		.loc 1 1523 3 view .LVU412
 1492              	.LBB128:
 1493              	.LBI128:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 129


 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1494              		.loc 2 207 34 view .LVU413
 1495              	.LBB129:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1496              		.loc 2 209 1 view .LVU414
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1497              		.loc 2 211 2 view .LVU415
 1498              		.syntax unified
 1499              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1500 0008 EFF31183 			mrs r3, basepri											
 1501 000c 4FF05002 		mov r2, #80												
 1502 0010 82F31188 		msr basepri, r2											
 1503 0014 BFF36F8F 		isb														
 1504 0018 BFF34F8F 		dsb														
 1505              	
 1506              	@ 0 "" 2
 1507              	.LVL112:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1508              		.loc 2 223 2 view .LVU416
 1509              		.loc 2 223 2 is_stmt 0 view .LVU417
 1510              		.thumb
 1511              		.syntax unified
 1512              	.LBE129:
 1513              	.LBE128:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1514              		.loc 1 1527 4 is_stmt 1 view .LVU418
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1515              		.loc 1 1527 12 is_stmt 0 view .LVU419
 1516 001c 1CB1     		cbz	r4, .L116
 1517              	.LVL113:
 1518              	.L114:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1519              		.loc 1 1528 4 is_stmt 1 view .LVU420
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1520              		.loc 1 1528 13 is_stmt 0 view .LVU421
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 130


 1521 001e E06A     		ldr	r0, [r4, #44]
 1522              	.LVL114:
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1523              		.loc 1 1530 3 is_stmt 1 view .LVU422
 1524              	.LBB130:
 1525              	.LBI130:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1526              		.loc 2 227 30 view .LVU423
 1527              	.LBB131:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1528              		.loc 2 229 2 view .LVU424
 1529              		.syntax unified
 1530              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1531 0020 83F31188 			msr basepri, r3	
 1532              	@ 0 "" 2
 1533              		.thumb
 1534              		.syntax unified
 1535              	.LBE131:
 1536              	.LBE130:
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1537              		.loc 1 1532 3 view .LVU425
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1538              		.loc 1 1533 2 is_stmt 0 view .LVU426
 1539 0024 10BD     		pop	{r4, pc}
 1540              	.LVL115:
 1541              	.L116:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1542              		.loc 1 1527 12 discriminator 1 view .LVU427
 1543 0026 014A     		ldr	r2, .L117
 1544 0028 1468     		ldr	r4, [r2]
 1545              	.LVL116:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1546              		.loc 1 1527 12 discriminator 1 view .LVU428
 1547 002a F8E7     		b	.L114
 1548              	.L118:
 1549              		.align	2
 1550              	.L117:
 1551 002c 00000000 		.word	pxCurrentTCB
 1552              		.cfi_endproc
 1553              	.LFE12:
 1555              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1556              		.align	1
 1557              		.global	vTaskPrioritySet
 1558              		.syntax unified
 1559              		.thumb
 1560              		.thumb_func
 1562              	vTaskPrioritySet:
 1563              	.LVL117:
 1564              	.LFB13:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1565              		.loc 1 1541 2 is_stmt 1 view -0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 131


 1568              		@ frame_needed = 0, uses_anonymous_args = 0
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1569              		.loc 1 1541 2 is_stmt 0 view .LVU430
 1570 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1571              		.cfi_def_cfa_offset 24
 1572              		.cfi_offset 3, -24
 1573              		.cfi_offset 4, -20
 1574              		.cfi_offset 5, -16
 1575              		.cfi_offset 6, -12
 1576              		.cfi_offset 7, -8
 1577              		.cfi_offset 14, -4
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1578              		.loc 1 1542 2 is_stmt 1 view .LVU431
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1579              		.loc 1 1543 2 view .LVU432
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1580              		.loc 1 1544 2 view .LVU433
 1581              	.LVL118:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1582              		.loc 1 1546 3 view .LVU434
 1583 0002 0629     		cmp	r1, #6
 1584 0004 08D9     		bls	.L120
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1585              		.loc 1 1546 3 discriminator 1 view .LVU435
 1586              	.LBB132:
 1587              	.LBI132:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1588              		.loc 2 191 30 view .LVU436
 1589              	.LBB133:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1590              		.loc 2 193 1 view .LVU437
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1591              		.loc 2 195 2 view .LVU438
 1592              		.syntax unified
 1593              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1594 0006 4FF05003 			mov r3, #80												
 1595 000a 83F31188 		msr basepri, r3											
 1596 000e BFF36F8F 		isb														
 1597 0012 BFF34F8F 		dsb														
 1598              	
 1599              	@ 0 "" 2
 1600              		.thumb
 1601              		.syntax unified
 1602              	.L121:
 1603              	.LBE133:
 1604              	.LBE132:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1605              		.loc 1 1546 3 discriminator 3 view .LVU439
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1606              		.loc 1 1546 3 discriminator 3 view .LVU440
 1607 0016 FEE7     		b	.L121
 1608              	.L120:
 1609 0018 0546     		mov	r5, r0
 1610 001a 0C46     		mov	r4, r1
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1611              		.loc 1 1546 59 discriminator 2 view .LVU441
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 132


 1612              		.loc 1 1549 3 view .LVU442
 1613              	.LVL119:
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1614              		.loc 1 1555 28 view .LVU443
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1615              		.loc 1 1558 3 view .LVU444
 1616 001c FFF7FEFF 		bl	vPortEnterCritical
 1617              	.LVL120:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1618              		.loc 1 1562 4 view .LVU445
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1619              		.loc 1 1562 12 is_stmt 0 view .LVU446
 1620 0020 75B1     		cbz	r5, .L134
 1621              	.LVL121:
 1622              	.L122:
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1623              		.loc 1 1564 50 is_stmt 1 view .LVU447
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1624              		.loc 1 1568 5 view .LVU448
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1625              		.loc 1 1568 27 is_stmt 0 view .LVU449
 1626 0022 6B6C     		ldr	r3, [r5, #68]
 1627              	.LVL122:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1628              		.loc 1 1576 4 is_stmt 1 view .LVU450
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1629              		.loc 1 1576 6 is_stmt 0 view .LVU451
 1630 0024 9C42     		cmp	r4, r3
 1631 0026 30D0     		beq	.L123
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1632              		.loc 1 1580 5 is_stmt 1 view .LVU452
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1633              		.loc 1 1580 7 is_stmt 0 view .LVU453
 1634 0028 0DD9     		bls	.L124
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1635              		.loc 1 1582 6 is_stmt 1 view .LVU454
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1636              		.loc 1 1582 16 is_stmt 0 view .LVU455
 1637 002a 2B4A     		ldr	r2, .L137
 1638 002c 1268     		ldr	r2, [r2]
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1639              		.loc 1 1582 8 view .LVU456
 1640 002e AA42     		cmp	r2, r5
 1641 0030 2ED0     		beq	.L130
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1642              		.loc 1 1587 7 is_stmt 1 view .LVU457
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1643              		.loc 1 1587 40 is_stmt 0 view .LVU458
 1644 0032 294A     		ldr	r2, .L137
 1645 0034 1268     		ldr	r2, [r2]
 1646 0036 D26A     		ldr	r2, [r2, #44]
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1647              		.loc 1 1587 9 view .LVU459
 1648 0038 A242     		cmp	r2, r4
 1649 003a 2BD9     		bls	.L131
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1650              		.loc 1 1544 13 view .LVU460
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 133


 1651 003c 0027     		movs	r7, #0
 1652 003e 07E0     		b	.L125
 1653              	.LVL123:
 1654              	.L134:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1655              		.loc 1 1562 12 discriminator 1 view .LVU461
 1656 0040 254B     		ldr	r3, .L137
 1657 0042 1D68     		ldr	r5, [r3]
 1658              	.LVL124:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1659              		.loc 1 1562 12 discriminator 1 view .LVU462
 1660 0044 EDE7     		b	.L122
 1661              	.LVL125:
 1662              	.L124:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1663              		.loc 1 1603 10 is_stmt 1 view .LVU463
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1664              		.loc 1 1603 20 is_stmt 0 view .LVU464
 1665 0046 244A     		ldr	r2, .L137
 1666 0048 1268     		ldr	r2, [r2]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1667              		.loc 1 1603 12 view .LVU465
 1668 004a AA42     		cmp	r2, r5
 1669 004c 24D0     		beq	.L132
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1670              		.loc 1 1544 13 view .LVU466
 1671 004e 0027     		movs	r7, #0
 1672              	.L125:
 1673              	.LVL126:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1674              		.loc 1 1615 5 is_stmt 1 view .LVU467
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1675              		.loc 1 1620 5 view .LVU468
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1676              		.loc 1 1620 27 is_stmt 0 view .LVU469
 1677 0050 EE6A     		ldr	r6, [r5, #44]
 1678              	.LVL127:
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1679              		.loc 1 1626 6 is_stmt 1 view .LVU470
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1680              		.loc 1 1626 8 is_stmt 0 view .LVU471
 1681 0052 B342     		cmp	r3, r6
 1682 0054 22D0     		beq	.L135
 1683              	.L126:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1684              		.loc 1 1632 31 is_stmt 1 view .LVU472
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1685              		.loc 1 1636 6 view .LVU473
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1686              		.loc 1 1636 28 is_stmt 0 view .LVU474
 1687 0056 6C64     		str	r4, [r5, #68]
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1688              		.loc 1 1646 5 is_stmt 1 view .LVU475
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1689              		.loc 1 1646 11 is_stmt 0 view .LVU476
 1690 0058 AB69     		ldr	r3, [r5, #24]
 1691              	.LVL128:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 134


1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1692              		.loc 1 1646 7 view .LVU477
 1693 005a 002B     		cmp	r3, #0
 1694 005c 02DB     		blt	.L127
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1695              		.loc 1 1648 6 is_stmt 1 view .LVU478
 1696 005e C4F10704 		rsb	r4, r4, #7
 1697              	.LVL129:
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1698              		.loc 1 1648 6 is_stmt 0 view .LVU479
 1699 0062 AC61     		str	r4, [r5, #24]
 1700              	.L127:
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1701              		.loc 1 1652 30 is_stmt 1 view .LVU480
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1702              		.loc 1 1659 5 view .LVU481
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1703              		.loc 1 1659 9 is_stmt 0 view .LVU482
 1704 0064 6969     		ldr	r1, [r5, #20]
 1705 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1706 006a 1C4B     		ldr	r3, .L137+4
 1707 006c 03EB8203 		add	r3, r3, r2, lsl #2
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1708              		.loc 1 1659 7 view .LVU483
 1709 0070 9942     		cmp	r1, r3
 1710 0072 15D0     		beq	.L136
 1711              	.LVL130:
 1712              	.L128:
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1713              		.loc 1 1679 30 is_stmt 1 view .LVU484
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1714              		.loc 1 1682 5 view .LVU485
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1715              		.loc 1 1682 7 is_stmt 0 view .LVU486
 1716 0074 4FB1     		cbz	r7, .L123
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1717              		.loc 1 1684 6 is_stmt 1 view .LVU487
 1718 0076 4FF0E023 		mov	r3, #-536813568
 1719 007a 4FF08052 		mov	r2, #268435456
 1720 007e C3F8042D 		str	r2, [r3, #3332]
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1721              		.loc 1 1684 6 view .LVU488
 1722              		.syntax unified
 1723              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1724 0082 BFF34F8F 		dsb
 1725              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1726              		.loc 1 1684 6 view .LVU489
 1727              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1728 0086 BFF36F8F 		isb
 1729              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1730              		.loc 1 1684 37 view .LVU490
 1731              	.LVL131:
 1732              		.thumb
 1733              		.syntax unified
 1734              	.L123:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 135


1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1735              		.loc 1 1688 30 view .LVU491
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1736              		.loc 1 1693 5 view .LVU492
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1737              		.loc 1 1696 3 view .LVU493
 1738 008a FFF7FEFF 		bl	vPortExitCritical
 1739              	.LVL132:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1740              		.loc 1 1697 2 is_stmt 0 view .LVU494
 1741 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1742              	.LVL133:
 1743              	.L130:
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1744              		.loc 1 1544 13 view .LVU495
 1745 0090 0027     		movs	r7, #0
 1746 0092 DDE7     		b	.L125
 1747              	.L131:
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1748              		.loc 1 1589 23 view .LVU496
 1749 0094 0127     		movs	r7, #1
 1750 0096 DBE7     		b	.L125
 1751              	.L132:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1752              		.loc 1 1608 21 view .LVU497
 1753 0098 0127     		movs	r7, #1
 1754 009a D9E7     		b	.L125
 1755              	.LVL134:
 1756              	.L135:
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1757              		.loc 1 1628 7 is_stmt 1 view .LVU498
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1758              		.loc 1 1628 25 is_stmt 0 view .LVU499
 1759 009c EC62     		str	r4, [r5, #44]
 1760 009e DAE7     		b	.L126
 1761              	.LVL135:
 1762              	.L136:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1763              		.loc 1 1664 6 is_stmt 1 view .LVU500
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1764              		.loc 1 1664 10 is_stmt 0 view .LVU501
 1765 00a0 2C1D     		adds	r4, r5, #4
 1766 00a2 2046     		mov	r0, r4
 1767 00a4 FFF7FEFF 		bl	uxListRemove
 1768              	.LVL136:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1769              		.loc 1 1664 8 discriminator 1 view .LVU502
 1770 00a8 30B9     		cbnz	r0, .L129
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1771              		.loc 1 1669 7 is_stmt 1 view .LVU503
 1772 00aa 0122     		movs	r2, #1
 1773 00ac B240     		lsls	r2, r2, r6
 1774 00ae 0C49     		ldr	r1, .L137+8
 1775 00b0 0B68     		ldr	r3, [r1]
 1776 00b2 23EA0203 		bic	r3, r3, r2
 1777 00b6 0B60     		str	r3, [r1]
 1778              	.L129:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 136


1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1779              		.loc 1 1673 31 view .LVU504
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1780              		.loc 1 1675 6 view .LVU505
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1781              		.loc 1 1675 6 view .LVU506
 1782 00b8 E86A     		ldr	r0, [r5, #44]
 1783 00ba 0123     		movs	r3, #1
 1784 00bc 8340     		lsls	r3, r3, r0
 1785 00be 084A     		ldr	r2, .L137+8
 1786 00c0 1168     		ldr	r1, [r2]
 1787 00c2 0B43     		orrs	r3, r3, r1
 1788 00c4 1360     		str	r3, [r2]
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1789              		.loc 1 1675 6 view .LVU507
 1790 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1791 00ca 2146     		mov	r1, r4
 1792 00cc 034B     		ldr	r3, .L137+4
 1793 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1794 00d2 FFF7FEFF 		bl	vListInsertEnd
 1795              	.LVL137:
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1796              		.loc 1 1675 36 discriminator 1 view .LVU508
 1797 00d6 CDE7     		b	.L128
 1798              	.L138:
 1799              		.align	2
 1800              	.L137:
 1801 00d8 00000000 		.word	pxCurrentTCB
 1802 00dc 00000000 		.word	pxReadyTasksLists
 1803 00e0 00000000 		.word	uxTopReadyPriority
 1804              		.cfi_endproc
 1805              	.LFE13:
 1807              		.section	.text.vTaskResume,"ax",%progbits
 1808              		.align	1
 1809              		.global	vTaskResume
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1814              	vTaskResume:
 1815              	.LVL138:
 1816              	.LFB16:
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1817              		.loc 1 1852 2 view -0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1821              		.loc 1 1852 2 is_stmt 0 view .LVU510
 1822 0000 38B5     		push	{r3, r4, r5, lr}
 1823              		.cfi_def_cfa_offset 16
 1824              		.cfi_offset 3, -16
 1825              		.cfi_offset 4, -12
 1826              		.cfi_offset 5, -8
 1827              		.cfi_offset 14, -4
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1828              		.loc 1 1853 2 is_stmt 1 view .LVU511
 1829              	.LVL139:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 137


1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1830              		.loc 1 1856 3 view .LVU512
 1831 0002 68B1     		cbz	r0, .L145
 1832 0004 0446     		mov	r4, r0
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1833              		.loc 1 1856 32 discriminator 2 view .LVU513
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1834              		.loc 1 1860 3 view .LVU514
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1835              		.loc 1 1860 15 is_stmt 0 view .LVU515
 1836 0006 1D4B     		ldr	r3, .L147
 1837 0008 1B68     		ldr	r3, [r3]
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1838              		.loc 1 1860 5 view .LVU516
 1839 000a 8342     		cmp	r3, r0
 1840 000c 07D0     		beq	.L139
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1841              		.loc 1 1862 4 is_stmt 1 view .LVU517
 1842 000e FFF7FEFF 		bl	vPortEnterCritical
 1843              	.LVL140:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1844              		.loc 1 1864 5 view .LVU518
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1845              		.loc 1 1864 9 is_stmt 0 view .LVU519
 1846 0012 2046     		mov	r0, r4
 1847 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1848              	.LVL141:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1849              		.loc 1 1864 7 discriminator 1 view .LVU520
 1850 0018 58B9     		cbnz	r0, .L146
 1851              	.L143:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1852              		.loc 1 1888 30 is_stmt 1 view .LVU521
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1853              		.loc 1 1891 4 view .LVU522
 1854 001a FFF7FEFF 		bl	vPortExitCritical
 1855              	.LVL142:
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1856              		.loc 1 1895 28 view .LVU523
 1857              	.L139:
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1858              		.loc 1 1897 2 is_stmt 0 view .LVU524
 1859 001e 38BD     		pop	{r3, r4, r5, pc}
 1860              	.LVL143:
 1861              	.L145:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1862              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU525
 1863              	.LBB134:
 1864              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1865              		.loc 2 191 30 view .LVU526
 1866              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1867              		.loc 2 193 1 view .LVU527
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1868              		.loc 2 195 2 view .LVU528
 1869              		.syntax unified
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 138


 1870              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1871 0020 4FF05003 			mov r3, #80												
 1872 0024 83F31188 		msr basepri, r3											
 1873 0028 BFF36F8F 		isb														
 1874 002c BFF34F8F 		dsb														
 1875              	
 1876              	@ 0 "" 2
 1877              		.thumb
 1878              		.syntax unified
 1879              	.L141:
 1880              	.LBE135:
 1881              	.LBE134:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1882              		.loc 1 1856 3 discriminator 3 view .LVU529
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1883              		.loc 1 1856 3 discriminator 3 view .LVU530
 1884 0030 FEE7     		b	.L141
 1885              	.LVL144:
 1886              	.L146:
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1887              		.loc 1 1866 31 view .LVU531
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1888              		.loc 1 1870 6 view .LVU532
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1889              		.loc 1 1870 15 is_stmt 0 view .LVU533
 1890 0032 251D     		adds	r5, r4, #4
 1891 0034 2846     		mov	r0, r5
 1892 0036 FFF7FEFF 		bl	uxListRemove
 1893              	.LVL145:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1894              		.loc 1 1871 6 is_stmt 1 view .LVU534
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1895              		.loc 1 1871 6 view .LVU535
 1896 003a E06A     		ldr	r0, [r4, #44]
 1897 003c 0123     		movs	r3, #1
 1898 003e 8340     		lsls	r3, r3, r0
 1899 0040 0F4A     		ldr	r2, .L147+4
 1900 0042 1168     		ldr	r1, [r2]
 1901 0044 0B43     		orrs	r3, r3, r1
 1902 0046 1360     		str	r3, [r2]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1903              		.loc 1 1871 6 view .LVU536
 1904 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1905 004c 2946     		mov	r1, r5
 1906 004e 0D4B     		ldr	r3, .L147+8
 1907 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1908 0054 FFF7FEFF 		bl	vListInsertEnd
 1909              	.LVL146:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1910              		.loc 1 1871 36 discriminator 1 view .LVU537
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1911              		.loc 1 1874 6 view .LVU538
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1912              		.loc 1 1874 15 is_stmt 0 view .LVU539
 1913 0058 E26A     		ldr	r2, [r4, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1914              		.loc 1 1874 43 view .LVU540
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 139


 1915 005a 084B     		ldr	r3, .L147
 1916 005c 1B68     		ldr	r3, [r3]
 1917 005e DB6A     		ldr	r3, [r3, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1918              		.loc 1 1874 8 view .LVU541
 1919 0060 9A42     		cmp	r2, r3
 1920 0062 DAD3     		bcc	.L143
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1921              		.loc 1 1879 7 is_stmt 1 view .LVU542
 1922 0064 4FF0E023 		mov	r3, #-536813568
 1923 0068 4FF08052 		mov	r2, #268435456
 1924 006c C3F8042D 		str	r2, [r3, #3332]
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1925              		.loc 1 1879 7 view .LVU543
 1926              		.syntax unified
 1927              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1928 0070 BFF34F8F 		dsb
 1929              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1930              		.loc 1 1879 7 view .LVU544
 1931              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1932 0074 BFF36F8F 		isb
 1933              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1934              		.loc 1 1879 38 view .LVU545
 1935              		.thumb
 1936              		.syntax unified
 1937 0078 CFE7     		b	.L143
 1938              	.L148:
 1939 007a 00BF     		.align	2
 1940              	.L147:
 1941 007c 00000000 		.word	pxCurrentTCB
 1942 0080 00000000 		.word	uxTopReadyPriority
 1943 0084 00000000 		.word	pxReadyTasksLists
 1944              		.cfi_endproc
 1945              	.LFE16:
 1947              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1948              		.align	1
 1949              		.global	xTaskResumeFromISR
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1954              	xTaskResumeFromISR:
 1955              	.LVL147:
 1956              	.LFB17:
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1957              		.loc 1 1906 2 view -0
 1958              		.cfi_startproc
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1961              		.loc 1 1906 2 is_stmt 0 view .LVU547
 1962 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1963              		.cfi_def_cfa_offset 24
 1964              		.cfi_offset 3, -24
 1965              		.cfi_offset 4, -20
 1966              		.cfi_offset 5, -16
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 140


 1967              		.cfi_offset 6, -12
 1968              		.cfi_offset 7, -8
 1969              		.cfi_offset 14, -4
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1970              		.loc 1 1907 2 is_stmt 1 view .LVU548
 1971              	.LVL148:
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1972              		.loc 1 1908 2 view .LVU549
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1973              		.loc 1 1909 2 view .LVU550
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1974              		.loc 1 1911 3 view .LVU551
 1975 0002 90B3     		cbz	r0, .L157
 1976 0004 0546     		mov	r5, r0
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1977              		.loc 1 1911 32 discriminator 2 view .LVU552
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1978              		.loc 1 1929 3 view .LVU553
 1979 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1980              	.LVL149:
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1981              		.loc 1 1931 3 view .LVU554
 1982              	.LBB136:
 1983              	.LBI136:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1984              		.loc 2 207 34 view .LVU555
 1985              	.LBB137:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1986              		.loc 2 209 1 view .LVU556
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1987              		.loc 2 211 2 view .LVU557
 1988              		.syntax unified
 1989              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1990 000a EFF31184 			mrs r4, basepri											
 1991 000e 4FF05003 		mov r3, #80												
 1992 0012 83F31188 		msr basepri, r3											
 1993 0016 BFF36F8F 		isb														
 1994 001a BFF34F8F 		dsb														
 1995              	
 1996              	@ 0 "" 2
 1997              	.LVL150:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1998              		.loc 2 223 2 view .LVU558
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1999              		.loc 2 223 2 is_stmt 0 view .LVU559
 2000              		.thumb
 2001              		.syntax unified
 2002              	.LBE137:
 2003              	.LBE136:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2004              		.loc 1 1933 4 is_stmt 1 view .LVU560
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2005              		.loc 1 1933 8 is_stmt 0 view .LVU561
 2006 001e 2846     		mov	r0, r5
 2007 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2008              	.LVL151:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 141


 2009              		.loc 1 1933 6 discriminator 1 view .LVU562
 2010 0024 0646     		mov	r6, r0
 2011 0026 E0B1     		cbz	r0, .L152
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2012              		.loc 1 1935 39 is_stmt 1 view .LVU563
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2013              		.loc 1 1938 5 view .LVU564
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2014              		.loc 1 1938 30 is_stmt 0 view .LVU565
 2015 0028 194B     		ldr	r3, .L158
 2016 002a 1B68     		ldr	r3, [r3]
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2017              		.loc 1 1938 7 view .LVU566
 2018 002c 43BB     		cbnz	r3, .L153
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2019              		.loc 1 1942 6 is_stmt 1 view .LVU567
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2020              		.loc 1 1942 15 is_stmt 0 view .LVU568
 2021 002e EA6A     		ldr	r2, [r5, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2022              		.loc 1 1942 43 view .LVU569
 2023 0030 184B     		ldr	r3, .L158+4
 2024 0032 1B68     		ldr	r3, [r3]
 2025 0034 DB6A     		ldr	r3, [r3, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2026              		.loc 1 1942 8 view .LVU570
 2027 0036 9A42     		cmp	r2, r3
 2028 0038 20D2     		bcs	.L155
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2029              		.loc 1 1907 13 view .LVU571
 2030 003a 0026     		movs	r6, #0
 2031              	.L154:
 2032              	.LVL152:
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2033              		.loc 1 1948 31 is_stmt 1 view .LVU572
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2034              		.loc 1 1951 6 view .LVU573
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2035              		.loc 1 1951 15 is_stmt 0 view .LVU574
 2036 003c 2F1D     		adds	r7, r5, #4
 2037 003e 3846     		mov	r0, r7
 2038 0040 FFF7FEFF 		bl	uxListRemove
 2039              	.LVL153:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2040              		.loc 1 1952 6 is_stmt 1 view .LVU575
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2041              		.loc 1 1952 6 view .LVU576
 2042 0044 E86A     		ldr	r0, [r5, #44]
 2043 0046 0123     		movs	r3, #1
 2044 0048 8340     		lsls	r3, r3, r0
 2045 004a 134A     		ldr	r2, .L158+8
 2046 004c 1168     		ldr	r1, [r2]
 2047 004e 0B43     		orrs	r3, r3, r1
 2048 0050 1360     		str	r3, [r2]
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2049              		.loc 1 1952 6 view .LVU577
 2050 0052 00EB8000 		add	r0, r0, r0, lsl #2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 142


 2051 0056 3946     		mov	r1, r7
 2052 0058 104B     		ldr	r3, .L158+12
 2053 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2054 005e FFF7FEFF 		bl	vListInsertEnd
 2055              	.LVL154:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2056              		.loc 1 1952 36 discriminator 1 view .LVU578
 2057              	.L152:
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2058              		.loc 1 1964 29 view .LVU579
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2059              		.loc 1 1967 3 view .LVU580
 2060              	.LBB138:
 2061              	.LBI138:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2062              		.loc 2 227 30 view .LVU581
 2063              	.LBB139:
 2064              		.loc 2 229 2 view .LVU582
 2065              		.syntax unified
 2066              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2067 0062 84F31188 			msr basepri, r4	
 2068              	@ 0 "" 2
 2069              		.thumb
 2070              		.syntax unified
 2071              	.LBE139:
 2072              	.LBE138:
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2073              		.loc 1 1969 3 view .LVU583
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2074              		.loc 1 1970 2 is_stmt 0 view .LVU584
 2075 0066 3046     		mov	r0, r6
 2076 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2077              	.LVL155:
 2078              	.L157:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2079              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU585
 2080              	.LBB140:
 2081              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2082              		.loc 2 191 30 view .LVU586
 2083              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2084              		.loc 2 193 1 view .LVU587
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2085              		.loc 2 195 2 view .LVU588
 2086              		.syntax unified
 2087              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2088 006a 4FF05003 			mov r3, #80												
 2089 006e 83F31188 		msr basepri, r3											
 2090 0072 BFF36F8F 		isb														
 2091 0076 BFF34F8F 		dsb														
 2092              	
 2093              	@ 0 "" 2
 2094              		.thumb
 2095              		.syntax unified
 2096              	.L151:
 2097              	.LBE141:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 143


 2098              	.LBE140:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2099              		.loc 1 1911 3 discriminator 3 view .LVU589
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2100              		.loc 1 1911 3 discriminator 3 view .LVU590
 2101 007a FEE7     		b	.L151
 2102              	.LVL156:
 2103              	.L155:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2104              		.loc 1 1944 22 is_stmt 0 view .LVU591
 2105 007c 0126     		movs	r6, #1
 2106 007e DDE7     		b	.L154
 2107              	.L153:
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2108              		.loc 1 1959 6 is_stmt 1 view .LVU592
 2109 0080 05F11801 		add	r1, r5, #24
 2110 0084 0648     		ldr	r0, .L158+16
 2111 0086 FFF7FEFF 		bl	vListInsertEnd
 2112              	.LVL157:
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2113              		.loc 1 1907 13 is_stmt 0 view .LVU593
 2114 008a 0026     		movs	r6, #0
 2115 008c E9E7     		b	.L152
 2116              	.L159:
 2117 008e 00BF     		.align	2
 2118              	.L158:
 2119 0090 00000000 		.word	uxSchedulerSuspended
 2120 0094 00000000 		.word	pxCurrentTCB
 2121 0098 00000000 		.word	uxTopReadyPriority
 2122 009c 00000000 		.word	pxReadyTasksLists
 2123 00a0 00000000 		.word	xPendingReadyList
 2124              		.cfi_endproc
 2125              	.LFE17:
 2127              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2128              		.align	2
 2129              	.LC0:
 2130 0000 49444C45 		.ascii	"IDLE\000"
 2130      00
 2131              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2132              		.align	1
 2133              		.global	vTaskStartScheduler
 2134              		.syntax unified
 2135              		.thumb
 2136              		.thumb_func
 2138              	vTaskStartScheduler:
 2139              	.LFB18:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2140              		.loc 1 1976 1 is_stmt 1 view -0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 16
 2143              		@ frame_needed = 0, uses_anonymous_args = 0
 2144 0000 10B5     		push	{r4, lr}
 2145              		.cfi_def_cfa_offset 8
 2146              		.cfi_offset 4, -8
 2147              		.cfi_offset 14, -4
 2148 0002 88B0     		sub	sp, sp, #32
 2149              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 144


1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2150              		.loc 1 1977 1 view .LVU595
 2151              	.LBB142:
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2152              		.loc 1 1982 3 view .LVU596
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2153              		.loc 1 1982 17 is_stmt 0 view .LVU597
 2154 0004 0024     		movs	r4, #0
 2155 0006 0594     		str	r4, [sp, #20]
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2156              		.loc 1 1983 3 is_stmt 1 view .LVU598
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2157              		.loc 1 1983 16 is_stmt 0 view .LVU599
 2158 0008 0694     		str	r4, [sp, #24]
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2159              		.loc 1 1984 3 is_stmt 1 view .LVU600
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2160              		.loc 1 1988 3 view .LVU601
 2161 000a 07AA     		add	r2, sp, #28
 2162 000c 06A9     		add	r1, sp, #24
 2163 000e 05A8     		add	r0, sp, #20
 2164 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2165              	.LVL158:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2166              		.loc 1 1989 3 view .LVU602
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2167              		.loc 1 1989 21 is_stmt 0 view .LVU603
 2168 0014 059B     		ldr	r3, [sp, #20]
 2169 0016 0293     		str	r3, [sp, #8]
 2170 0018 069B     		ldr	r3, [sp, #24]
 2171 001a 0193     		str	r3, [sp, #4]
 2172 001c 0094     		str	r4, [sp]
 2173 001e 2346     		mov	r3, r4
 2174 0020 079A     		ldr	r2, [sp, #28]
 2175 0022 0E49     		ldr	r1, .L164
 2176 0024 0E48     		ldr	r0, .L164+4
 2177 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2178              	.LVL159:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2179              		.loc 1 1989 19 discriminator 1 view .LVU604
 2180 002a 0E4B     		ldr	r3, .L164+8
 2181 002c 1860     		str	r0, [r3]
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2182              		.loc 1 1997 3 is_stmt 1 view .LVU605
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2183              		.loc 1 1997 5 is_stmt 0 view .LVU606
 2184 002e 90B1     		cbz	r0, .L160
 2185              	.LVL160:
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2186              		.loc 1 1997 5 view .LVU607
 2187              	.LBE142:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2188              		.loc 1 2031 2 is_stmt 1 view .LVU608
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2189              		.loc 1 2047 3 view .LVU609
 2190              	.LBB143:
 2191              	.LBI143:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 145


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2192              		.loc 2 191 30 view .LVU610
 2193              	.LBB144:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2194              		.loc 2 193 1 view .LVU611
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2195              		.loc 2 195 2 view .LVU612
 2196              		.syntax unified
 2197              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2198 0030 4FF05003 			mov r3, #80												
 2199 0034 83F31188 		msr basepri, r3											
 2200 0038 BFF36F8F 		isb														
 2201 003c BFF34F8F 		dsb														
 2202              	
 2203              	@ 0 "" 2
 2204              		.thumb
 2205              		.syntax unified
 2206              	.LBE144:
 2207              	.LBE143:
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2208              		.loc 1 2059 3 view .LVU613
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2209              		.loc 1 2059 24 is_stmt 0 view .LVU614
 2210 0040 094B     		ldr	r3, .L164+12
 2211 0042 4FF0FF32 		mov	r2, #-1
 2212 0046 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2213              		.loc 1 2060 3 is_stmt 1 view .LVU615
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2214              		.loc 1 2060 21 is_stmt 0 view .LVU616
 2215 0048 084B     		ldr	r3, .L164+16
 2216 004a 0122     		movs	r2, #1
 2217 004c 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2218              		.loc 1 2061 3 is_stmt 1 view .LVU617
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2219              		.loc 1 2061 14 is_stmt 0 view .LVU618
 2220 004e 084B     		ldr	r3, .L164+20
 2221 0050 1C60     		str	r4, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2222              		.loc 1 2069 43 is_stmt 1 view .LVU619
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2223              		.loc 1 2071 26 view .LVU620
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2224              		.loc 1 2075 3 view .LVU621
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2225              		.loc 1 2075 7 is_stmt 0 view .LVU622
 2226 0052 FFF7FEFF 		bl	xPortStartScheduler
 2227              	.LVL161:
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 2228              		.loc 1 2079 3 is_stmt 1 view .LVU623
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2229              		.loc 1 2083 3 view .LVU624
 2230              	.L160:
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2231              		.loc 1 2096 1 is_stmt 0 view .LVU625
 2232 0056 08B0     		add	sp, sp, #32
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 146


 2233              		.cfi_def_cfa_offset 8
 2234              		@ sp needed
 2235 0058 10BD     		pop	{r4, pc}
 2236              	.L165:
 2237 005a 00BF     		.align	2
 2238              	.L164:
 2239 005c 00000000 		.word	.LC0
 2240 0060 00000000 		.word	prvIdleTask
 2241 0064 00000000 		.word	xIdleTaskHandle
 2242 0068 00000000 		.word	xNextTaskUnblockTime
 2243 006c 00000000 		.word	xSchedulerRunning
 2244 0070 00000000 		.word	xTickCount
 2245              		.cfi_endproc
 2246              	.LFE18:
 2248              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2249              		.align	1
 2250              		.global	vTaskEndScheduler
 2251              		.syntax unified
 2252              		.thumb
 2253              		.thumb_func
 2255              	vTaskEndScheduler:
 2256              	.LFB19:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2257              		.loc 1 2100 1 is_stmt 1 view -0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 0
 2260              		@ frame_needed = 0, uses_anonymous_args = 0
 2261 0000 08B5     		push	{r3, lr}
 2262              		.cfi_def_cfa_offset 8
 2263              		.cfi_offset 3, -8
 2264              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2265              		.loc 1 2104 2 view .LVU627
 2266              	.LBB145:
 2267              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2268              		.loc 2 191 30 view .LVU628
 2269              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2270              		.loc 2 193 1 view .LVU629
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2271              		.loc 2 195 2 view .LVU630
 2272              		.syntax unified
 2273              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2274 0002 4FF05003 			mov r3, #80												
 2275 0006 83F31188 		msr basepri, r3											
 2276 000a BFF36F8F 		isb														
 2277 000e BFF34F8F 		dsb														
 2278              	
 2279              	@ 0 "" 2
 2280              		.thumb
 2281              		.syntax unified
 2282              	.LBE146:
 2283              	.LBE145:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2284              		.loc 1 2105 2 view .LVU631
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 147


 2285              		.loc 1 2105 20 is_stmt 0 view .LVU632
 2286 0012 034B     		ldr	r3, .L168
 2287 0014 0022     		movs	r2, #0
 2288 0016 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2289              		.loc 1 2106 2 is_stmt 1 view .LVU633
 2290 0018 FFF7FEFF 		bl	vPortEndScheduler
 2291              	.LVL162:
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2292              		.loc 1 2107 1 is_stmt 0 view .LVU634
 2293 001c 08BD     		pop	{r3, pc}
 2294              	.L169:
 2295 001e 00BF     		.align	2
 2296              	.L168:
 2297 0020 00000000 		.word	xSchedulerRunning
 2298              		.cfi_endproc
 2299              	.LFE19:
 2301              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2302              		.align	1
 2303              		.global	vTaskSuspendAll
 2304              		.syntax unified
 2305              		.thumb
 2306              		.thumb_func
 2308              	vTaskSuspendAll:
 2309              	.LFB20:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2310              		.loc 1 2111 1 is_stmt 1 view -0
 2311              		.cfi_startproc
 2312              		@ args = 0, pretend = 0, frame = 0
 2313              		@ frame_needed = 0, uses_anonymous_args = 0
 2314              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2315              		.loc 1 2119 24 view .LVU636
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2316              		.loc 1 2123 2 view .LVU637
 2317 0000 024A     		ldr	r2, .L171
 2318 0002 1368     		ldr	r3, [r2]
 2319 0004 0133     		adds	r3, r3, #1
 2320 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2321              		.loc 1 2127 2 view .LVU638
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2322              		.loc 1 2128 1 is_stmt 0 view .LVU639
 2323 0008 7047     		bx	lr
 2324              	.L172:
 2325 000a 00BF     		.align	2
 2326              	.L171:
 2327 000c 00000000 		.word	uxSchedulerSuspended
 2328              		.cfi_endproc
 2329              	.LFE20:
 2331              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2332              		.align	1
 2333              		.global	xTaskGetTickCount
 2334              		.syntax unified
 2335              		.thumb
 2336              		.thumb_func
 2338              	xTaskGetTickCount:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 148


 2339              	.LFB22:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2340              		.loc 1 2305 1 is_stmt 1 view -0
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 0
 2343              		@ frame_needed = 0, uses_anonymous_args = 0
 2344              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2345              		.loc 1 2306 1 view .LVU641
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2346              		.loc 1 2309 32 view .LVU642
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2347              		.loc 1 2311 3 view .LVU643
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2348              		.loc 1 2311 10 is_stmt 0 view .LVU644
 2349 0000 014B     		ldr	r3, .L174
 2350 0002 1868     		ldr	r0, [r3]
 2351              	.LVL163:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2352              		.loc 1 2313 31 is_stmt 1 view .LVU645
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2353              		.loc 1 2315 2 view .LVU646
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2354              		.loc 1 2316 1 is_stmt 0 view .LVU647
 2355 0004 7047     		bx	lr
 2356              	.L175:
 2357 0006 00BF     		.align	2
 2358              	.L174:
 2359 0008 00000000 		.word	xTickCount
 2360              		.cfi_endproc
 2361              	.LFE22:
 2363              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2364              		.align	1
 2365              		.global	xTaskGetTickCountFromISR
 2366              		.syntax unified
 2367              		.thumb
 2368              		.thumb_func
 2370              	xTaskGetTickCountFromISR:
 2371              	.LFB23:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2372              		.loc 1 2320 1 is_stmt 1 view -0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 0, uses_anonymous_args = 0
 2376 0000 08B5     		push	{r3, lr}
 2377              		.cfi_def_cfa_offset 8
 2378              		.cfi_offset 3, -8
 2379              		.cfi_offset 14, -4
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2380              		.loc 1 2321 1 view .LVU649
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2381              		.loc 1 2322 1 view .LVU650
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2382              		.loc 1 2338 2 view .LVU651
 2383 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2384              	.LVL164:
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 149


 2385              		.loc 1 2340 2 view .LVU652
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2386              		.loc 1 2342 3 view .LVU653
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2387              		.loc 1 2342 11 is_stmt 0 view .LVU654
 2388 0006 014B     		ldr	r3, .L178
 2389 0008 1868     		ldr	r0, [r3]
 2390              	.LVL165:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2391              		.loc 1 2344 2 is_stmt 1 view .LVU655
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2392              		.loc 1 2346 2 view .LVU656
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2393              		.loc 1 2347 1 is_stmt 0 view .LVU657
 2394 000a 08BD     		pop	{r3, pc}
 2395              	.L179:
 2396              		.align	2
 2397              	.L178:
 2398 000c 00000000 		.word	xTickCount
 2399              		.cfi_endproc
 2400              	.LFE23:
 2402              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2403              		.align	1
 2404              		.global	uxTaskGetNumberOfTasks
 2405              		.syntax unified
 2406              		.thumb
 2407              		.thumb_func
 2409              	uxTaskGetNumberOfTasks:
 2410              	.LFB24:
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2411              		.loc 1 2351 1 is_stmt 1 view -0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415              		@ link register save eliminated.
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2416              		.loc 1 2354 2 view .LVU659
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2417              		.loc 1 2354 9 is_stmt 0 view .LVU660
 2418 0000 014B     		ldr	r3, .L181
 2419 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2420              		.loc 1 2355 1 view .LVU661
 2421 0004 7047     		bx	lr
 2422              	.L182:
 2423 0006 00BF     		.align	2
 2424              	.L181:
 2425 0008 00000000 		.word	uxCurrentNumberOfTasks
 2426              		.cfi_endproc
 2427              	.LFE24:
 2429              		.section	.text.pcTaskGetName,"ax",%progbits
 2430              		.align	1
 2431              		.global	pcTaskGetName
 2432              		.syntax unified
 2433              		.thumb
 2434              		.thumb_func
 2436              	pcTaskGetName:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 150


 2437              	.LVL166:
 2438              	.LFB25:
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2439              		.loc 1 2359 1 is_stmt 1 view -0
 2440              		.cfi_startproc
 2441              		@ args = 0, pretend = 0, frame = 0
 2442              		@ frame_needed = 0, uses_anonymous_args = 0
 2443              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2444              		.loc 1 2360 1 view .LVU663
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2445              		.loc 1 2364 2 view .LVU664
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2446              		.loc 1 2364 10 is_stmt 0 view .LVU665
 2447 0000 0346     		mov	r3, r0
 2448 0002 10B1     		cbz	r0, .L186
 2449              	.LVL167:
 2450              	.L184:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2451              		.loc 1 2365 23 is_stmt 1 discriminator 2 view .LVU666
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2452              		.loc 1 2366 2 view .LVU667
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2453              		.loc 1 2367 1 is_stmt 0 view .LVU668
 2454 0004 03F13400 		add	r0, r3, #52
 2455 0008 7047     		bx	lr
 2456              	.LVL168:
 2457              	.L186:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2458              		.loc 1 2364 10 discriminator 1 view .LVU669
 2459 000a 064B     		ldr	r3, .L187
 2460 000c 1B68     		ldr	r3, [r3]
 2461              	.LVL169:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2462              		.loc 1 2365 2 is_stmt 1 view .LVU670
 2463 000e 002B     		cmp	r3, #0
 2464 0010 F8D1     		bne	.L184
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2465              		.loc 1 2365 2 discriminator 1 view .LVU671
 2466              	.LBB147:
 2467              	.LBI147:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2468              		.loc 2 191 30 view .LVU672
 2469              	.LBB148:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2470              		.loc 2 193 1 view .LVU673
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2471              		.loc 2 195 2 view .LVU674
 2472              		.syntax unified
 2473              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2474 0012 4FF05003 			mov r3, #80												
 2475 0016 83F31188 		msr basepri, r3											
 2476 001a BFF36F8F 		isb														
 2477 001e BFF34F8F 		dsb														
 2478              	
 2479              	@ 0 "" 2
 2480              	.LVL170:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 151


 2481              		.thumb
 2482              		.syntax unified
 2483              	.L185:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2484              		.loc 2 195 2 is_stmt 0 view .LVU675
 2485              	.LBE148:
 2486              	.LBE147:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2487              		.loc 1 2365 2 is_stmt 1 discriminator 3 view .LVU676
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2488              		.loc 1 2365 2 discriminator 3 view .LVU677
 2489 0022 FEE7     		b	.L185
 2490              	.L188:
 2491              		.align	2
 2492              	.L187:
 2493 0024 00000000 		.word	pxCurrentTCB
 2494              		.cfi_endproc
 2495              	.LFE25:
 2497              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2498              		.align	1
 2499              		.global	xTaskIncrementTick
 2500              		.syntax unified
 2501              		.thumb
 2502              		.thumb_func
 2504              	xTaskIncrementTick:
 2505              	.LFB27:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2506              		.loc 1 2708 1 view -0
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 0
 2509              		@ frame_needed = 0, uses_anonymous_args = 0
 2510 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2511              		.cfi_def_cfa_offset 24
 2512              		.cfi_offset 3, -24
 2513              		.cfi_offset 4, -20
 2514              		.cfi_offset 5, -16
 2515              		.cfi_offset 6, -12
 2516              		.cfi_offset 7, -8
 2517              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2518              		.loc 1 2709 1 view .LVU679
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2519              		.loc 1 2710 1 view .LVU680
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2520              		.loc 1 2711 1 view .LVU681
 2521              	.LVL171:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2522              		.loc 1 2716 40 view .LVU682
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2523              		.loc 1 2717 2 view .LVU683
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2524              		.loc 1 2717 27 is_stmt 0 view .LVU684
 2525 0002 3A4B     		ldr	r3, .L210
 2526 0004 1B68     		ldr	r3, [r3]
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2527              		.loc 1 2717 4 view .LVU685
 2528 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 152


 2529 0008 69D1     		bne	.L190
 2530              	.LBB149:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2531              		.loc 1 2721 3 is_stmt 1 view .LVU686
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2532              		.loc 1 2721 49 is_stmt 0 view .LVU687
 2533 000a 394B     		ldr	r3, .L210+4
 2534 000c 1D68     		ldr	r5, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2535              		.loc 1 2721 20 view .LVU688
 2536 000e 0135     		adds	r5, r5, #1
 2537              	.LVL172:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2538              		.loc 1 2725 3 is_stmt 1 view .LVU689
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2539              		.loc 1 2725 14 is_stmt 0 view .LVU690
 2540 0010 1D60     		str	r5, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2541              		.loc 1 2727 3 is_stmt 1 view .LVU691
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2542              		.loc 1 2727 5 is_stmt 0 view .LVU692
 2543 0012 C5B9     		cbnz	r5, .L191
 2544              	.LBB150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2545              		.loc 1 2729 4 is_stmt 1 view .LVU693
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2546              		.loc 1 2729 4 view .LVU694
 2547 0014 374B     		ldr	r3, .L210+8
 2548 0016 1B68     		ldr	r3, [r3]
 2549 0018 1B68     		ldr	r3, [r3]
 2550 001a 43B1     		cbz	r3, .L192
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2551              		.loc 1 2729 4 discriminator 1 view .LVU695
 2552              	.LBB151:
 2553              	.LBI151:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2554              		.loc 2 191 30 view .LVU696
 2555              	.LBB152:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2556              		.loc 2 193 1 view .LVU697
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2557              		.loc 2 195 2 view .LVU698
 2558              		.syntax unified
 2559              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2560 001c 4FF05003 			mov r3, #80												
 2561 0020 83F31188 		msr basepri, r3											
 2562 0024 BFF36F8F 		isb														
 2563 0028 BFF34F8F 		dsb														
 2564              	
 2565              	@ 0 "" 2
 2566              		.thumb
 2567              		.syntax unified
 2568              	.L193:
 2569              	.LBE152:
 2570              	.LBE151:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2571              		.loc 1 2729 4 discriminator 3 view .LVU699
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 153


2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2572              		.loc 1 2729 4 discriminator 3 view .LVU700
 2573 002c FEE7     		b	.L193
 2574              	.L192:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2575              		.loc 1 2729 4 discriminator 2 view .LVU701
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2576              		.loc 1 2729 4 discriminator 2 view .LVU702
 2577 002e 314A     		ldr	r2, .L210+8
 2578 0030 1168     		ldr	r1, [r2]
 2579              	.LVL173:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2580              		.loc 1 2729 4 view .LVU703
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2581              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU704
 2582 0032 314B     		ldr	r3, .L210+12
 2583 0034 1868     		ldr	r0, [r3]
 2584 0036 1060     		str	r0, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2585              		.loc 1 2729 4 is_stmt 1 view .LVU705
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2586              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU706
 2587 0038 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2588              		.loc 1 2729 4 is_stmt 1 view .LVU707
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2589              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU708
 2590 003a 304A     		ldr	r2, .L210+16
 2591 003c 1368     		ldr	r3, [r2]
 2592 003e 0133     		adds	r3, r3, #1
 2593 0040 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2594              		.loc 1 2729 4 is_stmt 1 view .LVU709
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2595              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU710
 2596 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2597              	.LVL174:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2598              		.loc 1 2729 4 discriminator 2 view .LVU711
 2599              	.LBE150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2600              		.loc 1 2729 30 is_stmt 1 discriminator 1 view .LVU712
 2601              	.L191:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2602              		.loc 1 2733 28 view .LVU713
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2603              		.loc 1 2740 3 view .LVU714
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2604              		.loc 1 2740 23 is_stmt 0 view .LVU715
 2605 0046 2E4B     		ldr	r3, .L210+20
 2606 0048 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2607              		.loc 1 2740 5 view .LVU716
 2608 004a AB42     		cmp	r3, r5
 2609 004c 3DD9     		bls	.L203
 2610              	.LBE149:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 154


 2611              		.loc 1 2711 12 view .LVU717
 2612 004e 0027     		movs	r7, #0
 2613              	.LVL175:
 2614              	.L195:
 2615              	.LBB153:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2616              		.loc 1 2823 4 is_stmt 1 view .LVU718
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2617              		.loc 1 2823 8 is_stmt 0 view .LVU719
 2618 0050 2C4B     		ldr	r3, .L210+24
 2619 0052 1B68     		ldr	r3, [r3]
 2620 0054 DB6A     		ldr	r3, [r3, #44]
 2621 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2622 005a 9A00     		lsls	r2, r3, #2
 2623 005c 2A4B     		ldr	r3, .L210+28
 2624 005e 9B58     		ldr	r3, [r3, r2]
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2625              		.loc 1 2823 6 view .LVU720
 2626 0060 012B     		cmp	r3, #1
 2627 0062 00D9     		bls	.L201
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2628              		.loc 1 2825 21 view .LVU721
 2629 0064 0127     		movs	r7, #1
 2630              	.LVL176:
 2631              	.L201:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2632              		.loc 1 2829 29 is_stmt 1 view .LVU722
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2633              		.loc 1 2851 4 view .LVU723
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2634              		.loc 1 2851 22 is_stmt 0 view .LVU724
 2635 0066 294B     		ldr	r3, .L210+32
 2636 0068 1B68     		ldr	r3, [r3]
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2637              		.loc 1 2851 6 view .LVU725
 2638 006a 002B     		cmp	r3, #0
 2639 006c 3CD0     		beq	.L189
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2640              		.loc 1 2853 21 view .LVU726
 2641 006e 0127     		movs	r7, #1
 2642              	.LVL177:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2643              		.loc 1 2853 21 view .LVU727
 2644              	.LBE153:
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2645              		.loc 1 2875 2 is_stmt 1 view .LVU728
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2646              		.loc 1 2875 9 is_stmt 0 view .LVU729
 2647 0070 3AE0     		b	.L189
 2648              	.LVL178:
 2649              	.L204:
 2650              	.LBB154:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2651              		.loc 1 2806 24 view .LVU730
 2652 0072 0127     		movs	r7, #1
 2653              	.LVL179:
 2654              	.L194:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 155


2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2655              		.loc 1 2742 4 is_stmt 1 view .LVU731
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2656              		.loc 1 2744 5 view .LVU732
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2657              		.loc 1 2744 9 is_stmt 0 view .LVU733
 2658 0074 1F4B     		ldr	r3, .L210+8
 2659 0076 1B68     		ldr	r3, [r3]
 2660 0078 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2661              		.loc 1 2744 7 view .LVU734
 2662 007a 43B3     		cbz	r3, .L208
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2663              		.loc 1 2760 6 is_stmt 1 view .LVU735
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2664              		.loc 1 2760 14 is_stmt 0 view .LVU736
 2665 007c 1D4B     		ldr	r3, .L210+8
 2666 007e 1B68     		ldr	r3, [r3]
 2667 0080 DB68     		ldr	r3, [r3, #12]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2668              		.loc 1 2760 12 view .LVU737
 2669 0082 DC68     		ldr	r4, [r3, #12]
 2670              	.LVL180:
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2671              		.loc 1 2761 6 is_stmt 1 view .LVU738
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2672              		.loc 1 2761 17 is_stmt 0 view .LVU739
 2673 0084 6368     		ldr	r3, [r4, #4]
 2674              	.LVL181:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2675              		.loc 1 2763 6 is_stmt 1 view .LVU740
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2676              		.loc 1 2763 8 is_stmt 0 view .LVU741
 2677 0086 9D42     		cmp	r5, r3
 2678 0088 26D3     		bcc	.L209
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2679              		.loc 1 2775 31 is_stmt 1 view .LVU742
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2680              		.loc 1 2779 6 view .LVU743
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2681              		.loc 1 2779 15 is_stmt 0 view .LVU744
 2682 008a 261D     		adds	r6, r4, #4
 2683 008c 3046     		mov	r0, r6
 2684 008e FFF7FEFF 		bl	uxListRemove
 2685              	.LVL182:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2686              		.loc 1 2783 6 is_stmt 1 view .LVU745
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2687              		.loc 1 2783 10 is_stmt 0 view .LVU746
 2688 0092 A36A     		ldr	r3, [r4, #40]
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2689              		.loc 1 2783 8 view .LVU747
 2690 0094 1BB1     		cbz	r3, .L198
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2691              		.loc 1 2785 7 is_stmt 1 view .LVU748
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2692              		.loc 1 2785 16 is_stmt 0 view .LVU749
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 156


 2693 0096 04F11800 		add	r0, r4, #24
 2694 009a FFF7FEFF 		bl	uxListRemove
 2695              	.LVL183:
 2696              	.L198:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2697              		.loc 1 2789 31 is_stmt 1 view .LVU750
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2698              		.loc 1 2794 6 view .LVU751
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2699              		.loc 1 2794 6 view .LVU752
 2700 009e E36A     		ldr	r3, [r4, #44]
 2701 00a0 0122     		movs	r2, #1
 2702 00a2 9A40     		lsls	r2, r2, r3
 2703 00a4 1A49     		ldr	r1, .L210+36
 2704 00a6 0868     		ldr	r0, [r1]
 2705 00a8 0243     		orrs	r2, r2, r0
 2706 00aa 0A60     		str	r2, [r1]
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2707              		.loc 1 2794 6 view .LVU753
 2708 00ac 03EB8303 		add	r3, r3, r3, lsl #2
 2709 00b0 9A00     		lsls	r2, r3, #2
 2710 00b2 3146     		mov	r1, r6
 2711 00b4 1448     		ldr	r0, .L210+28
 2712 00b6 1044     		add	r0, r0, r2
 2713 00b8 FFF7FEFF 		bl	vListInsertEnd
 2714              	.LVL184:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2715              		.loc 1 2794 36 discriminator 1 view .LVU754
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2716              		.loc 1 2804 7 view .LVU755
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2717              		.loc 1 2804 16 is_stmt 0 view .LVU756
 2718 00bc E26A     		ldr	r2, [r4, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2719              		.loc 1 2804 44 view .LVU757
 2720 00be 114B     		ldr	r3, .L210+24
 2721 00c0 1B68     		ldr	r3, [r3]
 2722 00c2 DB6A     		ldr	r3, [r3, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2723              		.loc 1 2804 9 view .LVU758
 2724 00c4 9A42     		cmp	r2, r3
 2725 00c6 D4D2     		bcs	.L204
 2726 00c8 D4E7     		b	.L194
 2727              	.LVL185:
 2728              	.L203:
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2729              		.loc 1 2804 9 view .LVU759
 2730              	.LBE154:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2731              		.loc 1 2711 12 view .LVU760
 2732 00ca 0027     		movs	r7, #0
 2733 00cc D2E7     		b	.L194
 2734              	.LVL186:
 2735              	.L208:
 2736              	.LBB155:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2737              		.loc 1 2751 6 is_stmt 1 view .LVU761
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 157


2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2738              		.loc 1 2751 27 is_stmt 0 view .LVU762
 2739 00ce 0C4B     		ldr	r3, .L210+20
 2740 00d0 4FF0FF32 		mov	r2, #-1
 2741 00d4 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2742              		.loc 1 2752 6 is_stmt 1 view .LVU763
 2743 00d6 BBE7     		b	.L195
 2744              	.LVL187:
 2745              	.L209:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2746              		.loc 1 2770 7 view .LVU764
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2747              		.loc 1 2770 28 is_stmt 0 view .LVU765
 2748 00d8 094A     		ldr	r2, .L210+20
 2749 00da 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2750              		.loc 1 2771 7 is_stmt 1 view .LVU766
 2751 00dc B8E7     		b	.L195
 2752              	.LVL188:
 2753              	.L190:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2754              		.loc 1 2771 7 is_stmt 0 view .LVU767
 2755              	.LBE155:
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2756              		.loc 1 2864 3 is_stmt 1 view .LVU768
 2757 00de 0D4A     		ldr	r2, .L210+40
 2758 00e0 1368     		ldr	r3, [r2]
 2759 00e2 0133     		adds	r3, r3, #1
 2760 00e4 1360     		str	r3, [r2]
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2761              		.loc 1 2711 12 is_stmt 0 view .LVU769
 2762 00e6 0027     		movs	r7, #0
 2763              	.LVL189:
 2764              	.L189:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2765              		.loc 1 2876 1 view .LVU770
 2766 00e8 3846     		mov	r0, r7
 2767 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2768              	.L211:
 2769              		.align	2
 2770              	.L210:
 2771 00ec 00000000 		.word	uxSchedulerSuspended
 2772 00f0 00000000 		.word	xTickCount
 2773 00f4 00000000 		.word	pxDelayedTaskList
 2774 00f8 00000000 		.word	pxOverflowDelayedTaskList
 2775 00fc 00000000 		.word	xNumOfOverflows
 2776 0100 00000000 		.word	xNextTaskUnblockTime
 2777 0104 00000000 		.word	pxCurrentTCB
 2778 0108 00000000 		.word	pxReadyTasksLists
 2779 010c 00000000 		.word	xYieldPending
 2780 0110 00000000 		.word	uxTopReadyPriority
 2781 0114 00000000 		.word	xPendedTicks
 2782              		.cfi_endproc
 2783              	.LFE27:
 2785              		.section	.text.xTaskResumeAll,"ax",%progbits
 2786              		.align	1
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 158


 2787              		.global	xTaskResumeAll
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
 2792              	xTaskResumeAll:
 2793              	.LFB21:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2794              		.loc 1 2195 1 is_stmt 1 view -0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 0
 2797              		@ frame_needed = 0, uses_anonymous_args = 0
 2798 0000 38B5     		push	{r3, r4, r5, lr}
 2799              		.cfi_def_cfa_offset 16
 2800              		.cfi_offset 3, -16
 2801              		.cfi_offset 4, -12
 2802              		.cfi_offset 5, -8
 2803              		.cfi_offset 14, -4
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2804              		.loc 1 2196 1 view .LVU772
 2805              	.LVL190:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2806              		.loc 1 2197 1 view .LVU773
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2807              		.loc 1 2201 2 view .LVU774
 2808 0002 354B     		ldr	r3, .L228
 2809 0004 1B68     		ldr	r3, [r3]
 2810 0006 43B9     		cbnz	r3, .L213
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2811              		.loc 1 2201 2 discriminator 1 view .LVU775
 2812              	.LBB156:
 2813              	.LBI156:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2814              		.loc 2 191 30 view .LVU776
 2815              	.LBB157:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2816              		.loc 2 193 1 view .LVU777
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2817              		.loc 2 195 2 view .LVU778
 2818              		.syntax unified
 2819              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2820 0008 4FF05003 			mov r3, #80												
 2821 000c 83F31188 		msr basepri, r3											
 2822 0010 BFF36F8F 		isb														
 2823 0014 BFF34F8F 		dsb														
 2824              	
 2825              	@ 0 "" 2
 2826              		.thumb
 2827              		.syntax unified
 2828              	.L214:
 2829              	.LBE157:
 2830              	.LBE156:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2831              		.loc 1 2201 2 discriminator 3 view .LVU779
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2832              		.loc 1 2201 2 discriminator 3 view .LVU780
 2833 0018 FEE7     		b	.L214
 2834              	.L213:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 159


2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2835              		.loc 1 2201 38 discriminator 2 view .LVU781
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2836              		.loc 1 2208 2 view .LVU782
 2837 001a FFF7FEFF 		bl	vPortEnterCritical
 2838              	.LVL191:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2839              		.loc 1 2210 3 view .LVU783
 2840 001e 2E4B     		ldr	r3, .L228
 2841 0020 1A68     		ldr	r2, [r3]
 2842 0022 013A     		subs	r2, r2, #1
 2843 0024 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2844              		.loc 1 2212 3 view .LVU784
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2845              		.loc 1 2212 28 is_stmt 0 view .LVU785
 2846 0026 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2847              		.loc 1 2212 5 view .LVU786
 2848 0028 002B     		cmp	r3, #0
 2849 002a 4FD1     		bne	.L223
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2850              		.loc 1 2214 4 is_stmt 1 view .LVU787
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2851              		.loc 1 2214 31 is_stmt 0 view .LVU788
 2852 002c 2B4B     		ldr	r3, .L228+4
 2853 002e 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2854              		.loc 1 2214 6 view .LVU789
 2855 0030 0BB9     		cbnz	r3, .L224
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2856              		.loc 1 2197 12 view .LVU790
 2857 0032 0024     		movs	r4, #0
 2858 0034 4BE0     		b	.L215
 2859              	.L224:
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2860              		.loc 1 2196 8 view .LVU791
 2861 0036 0024     		movs	r4, #0
 2862              	.LVL192:
 2863              	.L216:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2864              		.loc 1 2233 31 is_stmt 1 view .LVU792
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2865              		.loc 1 2218 52 view .LVU793
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2866              		.loc 1 2218 12 is_stmt 0 view .LVU794
 2867 0038 294B     		ldr	r3, .L228+8
 2868 003a 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2869              		.loc 1 2218 52 view .LVU795
 2870 003c 1BB3     		cbz	r3, .L226
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2871              		.loc 1 2220 6 is_stmt 1 view .LVU796
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2872              		.loc 1 2220 14 is_stmt 0 view .LVU797
 2873 003e 284B     		ldr	r3, .L228+8
 2874 0040 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 160


2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2875              		.loc 1 2220 12 view .LVU798
 2876 0042 DC68     		ldr	r4, [r3, #12]
 2877              	.LVL193:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2878              		.loc 1 2221 6 is_stmt 1 view .LVU799
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2879              		.loc 1 2221 15 is_stmt 0 view .LVU800
 2880 0044 04F11800 		add	r0, r4, #24
 2881 0048 FFF7FEFF 		bl	uxListRemove
 2882              	.LVL194:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2883              		.loc 1 2222 6 is_stmt 1 view .LVU801
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2884              		.loc 1 2222 15 is_stmt 0 view .LVU802
 2885 004c 251D     		adds	r5, r4, #4
 2886 004e 2846     		mov	r0, r5
 2887 0050 FFF7FEFF 		bl	uxListRemove
 2888              	.LVL195:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2889              		.loc 1 2223 6 is_stmt 1 view .LVU803
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2890              		.loc 1 2223 6 view .LVU804
 2891 0054 E06A     		ldr	r0, [r4, #44]
 2892 0056 0123     		movs	r3, #1
 2893 0058 8340     		lsls	r3, r3, r0
 2894 005a 224A     		ldr	r2, .L228+12
 2895 005c 1168     		ldr	r1, [r2]
 2896 005e 0B43     		orrs	r3, r3, r1
 2897 0060 1360     		str	r3, [r2]
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2898              		.loc 1 2223 6 view .LVU805
 2899 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2900 0066 2946     		mov	r1, r5
 2901 0068 1F4B     		ldr	r3, .L228+16
 2902 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2903 006e FFF7FEFF 		bl	vListInsertEnd
 2904              	.LVL196:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2905              		.loc 1 2223 36 discriminator 1 view .LVU806
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2906              		.loc 1 2227 6 view .LVU807
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2907              		.loc 1 2227 15 is_stmt 0 view .LVU808
 2908 0072 E26A     		ldr	r2, [r4, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2909              		.loc 1 2227 43 view .LVU809
 2910 0074 1D4B     		ldr	r3, .L228+20
 2911 0076 1B68     		ldr	r3, [r3]
 2912 0078 DB6A     		ldr	r3, [r3, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2913              		.loc 1 2227 8 view .LVU810
 2914 007a 9A42     		cmp	r2, r3
 2915 007c DCD3     		bcc	.L216
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2916              		.loc 1 2229 7 is_stmt 1 view .LVU811
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 161


 2917              		.loc 1 2229 21 is_stmt 0 view .LVU812
 2918 007e 1C4B     		ldr	r3, .L228+24
 2919 0080 0122     		movs	r2, #1
 2920 0082 1A60     		str	r2, [r3]
 2921 0084 D8E7     		b	.L216
 2922              	.L226:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2923              		.loc 1 2237 5 is_stmt 1 view .LVU813
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2924              		.loc 1 2237 7 is_stmt 0 view .LVU814
 2925 0086 0CB1     		cbz	r4, .L219
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2926              		.loc 1 2245 6 is_stmt 1 view .LVU815
 2927 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2928              	.LVL197:
 2929              	.L219:
 2930              	.LBB158:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2931              		.loc 1 2253 6 view .LVU816
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2932              		.loc 1 2253 17 is_stmt 0 view .LVU817
 2933 008c 194B     		ldr	r3, .L228+28
 2934 008e 1C68     		ldr	r4, [r3]
 2935              	.LVL198:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2936              		.loc 1 2255 6 is_stmt 1 view .LVU818
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2937              		.loc 1 2255 8 is_stmt 0 view .LVU819
 2938 0090 84B9     		cbnz	r4, .L222
 2939              	.L220:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2940              		.loc 1 2274 31 is_stmt 1 view .LVU820
 2941              	.LBE158:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2942              		.loc 1 2278 5 view .LVU821
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2943              		.loc 1 2278 23 is_stmt 0 view .LVU822
 2944 0092 174B     		ldr	r3, .L228+24
 2945 0094 1C68     		ldr	r4, [r3]
 2946              	.LVL199:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2947              		.loc 1 2278 7 view .LVU823
 2948 0096 D4B1     		cbz	r4, .L215
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2949              		.loc 1 2282 7 is_stmt 1 view .LVU824
 2950              	.LVL200:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2951              		.loc 1 2285 6 view .LVU825
 2952 0098 4FF0E023 		mov	r3, #-536813568
 2953 009c 4FF08052 		mov	r2, #268435456
 2954 00a0 C3F8042D 		str	r2, [r3, #3332]
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2955              		.loc 1 2285 6 view .LVU826
 2956              		.syntax unified
 2957              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2958 00a4 BFF34F8F 		dsb
 2959              	@ 0 "" 2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 162


2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2960              		.loc 1 2285 6 view .LVU827
 2961              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2962 00a8 BFF36F8F 		isb
 2963              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2964              		.loc 1 2285 37 view .LVU828
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2965              		.loc 1 2282 23 is_stmt 0 view .LVU829
 2966              		.thumb
 2967              		.syntax unified
 2968 00ac 0124     		movs	r4, #1
 2969 00ae 0EE0     		b	.L215
 2970              	.LVL201:
 2971              	.L221:
 2972              	.LBB159:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2973              		.loc 1 2265 33 is_stmt 1 view .LVU830
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 2974              		.loc 1 2267 8 view .LVU831
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2975              		.loc 1 2268 30 view .LVU832
 2976 00b0 013C     		subs	r4, r4, #1
 2977              	.LVL202:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2978              		.loc 1 2268 30 is_stmt 0 view .LVU833
 2979 00b2 07D0     		beq	.L227
 2980              	.L222:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2981              		.loc 1 2257 7 is_stmt 1 view .LVU834
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2982              		.loc 1 2259 8 view .LVU835
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2983              		.loc 1 2259 12 is_stmt 0 view .LVU836
 2984 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 2985              	.LVL203:
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2986              		.loc 1 2259 10 discriminator 1 view .LVU837
 2987 00b8 0028     		cmp	r0, #0
 2988 00ba F9D0     		beq	.L221
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2989              		.loc 1 2261 9 is_stmt 1 view .LVU838
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2990              		.loc 1 2261 23 is_stmt 0 view .LVU839
 2991 00bc 0C4B     		ldr	r3, .L228+24
 2992 00be 0122     		movs	r2, #1
 2993 00c0 1A60     		str	r2, [r3]
 2994 00c2 F5E7     		b	.L221
 2995              	.L227:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2996              		.loc 1 2270 7 is_stmt 1 view .LVU840
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2997              		.loc 1 2270 20 is_stmt 0 view .LVU841
 2998 00c4 0B4B     		ldr	r3, .L228+28
 2999 00c6 0022     		movs	r2, #0
 3000 00c8 1A60     		str	r2, [r3]
 3001 00ca E2E7     		b	.L220
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 163


 3002              	.LVL204:
 3003              	.L223:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3004              		.loc 1 2270 20 view .LVU842
 3005              	.LBE159:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3006              		.loc 1 2197 12 view .LVU843
 3007 00cc 0024     		movs	r4, #0
 3008              	.LVL205:
 3009              	.L215:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3010              		.loc 1 2295 28 is_stmt 1 view .LVU844
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3011              		.loc 1 2298 2 view .LVU845
 3012 00ce FFF7FEFF 		bl	vPortExitCritical
 3013              	.LVL206:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3014              		.loc 1 2300 2 view .LVU846
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3015              		.loc 1 2301 1 is_stmt 0 view .LVU847
 3016 00d2 2046     		mov	r0, r4
 3017 00d4 38BD     		pop	{r3, r4, r5, pc}
 3018              	.LVL207:
 3019              	.L229:
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3020              		.loc 1 2301 1 view .LVU848
 3021 00d6 00BF     		.align	2
 3022              	.L228:
 3023 00d8 00000000 		.word	uxSchedulerSuspended
 3024 00dc 00000000 		.word	uxCurrentNumberOfTasks
 3025 00e0 00000000 		.word	xPendingReadyList
 3026 00e4 00000000 		.word	uxTopReadyPriority
 3027 00e8 00000000 		.word	pxReadyTasksLists
 3028 00ec 00000000 		.word	pxCurrentTCB
 3029 00f0 00000000 		.word	xYieldPending
 3030 00f4 00000000 		.word	xPendedTicks
 3031              		.cfi_endproc
 3032              	.LFE21:
 3034              		.section	.text.vTaskDelay,"ax",%progbits
 3035              		.align	1
 3036              		.global	vTaskDelay
 3037              		.syntax unified
 3038              		.thumb
 3039              		.thumb_func
 3041              	vTaskDelay:
 3042              	.LVL208:
 3043              	.LFB10:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3044              		.loc 1 1342 2 is_stmt 1 view -0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3048              		.loc 1 1342 2 is_stmt 0 view .LVU850
 3049 0000 10B5     		push	{r4, lr}
 3050              		.cfi_def_cfa_offset 8
 3051              		.cfi_offset 4, -8
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 164


 3052              		.cfi_offset 14, -4
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3053              		.loc 1 1343 2 is_stmt 1 view .LVU851
 3054              	.LVL209:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3055              		.loc 1 1346 3 view .LVU852
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3056              		.loc 1 1346 5 is_stmt 0 view .LVU853
 3057 0002 A8B1     		cbz	r0, .L231
 3058 0004 0446     		mov	r4, r0
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3059              		.loc 1 1348 4 is_stmt 1 view .LVU854
 3060 0006 104B     		ldr	r3, .L236
 3061 0008 1B68     		ldr	r3, [r3]
 3062 000a 43B1     		cbz	r3, .L232
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3063              		.loc 1 1348 4 discriminator 1 view .LVU855
 3064              	.LBB160:
 3065              	.LBI160:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3066              		.loc 2 191 30 view .LVU856
 3067              	.LBB161:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3068              		.loc 2 193 1 view .LVU857
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3069              		.loc 2 195 2 view .LVU858
 3070              		.syntax unified
 3071              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3072 000c 4FF05003 			mov r3, #80												
 3073 0010 83F31188 		msr basepri, r3											
 3074 0014 BFF36F8F 		isb														
 3075 0018 BFF34F8F 		dsb														
 3076              	
 3077              	@ 0 "" 2
 3078              		.thumb
 3079              		.syntax unified
 3080              	.L233:
 3081              	.LBE161:
 3082              	.LBE160:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3083              		.loc 1 1348 4 discriminator 3 view .LVU859
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3084              		.loc 1 1348 4 discriminator 3 view .LVU860
 3085 001c FEE7     		b	.L233
 3086              	.L232:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3087              		.loc 1 1348 45 discriminator 2 view .LVU861
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3088              		.loc 1 1349 4 view .LVU862
 3089 001e FFF7FEFF 		bl	vTaskSuspendAll
 3090              	.LVL210:
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3091              		.loc 1 1351 22 view .LVU863
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3092              		.loc 1 1360 5 view .LVU864
 3093 0022 0021     		movs	r1, #0
 3094 0024 2046     		mov	r0, r4
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 165


 3095 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3096              	.LVL211:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3097              		.loc 1 1362 4 view .LVU865
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3098              		.loc 1 1362 22 is_stmt 0 view .LVU866
 3099 002a FFF7FEFF 		bl	xTaskResumeAll
 3100              	.LVL212:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3101              		.loc 1 1366 28 is_stmt 1 view .LVU867
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3102              		.loc 1 1371 3 view .LVU868
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3103              		.loc 1 1371 5 is_stmt 0 view .LVU869
 3104 002e 48B9     		cbnz	r0, .L230
 3105              	.LVL213:
 3106              	.L231:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3107              		.loc 1 1373 4 is_stmt 1 view .LVU870
 3108 0030 4FF0E023 		mov	r3, #-536813568
 3109 0034 4FF08052 		mov	r2, #268435456
 3110 0038 C3F8042D 		str	r2, [r3, #3332]
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3111              		.loc 1 1373 4 view .LVU871
 3112              		.syntax unified
 3113              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3114 003c BFF34F8F 		dsb
 3115              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3116              		.loc 1 1373 4 view .LVU872
 3117              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3118 0040 BFF36F8F 		isb
 3119              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3120              		.loc 1 1373 26 view .LVU873
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3121              		.loc 1 1377 28 view .LVU874
 3122              		.thumb
 3123              		.syntax unified
 3124              	.L230:
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3125              		.loc 1 1379 2 is_stmt 0 view .LVU875
 3126 0044 10BD     		pop	{r4, pc}
 3127              	.L237:
 3128 0046 00BF     		.align	2
 3129              	.L236:
 3130 0048 00000000 		.word	uxSchedulerSuspended
 3131              		.cfi_endproc
 3132              	.LFE10:
 3134              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3135              		.align	1
 3136              		.global	xTaskCatchUpTicks
 3137              		.syntax unified
 3138              		.thumb
 3139              		.thumb_func
 3141              	xTaskCatchUpTicks:
 3142              	.LVL214:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 166


 3143              	.LFB26:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3144              		.loc 1 2610 1 is_stmt 1 view -0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 0
 3147              		@ frame_needed = 0, uses_anonymous_args = 0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3148              		.loc 1 2611 1 view .LVU877
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3149              		.loc 1 2615 2 view .LVU878
 3150 0000 0B4B     		ldr	r3, .L243
 3151 0002 1B68     		ldr	r3, [r3]
 3152 0004 43B1     		cbz	r3, .L239
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3153              		.loc 1 2615 2 discriminator 1 view .LVU879
 3154              	.LBB162:
 3155              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3156              		.loc 2 191 30 view .LVU880
 3157              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3158              		.loc 2 193 1 view .LVU881
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3159              		.loc 2 195 2 view .LVU882
 3160              		.syntax unified
 3161              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3162 0006 4FF05003 			mov r3, #80												
 3163 000a 83F31188 		msr basepri, r3											
 3164 000e BFF36F8F 		isb														
 3165 0012 BFF34F8F 		dsb														
 3166              	
 3167              	@ 0 "" 2
 3168              		.thumb
 3169              		.syntax unified
 3170              	.L240:
 3171              	.LBE163:
 3172              	.LBE162:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3173              		.loc 1 2615 2 discriminator 3 view .LVU883
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3174              		.loc 1 2615 2 discriminator 3 view .LVU884
 3175 0016 FEE7     		b	.L240
 3176              	.L239:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3177              		.loc 1 2610 1 is_stmt 0 view .LVU885
 3178 0018 10B5     		push	{r4, lr}
 3179              		.cfi_def_cfa_offset 8
 3180              		.cfi_offset 4, -8
 3181              		.cfi_offset 14, -4
 3182 001a 0446     		mov	r4, r0
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3183              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU886
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3184              		.loc 1 2619 2 view .LVU887
 3185 001c FFF7FEFF 		bl	vTaskSuspendAll
 3186              	.LVL215:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 167


 3187              		.loc 1 2620 2 view .LVU888
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3188              		.loc 1 2620 15 is_stmt 0 view .LVU889
 3189 0020 044A     		ldr	r2, .L243+4
 3190 0022 1368     		ldr	r3, [r2]
 3191 0024 2344     		add	r3, r3, r4
 3192 0026 1360     		str	r3, [r2]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3193              		.loc 1 2621 2 is_stmt 1 view .LVU890
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3194              		.loc 1 2621 19 is_stmt 0 view .LVU891
 3195 0028 FFF7FEFF 		bl	xTaskResumeAll
 3196              	.LVL216:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3197              		.loc 1 2623 2 is_stmt 1 view .LVU892
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3198              		.loc 1 2624 1 is_stmt 0 view .LVU893
 3199 002c 10BD     		pop	{r4, pc}
 3200              	.LVL217:
 3201              	.L244:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3202              		.loc 1 2624 1 view .LVU894
 3203 002e 00BF     		.align	2
 3204              	.L243:
 3205 0030 00000000 		.word	uxSchedulerSuspended
 3206 0034 00000000 		.word	xPendedTicks
 3207              		.cfi_endproc
 3208              	.LFE26:
 3210              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3211              		.align	1
 3212              		.global	vTaskSwitchContext
 3213              		.syntax unified
 3214              		.thumb
 3215              		.thumb_func
 3217              	vTaskSwitchContext:
 3218              	.LFB28:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3219              		.loc 1 2990 1 is_stmt 1 view -0
 3220              		.cfi_startproc
 3221              		@ args = 0, pretend = 0, frame = 0
 3222              		@ frame_needed = 0, uses_anonymous_args = 0
 3223              		@ link register save eliminated.
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3224              		.loc 1 2991 2 view .LVU896
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3225              		.loc 1 2991 27 is_stmt 0 view .LVU897
 3226 0000 204B     		ldr	r3, .L252
 3227 0002 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3228              		.loc 1 2991 4 view .LVU898
 3229 0004 1BB1     		cbz	r3, .L246
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3230              		.loc 1 2995 3 is_stmt 1 view .LVU899
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3231              		.loc 1 2995 17 is_stmt 0 view .LVU900
 3232 0006 204B     		ldr	r3, .L252+4
 3233 0008 0122     		movs	r2, #1
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 168


 3234 000a 1A60     		str	r2, [r3]
 3235 000c 7047     		bx	lr
 3236              	.L246:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3237              		.loc 1 2999 3 is_stmt 1 view .LVU901
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3238              		.loc 1 2999 17 is_stmt 0 view .LVU902
 3239 000e 1E4B     		ldr	r3, .L252+4
 3240 0010 0022     		movs	r2, #0
 3241 0012 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3242              		.loc 1 3000 27 is_stmt 1 view .LVU903
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3243              		.loc 1 3030 33 view .LVU904
 3244              	.LBB164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3245              		.loc 1 3041 3 view .LVU905
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3246              		.loc 1 3041 3 view .LVU906
 3247 0014 1D4B     		ldr	r3, .L252+8
 3248 0016 1B68     		ldr	r3, [r3]
 3249              	.LVL218:
 3250              	.LBB165:
 3251              	.LBI165:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3252              		.loc 2 130 59 view .LVU907
 3253              	.LBB166:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3254              		.loc 2 132 2 view .LVU908
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3255              		.loc 2 134 3 view .LVU909
 3256              		.syntax unified
 3257              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3258 0018 B3FA83F3 		clz r3, r3
 3259              	@ 0 "" 2
 3260              	.LVL219:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3261              		.loc 2 134 3 is_stmt 0 view .LVU910
 3262              		.thumb
 3263              		.syntax unified
 3264 001c DBB2     		uxtb	r3, r3
 3265              	.LVL220:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3266              		.loc 2 135 3 is_stmt 1 view .LVU911
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3267              		.loc 2 135 3 is_stmt 0 view .LVU912
 3268              	.LBE166:
 3269              	.LBE165:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3270              		.loc 1 3041 3 discriminator 1 view .LVU913
 3271 001e C3F11F03 		rsb	r3, r3, #31
 3272              	.LVL221:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3273              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU914
 3274 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3275 0026 8A00     		lsls	r2, r1, #2
 3276 0028 1949     		ldr	r1, .L252+12
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 169


 3277 002a 8A58     		ldr	r2, [r1, r2]
 3278 002c 42B9     		cbnz	r2, .L248
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3279              		.loc 1 3041 3 discriminator 1 view .LVU915
 3280              	.LBB167:
 3281              	.LBI167:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3282              		.loc 2 191 30 view .LVU916
 3283              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3284              		.loc 2 193 1 view .LVU917
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3285              		.loc 2 195 2 view .LVU918
 3286              		.syntax unified
 3287              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3288 002e 4FF05003 			mov r3, #80												
 3289 0032 83F31188 		msr basepri, r3											
 3290 0036 BFF36F8F 		isb														
 3291 003a BFF34F8F 		dsb														
 3292              	
 3293              	@ 0 "" 2
 3294              	.LVL222:
 3295              		.thumb
 3296              		.syntax unified
 3297              	.L249:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3298              		.loc 2 195 2 is_stmt 0 view .LVU919
 3299              	.LBE168:
 3300              	.LBE167:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3301              		.loc 1 3041 3 is_stmt 1 discriminator 3 view .LVU920
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3302              		.loc 1 3041 3 discriminator 3 view .LVU921
 3303 003e FEE7     		b	.L249
 3304              	.LVL223:
 3305              	.L248:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3306              		.loc 1 3041 3 discriminator 2 view .LVU922
 3307              	.LBB169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3308              		.loc 1 3041 3 discriminator 2 view .LVU923
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3309              		.loc 1 3041 3 view .LVU924
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3310              		.loc 1 3041 3 is_stmt 0 discriminator 2 view .LVU925
 3311 0040 1348     		ldr	r0, .L252+12
 3312 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3313 0046 8A00     		lsls	r2, r1, #2
 3314 0048 0244     		add	r2, r2, r0
 3315 004a 5168     		ldr	r1, [r2, #4]
 3316 004c 4968     		ldr	r1, [r1, #4]
 3317 004e 5160     		str	r1, [r2, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3318              		.loc 1 3041 3 is_stmt 1 view .LVU926
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3319              		.loc 1 3041 3 is_stmt 0 discriminator 2 view .LVU927
 3320 0050 03EB830C 		add	ip, r3, r3, lsl #2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 170


 3321 0054 4FEA8C02 		lsl	r2, ip, #2
 3322 0058 0832     		adds	r2, r2, #8
 3323 005a 0244     		add	r2, r2, r0
 3324 005c 9142     		cmp	r1, r2
 3325 005e 09D0     		beq	.L251
 3326              	.L250:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3327              		.loc 1 3041 3 is_stmt 1 discriminator 6 view .LVU928
 3328 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3329              	.LVL224:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3330              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU929
 3331 0064 9A00     		lsls	r2, r3, #2
 3332 0066 0A4B     		ldr	r3, .L252+12
 3333 0068 1344     		add	r3, r3, r2
 3334 006a 5B68     		ldr	r3, [r3, #4]
 3335 006c DA68     		ldr	r2, [r3, #12]
 3336 006e 094B     		ldr	r3, .L252+16
 3337 0070 1A60     		str	r2, [r3]
 3338              	.LBE169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3339              		.loc 1 3041 3 is_stmt 1 discriminator 7 view .LVU930
 3340              	.LBE164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3341              		.loc 1 3041 37 discriminator 7 view .LVU931
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3342              		.loc 1 3042 26 view .LVU932
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3343              		.loc 1 3061 1 is_stmt 0 view .LVU933
 3344 0072 7047     		bx	lr
 3345              	.LVL225:
 3346              	.L251:
 3347              	.LBB171:
 3348              	.LBB170:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3349              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU934
 3350 0074 4868     		ldr	r0, [r1, #4]
 3351 0076 6246     		mov	r2, ip
 3352 0078 9100     		lsls	r1, r2, #2
 3353 007a 054A     		ldr	r2, .L252+12
 3354 007c 0A44     		add	r2, r2, r1
 3355 007e 5060     		str	r0, [r2, #4]
 3356 0080 EEE7     		b	.L250
 3357              	.L253:
 3358 0082 00BF     		.align	2
 3359              	.L252:
 3360 0084 00000000 		.word	uxSchedulerSuspended
 3361 0088 00000000 		.word	xYieldPending
 3362 008c 00000000 		.word	uxTopReadyPriority
 3363 0090 00000000 		.word	pxReadyTasksLists
 3364 0094 00000000 		.word	pxCurrentTCB
 3365              	.LBE170:
 3366              	.LBE171:
 3367              		.cfi_endproc
 3368              	.LFE28:
 3370              		.section	.text.vTaskSuspend,"ax",%progbits
 3371              		.align	1
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 171


 3372              		.global	vTaskSuspend
 3373              		.syntax unified
 3374              		.thumb
 3375              		.thumb_func
 3377              	vTaskSuspend:
 3378              	.LVL226:
 3379              	.LFB14:
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3380              		.loc 1 1705 2 view -0
 3381              		.cfi_startproc
 3382              		@ args = 0, pretend = 0, frame = 0
 3383              		@ frame_needed = 0, uses_anonymous_args = 0
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3384              		.loc 1 1705 2 is_stmt 0 view .LVU936
 3385 0000 38B5     		push	{r3, r4, r5, lr}
 3386              		.cfi_def_cfa_offset 16
 3387              		.cfi_offset 3, -16
 3388              		.cfi_offset 4, -12
 3389              		.cfi_offset 5, -8
 3390              		.cfi_offset 14, -4
 3391 0002 0446     		mov	r4, r0
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3392              		.loc 1 1706 2 is_stmt 1 view .LVU937
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3393              		.loc 1 1708 3 view .LVU938
 3394 0004 FFF7FEFF 		bl	vPortEnterCritical
 3395              	.LVL227:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3396              		.loc 1 1712 4 view .LVU939
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3397              		.loc 1 1712 12 is_stmt 0 view .LVU940
 3398 0008 5CB3     		cbz	r4, .L266
 3399              	.LVL228:
 3400              	.L255:
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3401              		.loc 1 1714 30 is_stmt 1 view .LVU941
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3402              		.loc 1 1718 4 view .LVU942
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3403              		.loc 1 1718 8 is_stmt 0 view .LVU943
 3404 000a 251D     		adds	r5, r4, #4
 3405 000c 2846     		mov	r0, r5
 3406 000e FFF7FEFF 		bl	uxListRemove
 3407              	.LVL229:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3408              		.loc 1 1718 6 discriminator 1 view .LVU944
 3409 0012 70B9     		cbnz	r0, .L256
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3410              		.loc 1 1720 5 is_stmt 1 view .LVU945
 3411 0014 E26A     		ldr	r2, [r4, #44]
 3412 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3413 001a 9B00     		lsls	r3, r3, #2
 3414 001c 2B49     		ldr	r1, .L270
 3415 001e CB58     		ldr	r3, [r1, r3]
 3416 0020 3BB9     		cbnz	r3, .L256
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3417              		.loc 1 1720 5 discriminator 1 view .LVU946
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 172


 3418 0022 0123     		movs	r3, #1
 3419 0024 03FA02F2 		lsl	r2, r3, r2
 3420 0028 2949     		ldr	r1, .L270+4
 3421 002a 0B68     		ldr	r3, [r1]
 3422 002c 23EA0203 		bic	r3, r3, r2
 3423 0030 0B60     		str	r3, [r1]
 3424              	.L256:
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3425              		.loc 1 1724 29 view .LVU947
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3426              		.loc 1 1728 4 view .LVU948
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3427              		.loc 1 1728 8 is_stmt 0 view .LVU949
 3428 0032 A36A     		ldr	r3, [r4, #40]
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3429              		.loc 1 1728 6 view .LVU950
 3430 0034 1BB1     		cbz	r3, .L257
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3431              		.loc 1 1730 5 is_stmt 1 view .LVU951
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3432              		.loc 1 1730 14 is_stmt 0 view .LVU952
 3433 0036 04F11800 		add	r0, r4, #24
 3434 003a FFF7FEFF 		bl	uxListRemove
 3435              	.LVL230:
 3436              	.L257:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3437              		.loc 1 1734 29 is_stmt 1 view .LVU953
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3438              		.loc 1 1737 4 view .LVU954
 3439 003e 2946     		mov	r1, r5
 3440 0040 2448     		ldr	r0, .L270+8
 3441 0042 FFF7FEFF 		bl	vListInsertEnd
 3442              	.LVL231:
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3443              		.loc 1 1741 5 view .LVU955
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3444              		.loc 1 1741 14 is_stmt 0 view .LVU956
 3445 0046 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3446              		.loc 1 1741 7 view .LVU957
 3447 004a 012B     		cmp	r3, #1
 3448 004c 0CD0     		beq	.L267
 3449              	.L258:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3450              		.loc 1 1750 3 is_stmt 1 view .LVU958
 3451 004e FFF7FEFF 		bl	vPortExitCritical
 3452              	.LVL232:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3453              		.loc 1 1752 3 view .LVU959
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3454              		.loc 1 1752 25 is_stmt 0 view .LVU960
 3455 0052 214B     		ldr	r3, .L270+12
 3456 0054 1B68     		ldr	r3, [r3]
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3457              		.loc 1 1752 5 view .LVU961
 3458 0056 5BB9     		cbnz	r3, .L268
 3459              	.L259:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 173


1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3460              		.loc 1 1764 28 is_stmt 1 view .LVU962
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3461              		.loc 1 1767 3 view .LVU963
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3462              		.loc 1 1767 13 is_stmt 0 view .LVU964
 3463 0058 204B     		ldr	r3, .L270+16
 3464 005a 1B68     		ldr	r3, [r3]
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3465              		.loc 1 1767 5 view .LVU965
 3466 005c A342     		cmp	r3, r4
 3467 005e 0ED0     		beq	.L269
 3468              	.L254:
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3469              		.loc 1 1798 2 view .LVU966
 3470 0060 38BD     		pop	{r3, r4, r5, pc}
 3471              	.LVL233:
 3472              	.L266:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3473              		.loc 1 1712 12 discriminator 1 view .LVU967
 3474 0062 1E4B     		ldr	r3, .L270+16
 3475 0064 1C68     		ldr	r4, [r3]
 3476              	.LVL234:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3477              		.loc 1 1712 12 discriminator 1 view .LVU968
 3478 0066 D0E7     		b	.L255
 3479              	.LVL235:
 3480              	.L267:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3481              		.loc 1 1745 6 is_stmt 1 view .LVU969
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3482              		.loc 1 1745 27 is_stmt 0 view .LVU970
 3483 0068 0023     		movs	r3, #0
 3484 006a 84F85030 		strb	r3, [r4, #80]
 3485 006e EEE7     		b	.L258
 3486              	.L268:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3487              		.loc 1 1756 4 is_stmt 1 view .LVU971
 3488 0070 FFF7FEFF 		bl	vPortEnterCritical
 3489              	.LVL236:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3490              		.loc 1 1758 5 view .LVU972
 3491 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3492              	.LVL237:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3493              		.loc 1 1760 4 view .LVU973
 3494 0078 FFF7FEFF 		bl	vPortExitCritical
 3495              	.LVL238:
 3496 007c ECE7     		b	.L259
 3497              	.L269:
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3498              		.loc 1 1769 4 view .LVU974
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3499              		.loc 1 1769 26 is_stmt 0 view .LVU975
 3500 007e 164B     		ldr	r3, .L270+12
 3501 0080 1B68     		ldr	r3, [r3]
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 174


 3502              		.loc 1 1769 6 view .LVU976
 3503 0082 B3B1     		cbz	r3, .L261
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3504              		.loc 1 1772 5 is_stmt 1 view .LVU977
 3505 0084 164B     		ldr	r3, .L270+20
 3506 0086 1B68     		ldr	r3, [r3]
 3507 0088 43B1     		cbz	r3, .L262
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3508              		.loc 1 1772 5 discriminator 1 view .LVU978
 3509              	.LBB172:
 3510              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3511              		.loc 2 191 30 view .LVU979
 3512              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3513              		.loc 2 193 1 view .LVU980
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3514              		.loc 2 195 2 view .LVU981
 3515              		.syntax unified
 3516              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3517 008a 4FF05003 			mov r3, #80												
 3518 008e 83F31188 		msr basepri, r3											
 3519 0092 BFF36F8F 		isb														
 3520 0096 BFF34F8F 		dsb														
 3521              	
 3522              	@ 0 "" 2
 3523              		.thumb
 3524              		.syntax unified
 3525              	.L263:
 3526              	.LBE173:
 3527              	.LBE172:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3528              		.loc 1 1772 5 discriminator 3 view .LVU982
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3529              		.loc 1 1772 5 discriminator 3 view .LVU983
 3530 009a FEE7     		b	.L263
 3531              	.L262:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3532              		.loc 1 1772 46 discriminator 2 view .LVU984
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3533              		.loc 1 1773 5 view .LVU985
 3534 009c 4FF0E023 		mov	r3, #-536813568
 3535 00a0 4FF08052 		mov	r2, #268435456
 3536 00a4 C3F8042D 		str	r2, [r3, #3332]
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3537              		.loc 1 1773 5 view .LVU986
 3538              		.syntax unified
 3539              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3540 00a8 BFF34F8F 		dsb
 3541              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3542              		.loc 1 1773 5 view .LVU987
 3543              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3544 00ac BFF36F8F 		isb
 3545              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3546              		.loc 1 1773 27 view .LVU988
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 175


 3547              		.thumb
 3548              		.syntax unified
 3549 00b0 D6E7     		b	.L254
 3550              	.L261:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3551              		.loc 1 1780 5 view .LVU989
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3552              		.loc 1 1780 9 is_stmt 0 view .LVU990
 3553 00b2 084B     		ldr	r3, .L270+8
 3554 00b4 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3555              		.loc 1 1780 56 view .LVU991
 3556 00b6 0B4B     		ldr	r3, .L270+24
 3557 00b8 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3558              		.loc 1 1780 7 view .LVU992
 3559 00ba 9A42     		cmp	r2, r3
 3560 00bc 03D1     		bne	.L264
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3561              		.loc 1 1786 6 is_stmt 1 view .LVU993
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3562              		.loc 1 1786 19 is_stmt 0 view .LVU994
 3563 00be 074B     		ldr	r3, .L270+16
 3564 00c0 0022     		movs	r2, #0
 3565 00c2 1A60     		str	r2, [r3]
 3566 00c4 CCE7     		b	.L254
 3567              	.L264:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3568              		.loc 1 1790 6 is_stmt 1 view .LVU995
 3569 00c6 FFF7FEFF 		bl	vTaskSwitchContext
 3570              	.LVL239:
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3571              		.loc 1 1796 28 view .LVU996
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3572              		.loc 1 1798 2 is_stmt 0 view .LVU997
 3573 00ca C9E7     		b	.L254
 3574              	.L271:
 3575              		.align	2
 3576              	.L270:
 3577 00cc 00000000 		.word	pxReadyTasksLists
 3578 00d0 00000000 		.word	uxTopReadyPriority
 3579 00d4 00000000 		.word	xSuspendedTaskList
 3580 00d8 00000000 		.word	xSchedulerRunning
 3581 00dc 00000000 		.word	pxCurrentTCB
 3582 00e0 00000000 		.word	uxSchedulerSuspended
 3583 00e4 00000000 		.word	uxCurrentNumberOfTasks
 3584              		.cfi_endproc
 3585              	.LFE14:
 3587              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3588              		.align	1
 3589              		.global	vTaskPlaceOnEventList
 3590              		.syntax unified
 3591              		.thumb
 3592              		.thumb_func
 3594              	vTaskPlaceOnEventList:
 3595              	.LVL240:
 3596              	.LFB29:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 176


3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3597              		.loc 1 3065 1 is_stmt 1 view -0
 3598              		.cfi_startproc
 3599              		@ args = 0, pretend = 0, frame = 0
 3600              		@ frame_needed = 0, uses_anonymous_args = 0
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3601              		.loc 1 3066 2 view .LVU999
 3602 0000 58B1     		cbz	r0, .L277
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3603              		.loc 1 3065 1 is_stmt 0 view .LVU1000
 3604 0002 10B5     		push	{r4, lr}
 3605              		.cfi_def_cfa_offset 8
 3606              		.cfi_offset 4, -8
 3607              		.cfi_offset 14, -4
 3608 0004 0C46     		mov	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3609              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU1001
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3610              		.loc 1 3075 2 view .LVU1002
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3611              		.loc 1 3075 43 is_stmt 0 view .LVU1003
 3612 0006 094A     		ldr	r2, .L278
 3613 0008 1168     		ldr	r1, [r2]
 3614              	.LVL241:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3615              		.loc 1 3075 2 view .LVU1004
 3616 000a 1831     		adds	r1, r1, #24
 3617 000c FFF7FEFF 		bl	vListInsert
 3618              	.LVL242:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3619              		.loc 1 3077 2 is_stmt 1 view .LVU1005
 3620 0010 0121     		movs	r1, #1
 3621 0012 2046     		mov	r0, r4
 3622 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3623              	.LVL243:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3624              		.loc 1 3078 1 is_stmt 0 view .LVU1006
 3625 0018 10BD     		pop	{r4, pc}
 3626              	.LVL244:
 3627              	.L277:
 3628              		.cfi_def_cfa_offset 0
 3629              		.cfi_restore 4
 3630              		.cfi_restore 14
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3631              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU1007
 3632              	.LBB174:
 3633              	.LBI174:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3634              		.loc 2 191 30 view .LVU1008
 3635              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3636              		.loc 2 193 1 view .LVU1009
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3637              		.loc 2 195 2 view .LVU1010
 3638              		.syntax unified
 3639              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3640 001a 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 177


 3641 001e 83F31188 		msr basepri, r3											
 3642 0022 BFF36F8F 		isb														
 3643 0026 BFF34F8F 		dsb														
 3644              	
 3645              	@ 0 "" 2
 3646              		.thumb
 3647              		.syntax unified
 3648              	.L274:
 3649              	.LBE175:
 3650              	.LBE174:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3651              		.loc 1 3066 2 discriminator 3 view .LVU1011
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3652              		.loc 1 3066 2 discriminator 3 view .LVU1012
 3653 002a FEE7     		b	.L274
 3654              	.L279:
 3655              		.align	2
 3656              	.L278:
 3657 002c 00000000 		.word	pxCurrentTCB
 3658              		.cfi_endproc
 3659              	.LFE29:
 3661              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3662              		.align	1
 3663              		.global	vTaskPlaceOnUnorderedEventList
 3664              		.syntax unified
 3665              		.thumb
 3666              		.thumb_func
 3668              	vTaskPlaceOnUnorderedEventList:
 3669              	.LVL245:
 3670              	.LFB30:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3671              		.loc 1 3082 1 view -0
 3672              		.cfi_startproc
 3673              		@ args = 0, pretend = 0, frame = 0
 3674              		@ frame_needed = 0, uses_anonymous_args = 0
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3675              		.loc 1 3083 2 view .LVU1014
 3676 0000 70B1     		cbz	r0, .L287
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3677              		.loc 1 3082 1 is_stmt 0 view .LVU1015
 3678 0002 10B5     		push	{r4, lr}
 3679              		.cfi_def_cfa_offset 8
 3680              		.cfi_offset 4, -8
 3681              		.cfi_offset 14, -4
 3682 0004 1446     		mov	r4, r2
 3683 0006 0246     		mov	r2, r0
 3684              	.LVL246:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3685              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU1016
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3686              		.loc 1 3087 2 view .LVU1017
 3687 0008 114B     		ldr	r3, .L288
 3688 000a 1B68     		ldr	r3, [r3]
 3689 000c 8BB9     		cbnz	r3, .L283
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3690              		.loc 1 3087 2 discriminator 1 view .LVU1018
 3691              	.LBB176:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 178


 3692              	.LBI176:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3693              		.loc 2 191 30 view .LVU1019
 3694              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3695              		.loc 2 193 1 view .LVU1020
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3696              		.loc 2 195 2 view .LVU1021
 3697              		.syntax unified
 3698              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3699 000e 4FF05003 			mov r3, #80												
 3700 0012 83F31188 		msr basepri, r3											
 3701 0016 BFF36F8F 		isb														
 3702 001a BFF34F8F 		dsb														
 3703              	
 3704              	@ 0 "" 2
 3705              		.thumb
 3706              		.syntax unified
 3707              	.L284:
 3708              	.LBE177:
 3709              	.LBE176:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3710              		.loc 1 3087 2 discriminator 3 view .LVU1022
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3711              		.loc 1 3087 2 discriminator 3 view .LVU1023
 3712 001e FEE7     		b	.L284
 3713              	.LVL247:
 3714              	.L287:
 3715              		.cfi_def_cfa_offset 0
 3716              		.cfi_restore 4
 3717              		.cfi_restore 14
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3718              		.loc 1 3083 2 discriminator 1 view .LVU1024
 3719              	.LBB178:
 3720              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3721              		.loc 2 191 30 view .LVU1025
 3722              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3723              		.loc 2 193 1 view .LVU1026
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3724              		.loc 2 195 2 view .LVU1027
 3725              		.syntax unified
 3726              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3727 0020 4FF05003 			mov r3, #80												
 3728 0024 83F31188 		msr basepri, r3											
 3729 0028 BFF36F8F 		isb														
 3730 002c BFF34F8F 		dsb														
 3731              	
 3732              	@ 0 "" 2
 3733              		.thumb
 3734              		.syntax unified
 3735              	.L282:
 3736              	.LBE179:
 3737              	.LBE178:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3738              		.loc 1 3083 2 discriminator 3 view .LVU1028
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 179


3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3739              		.loc 1 3083 2 discriminator 3 view .LVU1029
 3740 0030 FEE7     		b	.L282
 3741              	.LVL248:
 3742              	.L283:
 3743              		.cfi_def_cfa_offset 8
 3744              		.cfi_offset 4, -8
 3745              		.cfi_offset 14, -4
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3746              		.loc 1 3087 43 discriminator 2 view .LVU1030
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3747              		.loc 1 3092 2 view .LVU1031
 3748 0032 084B     		ldr	r3, .L288+4
 3749 0034 1868     		ldr	r0, [r3]
 3750              	.LVL249:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3751              		.loc 1 3092 2 is_stmt 0 view .LVU1032
 3752 0036 41F00041 		orr	r1, r1, #-2147483648
 3753              	.LVL250:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3754              		.loc 1 3092 2 view .LVU1033
 3755 003a 8161     		str	r1, [r0, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3756              		.loc 1 3099 2 is_stmt 1 view .LVU1034
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3757              		.loc 1 3099 46 is_stmt 0 view .LVU1035
 3758 003c 1968     		ldr	r1, [r3]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3759              		.loc 1 3099 2 view .LVU1036
 3760 003e 1831     		adds	r1, r1, #24
 3761 0040 1046     		mov	r0, r2
 3762 0042 FFF7FEFF 		bl	vListInsertEnd
 3763              	.LVL251:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3764              		.loc 1 3101 2 is_stmt 1 view .LVU1037
 3765 0046 0121     		movs	r1, #1
 3766 0048 2046     		mov	r0, r4
 3767 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3768              	.LVL252:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3769              		.loc 1 3102 1 is_stmt 0 view .LVU1038
 3770 004e 10BD     		pop	{r4, pc}
 3771              	.LVL253:
 3772              	.L289:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3773              		.loc 1 3102 1 view .LVU1039
 3774              		.align	2
 3775              	.L288:
 3776 0050 00000000 		.word	uxSchedulerSuspended
 3777 0054 00000000 		.word	pxCurrentTCB
 3778              		.cfi_endproc
 3779              	.LFE30:
 3781              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3782              		.align	1
 3783              		.global	xTaskRemoveFromEventList
 3784              		.syntax unified
 3785              		.thumb
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 180


 3786              		.thumb_func
 3788              	xTaskRemoveFromEventList:
 3789              	.LVL254:
 3790              	.LFB31:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3791              		.loc 1 3139 1 is_stmt 1 view -0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 0
 3794              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3795              		.loc 1 3139 1 is_stmt 0 view .LVU1041
 3796 0000 38B5     		push	{r3, r4, r5, lr}
 3797              		.cfi_def_cfa_offset 16
 3798              		.cfi_offset 3, -16
 3799              		.cfi_offset 4, -12
 3800              		.cfi_offset 5, -8
 3801              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3802              		.loc 1 3140 1 is_stmt 1 view .LVU1042
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3803              		.loc 1 3141 1 view .LVU1043
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3804              		.loc 1 3156 2 view .LVU1044
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3805              		.loc 1 3156 19 is_stmt 0 view .LVU1045
 3806 0002 C368     		ldr	r3, [r0, #12]
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3807              		.loc 1 3156 17 view .LVU1046
 3808 0004 DC68     		ldr	r4, [r3, #12]
 3809              	.LVL255:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3810              		.loc 1 3157 2 is_stmt 1 view .LVU1047
 3811 0006 24B3     		cbz	r4, .L298
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3812              		.loc 1 3157 32 discriminator 2 view .LVU1048
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3813              		.loc 1 3158 2 view .LVU1049
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3814              		.loc 1 3158 11 is_stmt 0 view .LVU1050
 3815 0008 04F11805 		add	r5, r4, #24
 3816 000c 2846     		mov	r0, r5
 3817              	.LVL256:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3818              		.loc 1 3158 11 view .LVU1051
 3819 000e FFF7FEFF 		bl	uxListRemove
 3820              	.LVL257:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3821              		.loc 1 3160 2 is_stmt 1 view .LVU1052
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3822              		.loc 1 3160 27 is_stmt 0 view .LVU1053
 3823 0012 184B     		ldr	r3, .L299
 3824 0014 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3825              		.loc 1 3160 4 view .LVU1054
 3826 0016 2BBB     		cbnz	r3, .L293
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3827              		.loc 1 3162 3 is_stmt 1 view .LVU1055
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 181


3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3828              		.loc 1 3162 12 is_stmt 0 view .LVU1056
 3829 0018 251D     		adds	r5, r4, #4
 3830 001a 2846     		mov	r0, r5
 3831 001c FFF7FEFF 		bl	uxListRemove
 3832              	.LVL258:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3833              		.loc 1 3163 3 is_stmt 1 view .LVU1057
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3834              		.loc 1 3163 3 view .LVU1058
 3835 0020 E06A     		ldr	r0, [r4, #44]
 3836 0022 0123     		movs	r3, #1
 3837 0024 8340     		lsls	r3, r3, r0
 3838 0026 144A     		ldr	r2, .L299+4
 3839 0028 1168     		ldr	r1, [r2]
 3840 002a 0B43     		orrs	r3, r3, r1
 3841 002c 1360     		str	r3, [r2]
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3842              		.loc 1 3163 3 view .LVU1059
 3843 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3844 0032 2946     		mov	r1, r5
 3845 0034 114B     		ldr	r3, .L299+8
 3846 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3847 003a FFF7FEFF 		bl	vListInsertEnd
 3848              	.LVL259:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3849              		.loc 1 3163 42 discriminator 1 view .LVU1060
 3850              	.L294:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3851              		.loc 1 3186 2 view .LVU1061
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3852              		.loc 1 3186 20 is_stmt 0 view .LVU1062
 3853 003e E26A     		ldr	r2, [r4, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3854              		.loc 1 3186 47 view .LVU1063
 3855 0040 0F4B     		ldr	r3, .L299+12
 3856 0042 1B68     		ldr	r3, [r3]
 3857 0044 DB6A     		ldr	r3, [r3, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3858              		.loc 1 3186 4 view .LVU1064
 3859 0046 9A42     		cmp	r2, r3
 3860 0048 11D9     		bls	.L296
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3861              		.loc 1 3191 3 is_stmt 1 view .LVU1065
 3862              	.LVL260:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3863              		.loc 1 3195 3 view .LVU1066
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3864              		.loc 1 3195 17 is_stmt 0 view .LVU1067
 3865 004a 0120     		movs	r0, #1
 3866 004c 0D4B     		ldr	r3, .L299+16
 3867 004e 1860     		str	r0, [r3]
 3868              	.LVL261:
 3869              	.L290:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3870              		.loc 1 3203 1 view .LVU1068
 3871 0050 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 182


 3872              	.LVL262:
 3873              	.L298:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3874              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1069
 3875              	.LBB180:
 3876              	.LBI180:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3877              		.loc 2 191 30 view .LVU1070
 3878              	.LBB181:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3879              		.loc 2 193 1 view .LVU1071
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3880              		.loc 2 195 2 view .LVU1072
 3881              		.syntax unified
 3882              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3883 0052 4FF05003 			mov r3, #80												
 3884 0056 83F31188 		msr basepri, r3											
 3885 005a BFF36F8F 		isb														
 3886 005e BFF34F8F 		dsb														
 3887              	
 3888              	@ 0 "" 2
 3889              		.thumb
 3890              		.syntax unified
 3891              	.L292:
 3892              	.LBE181:
 3893              	.LBE180:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3894              		.loc 1 3157 2 discriminator 3 view .LVU1073
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3895              		.loc 1 3157 2 discriminator 3 view .LVU1074
 3896 0062 FEE7     		b	.L292
 3897              	.LVL263:
 3898              	.L293:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3899              		.loc 1 3183 3 view .LVU1075
 3900 0064 2946     		mov	r1, r5
 3901 0066 0848     		ldr	r0, .L299+20
 3902 0068 FFF7FEFF 		bl	vListInsertEnd
 3903              	.LVL264:
 3904 006c E7E7     		b	.L294
 3905              	.L296:
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3906              		.loc 1 3199 11 is_stmt 0 view .LVU1076
 3907 006e 0020     		movs	r0, #0
 3908              	.LVL265:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3909              		.loc 1 3202 2 is_stmt 1 view .LVU1077
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3910              		.loc 1 3202 9 is_stmt 0 view .LVU1078
 3911 0070 EEE7     		b	.L290
 3912              	.L300:
 3913 0072 00BF     		.align	2
 3914              	.L299:
 3915 0074 00000000 		.word	uxSchedulerSuspended
 3916 0078 00000000 		.word	uxTopReadyPriority
 3917 007c 00000000 		.word	pxReadyTasksLists
 3918 0080 00000000 		.word	pxCurrentTCB
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 183


 3919 0084 00000000 		.word	xYieldPending
 3920 0088 00000000 		.word	xPendingReadyList
 3921              		.cfi_endproc
 3922              	.LFE31:
 3924              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3925              		.align	1
 3926              		.global	vTaskRemoveFromUnorderedEventList
 3927              		.syntax unified
 3928              		.thumb
 3929              		.thumb_func
 3931              	vTaskRemoveFromUnorderedEventList:
 3932              	.LVL266:
 3933              	.LFB32:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3934              		.loc 1 3207 1 is_stmt 1 view -0
 3935              		.cfi_startproc
 3936              		@ args = 0, pretend = 0, frame = 0
 3937              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3938              		.loc 1 3207 1 is_stmt 0 view .LVU1080
 3939 0000 38B5     		push	{r3, r4, r5, lr}
 3940              		.cfi_def_cfa_offset 16
 3941              		.cfi_offset 3, -16
 3942              		.cfi_offset 4, -12
 3943              		.cfi_offset 5, -8
 3944              		.cfi_offset 14, -4
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3945              		.loc 1 3208 1 is_stmt 1 view .LVU1081
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3946              		.loc 1 3212 2 view .LVU1082
 3947 0002 1C4B     		ldr	r3, .L309
 3948 0004 1B68     		ldr	r3, [r3]
 3949 0006 43B9     		cbnz	r3, .L302
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3950              		.loc 1 3212 2 discriminator 1 view .LVU1083
 3951              	.LBB182:
 3952              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3953              		.loc 2 191 30 view .LVU1084
 3954              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3955              		.loc 2 193 1 view .LVU1085
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3956              		.loc 2 195 2 view .LVU1086
 3957              		.syntax unified
 3958              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3959 0008 4FF05003 			mov r3, #80												
 3960 000c 83F31188 		msr basepri, r3											
 3961 0010 BFF36F8F 		isb														
 3962 0014 BFF34F8F 		dsb														
 3963              	
 3964              	@ 0 "" 2
 3965              		.thumb
 3966              		.syntax unified
 3967              	.L303:
 3968              	.LBE183:
 3969              	.LBE182:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 184


3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3970              		.loc 1 3212 2 discriminator 3 view .LVU1087
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3971              		.loc 1 3212 2 discriminator 3 view .LVU1088
 3972 0018 FEE7     		b	.L303
 3973              	.L302:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3974              		.loc 1 3212 49 discriminator 2 view .LVU1089
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3975              		.loc 1 3215 2 view .LVU1090
 3976 001a 41F00041 		orr	r1, r1, #-2147483648
 3977              	.LVL267:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3978              		.loc 1 3215 2 is_stmt 0 view .LVU1091
 3979 001e 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3980              		.loc 1 3219 2 is_stmt 1 view .LVU1092
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3981              		.loc 1 3219 17 is_stmt 0 view .LVU1093
 3982 0020 C468     		ldr	r4, [r0, #12]
 3983              	.LVL268:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3984              		.loc 1 3220 2 is_stmt 1 view .LVU1094
 3985 0022 F4B1     		cbz	r4, .L308
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3986              		.loc 1 3220 32 discriminator 2 view .LVU1095
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3987              		.loc 1 3221 2 view .LVU1096
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3988              		.loc 1 3221 11 is_stmt 0 view .LVU1097
 3989 0024 FFF7FEFF 		bl	uxListRemove
 3990              	.LVL269:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3991              		.loc 1 3240 2 is_stmt 1 view .LVU1098
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3992              		.loc 1 3240 11 is_stmt 0 view .LVU1099
 3993 0028 251D     		adds	r5, r4, #4
 3994 002a 2846     		mov	r0, r5
 3995 002c FFF7FEFF 		bl	uxListRemove
 3996              	.LVL270:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3997              		.loc 1 3241 2 is_stmt 1 view .LVU1100
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3998              		.loc 1 3241 2 view .LVU1101
 3999 0030 E06A     		ldr	r0, [r4, #44]
 4000 0032 0123     		movs	r3, #1
 4001 0034 8340     		lsls	r3, r3, r0
 4002 0036 104A     		ldr	r2, .L309+4
 4003 0038 1168     		ldr	r1, [r2]
 4004 003a 0B43     		orrs	r3, r3, r1
 4005 003c 1360     		str	r3, [r2]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4006              		.loc 1 3241 2 view .LVU1102
 4007 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4008 0042 2946     		mov	r1, r5
 4009 0044 0D4B     		ldr	r3, .L309+8
 4010 0046 03EB8000 		add	r0, r3, r0, lsl #2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 185


 4011 004a FFF7FEFF 		bl	vListInsertEnd
 4012              	.LVL271:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4013              		.loc 1 3241 41 discriminator 1 view .LVU1103
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4014              		.loc 1 3243 2 view .LVU1104
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4015              		.loc 1 3243 20 is_stmt 0 view .LVU1105
 4016 004e E26A     		ldr	r2, [r4, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4017              		.loc 1 3243 47 view .LVU1106
 4018 0050 0B4B     		ldr	r3, .L309+12
 4019 0052 1B68     		ldr	r3, [r3]
 4020 0054 DB6A     		ldr	r3, [r3, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4021              		.loc 1 3243 4 view .LVU1107
 4022 0056 9A42     		cmp	r2, r3
 4023 0058 02D9     		bls	.L301
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4024              		.loc 1 3249 3 is_stmt 1 view .LVU1108
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4025              		.loc 1 3249 17 is_stmt 0 view .LVU1109
 4026 005a 0A4B     		ldr	r3, .L309+16
 4027 005c 0122     		movs	r2, #1
 4028 005e 1A60     		str	r2, [r3]
 4029              	.L301:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4030              		.loc 1 3251 1 view .LVU1110
 4031 0060 38BD     		pop	{r3, r4, r5, pc}
 4032              	.LVL272:
 4033              	.L308:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4034              		.loc 1 3220 2 is_stmt 1 discriminator 1 view .LVU1111
 4035              	.LBB184:
 4036              	.LBI184:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4037              		.loc 2 191 30 view .LVU1112
 4038              	.LBB185:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4039              		.loc 2 193 1 view .LVU1113
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4040              		.loc 2 195 2 view .LVU1114
 4041              		.syntax unified
 4042              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4043 0062 4FF05003 			mov r3, #80												
 4044 0066 83F31188 		msr basepri, r3											
 4045 006a BFF36F8F 		isb														
 4046 006e BFF34F8F 		dsb														
 4047              	
 4048              	@ 0 "" 2
 4049              		.thumb
 4050              		.syntax unified
 4051              	.L305:
 4052              	.LBE185:
 4053              	.LBE184:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4054              		.loc 1 3220 2 discriminator 3 view .LVU1115
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 186


3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4055              		.loc 1 3220 2 discriminator 3 view .LVU1116
 4056 0072 FEE7     		b	.L305
 4057              	.L310:
 4058              		.align	2
 4059              	.L309:
 4060 0074 00000000 		.word	uxSchedulerSuspended
 4061 0078 00000000 		.word	uxTopReadyPriority
 4062 007c 00000000 		.word	pxReadyTasksLists
 4063 0080 00000000 		.word	pxCurrentTCB
 4064 0084 00000000 		.word	xYieldPending
 4065              		.cfi_endproc
 4066              	.LFE32:
 4068              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4069              		.align	1
 4070              		.global	vTaskSetTimeOutState
 4071              		.syntax unified
 4072              		.thumb
 4073              		.thumb_func
 4075              	vTaskSetTimeOutState:
 4076              	.LVL273:
 4077              	.LFB33:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4078              		.loc 1 3255 1 view -0
 4079              		.cfi_startproc
 4080              		@ args = 0, pretend = 0, frame = 0
 4081              		@ frame_needed = 0, uses_anonymous_args = 0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4082              		.loc 1 3256 2 view .LVU1118
 4083 0000 60B1     		cbz	r0, .L316
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4084              		.loc 1 3255 1 is_stmt 0 view .LVU1119
 4085 0002 10B5     		push	{r4, lr}
 4086              		.cfi_def_cfa_offset 8
 4087              		.cfi_offset 4, -8
 4088              		.cfi_offset 14, -4
 4089 0004 0446     		mov	r4, r0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4090              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1120
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4091              		.loc 1 3257 2 view .LVU1121
 4092 0006 FFF7FEFF 		bl	vPortEnterCritical
 4093              	.LVL274:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4094              		.loc 1 3259 3 view .LVU1122
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4095              		.loc 1 3259 29 is_stmt 0 view .LVU1123
 4096 000a 094B     		ldr	r3, .L317
 4097 000c 1B68     		ldr	r3, [r3]
 4098 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4099              		.loc 1 3260 3 is_stmt 1 view .LVU1124
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4100              		.loc 1 3260 30 is_stmt 0 view .LVU1125
 4101 0010 084B     		ldr	r3, .L317+4
 4102 0012 1B68     		ldr	r3, [r3]
 4103 0014 6360     		str	r3, [r4, #4]
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 187


3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4104              		.loc 1 3262 2 is_stmt 1 view .LVU1126
 4105 0016 FFF7FEFF 		bl	vPortExitCritical
 4106              	.LVL275:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4107              		.loc 1 3263 1 is_stmt 0 view .LVU1127
 4108 001a 10BD     		pop	{r4, pc}
 4109              	.LVL276:
 4110              	.L316:
 4111              		.cfi_def_cfa_offset 0
 4112              		.cfi_restore 4
 4113              		.cfi_restore 14
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4114              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1128
 4115              	.LBB186:
 4116              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4117              		.loc 2 191 30 view .LVU1129
 4118              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4119              		.loc 2 193 1 view .LVU1130
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4120              		.loc 2 195 2 view .LVU1131
 4121              		.syntax unified
 4122              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4123 001c 4FF05003 			mov r3, #80												
 4124 0020 83F31188 		msr basepri, r3											
 4125 0024 BFF36F8F 		isb														
 4126 0028 BFF34F8F 		dsb														
 4127              	
 4128              	@ 0 "" 2
 4129              		.thumb
 4130              		.syntax unified
 4131              	.L313:
 4132              	.LBE187:
 4133              	.LBE186:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4134              		.loc 1 3256 2 discriminator 3 view .LVU1132
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4135              		.loc 1 3256 2 discriminator 3 view .LVU1133
 4136 002c FEE7     		b	.L313
 4137              	.L318:
 4138 002e 00BF     		.align	2
 4139              	.L317:
 4140 0030 00000000 		.word	xNumOfOverflows
 4141 0034 00000000 		.word	xTickCount
 4142              		.cfi_endproc
 4143              	.LFE33:
 4145              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4146              		.align	1
 4147              		.global	vTaskInternalSetTimeOutState
 4148              		.syntax unified
 4149              		.thumb
 4150              		.thumb_func
 4152              	vTaskInternalSetTimeOutState:
 4153              	.LVL277:
 4154              	.LFB34:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 188


3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4155              		.loc 1 3267 1 view -0
 4156              		.cfi_startproc
 4157              		@ args = 0, pretend = 0, frame = 0
 4158              		@ frame_needed = 0, uses_anonymous_args = 0
 4159              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4160              		.loc 1 3269 2 view .LVU1135
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4161              		.loc 1 3269 28 is_stmt 0 view .LVU1136
 4162 0000 034B     		ldr	r3, .L320
 4163 0002 1B68     		ldr	r3, [r3]
 4164 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4165              		.loc 1 3270 2 is_stmt 1 view .LVU1137
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4166              		.loc 1 3270 29 is_stmt 0 view .LVU1138
 4167 0006 034B     		ldr	r3, .L320+4
 4168 0008 1B68     		ldr	r3, [r3]
 4169 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4170              		.loc 1 3271 1 view .LVU1139
 4171 000c 7047     		bx	lr
 4172              	.L321:
 4173 000e 00BF     		.align	2
 4174              	.L320:
 4175 0010 00000000 		.word	xNumOfOverflows
 4176 0014 00000000 		.word	xTickCount
 4177              		.cfi_endproc
 4178              	.LFE34:
 4180              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4181              		.align	1
 4182              		.global	xTaskCheckForTimeOut
 4183              		.syntax unified
 4184              		.thumb
 4185              		.thumb_func
 4187              	xTaskCheckForTimeOut:
 4188              	.LVL278:
 4189              	.LFB35:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4190              		.loc 1 3275 1 is_stmt 1 view -0
 4191              		.cfi_startproc
 4192              		@ args = 0, pretend = 0, frame = 0
 4193              		@ frame_needed = 0, uses_anonymous_args = 0
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4194              		.loc 1 3276 1 view .LVU1141
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4195              		.loc 1 3278 2 view .LVU1142
 4196 0000 E0B1     		cbz	r0, .L334
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4197              		.loc 1 3275 1 is_stmt 0 view .LVU1143
 4198 0002 70B5     		push	{r4, r5, r6, lr}
 4199              		.cfi_def_cfa_offset 16
 4200              		.cfi_offset 4, -16
 4201              		.cfi_offset 5, -12
 4202              		.cfi_offset 6, -8
 4203              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 189


 4204 0004 0C46     		mov	r4, r1
 4205 0006 0546     		mov	r5, r0
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4206              		.loc 1 3278 27 is_stmt 1 discriminator 2 view .LVU1144
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4207              		.loc 1 3279 2 view .LVU1145
 4208 0008 09B3     		cbz	r1, .L335
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4209              		.loc 1 3279 31 discriminator 2 view .LVU1146
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4210              		.loc 1 3281 2 view .LVU1147
 4211 000a FFF7FEFF 		bl	vPortEnterCritical
 4212              	.LVL279:
 4213              	.LBB188:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4214              		.loc 1 3284 3 view .LVU1148
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4215              		.loc 1 3284 20 is_stmt 0 view .LVU1149
 4216 000e 1C4B     		ldr	r3, .L337
 4217 0010 1968     		ldr	r1, [r3]
 4218              	.LVL280:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4219              		.loc 1 3285 3 is_stmt 1 view .LVU1150
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4220              		.loc 1 3285 62 is_stmt 0 view .LVU1151
 4221 0012 6B68     		ldr	r3, [r5, #4]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4222              		.loc 1 3285 20 view .LVU1152
 4223 0014 C81A     		subs	r0, r1, r3
 4224              	.LVL281:
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4225              		.loc 1 3299 4 is_stmt 1 view .LVU1153
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4226              		.loc 1 3299 8 is_stmt 0 view .LVU1154
 4227 0016 2268     		ldr	r2, [r4]
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4228              		.loc 1 3299 6 view .LVU1155
 4229 0018 B2F1FF3F 		cmp	r2, #-1
 4230 001c 28D0     		beq	.L330
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4231              		.loc 1 3309 3 is_stmt 1 view .LVU1156
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4232              		.loc 1 3309 25 is_stmt 0 view .LVU1157
 4233 001e DFF864C0 		ldr	ip, .L337+4
 4234 0022 DCF800C0 		ldr	ip, [ip]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4235              		.loc 1 3309 5 view .LVU1158
 4236 0026 2E68     		ldr	r6, [r5]
 4237 0028 6645     		cmp	r6, ip
 4238 002a 01D0     		beq	.L328
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4239              		.loc 1 3309 56 discriminator 1 view .LVU1159
 4240 002c 8B42     		cmp	r3, r1
 4241 002e 24D9     		bls	.L331
 4242              	.L328:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4243              		.loc 1 3318 8 is_stmt 1 view .LVU1160
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 190


3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4244              		.loc 1 3318 10 is_stmt 0 view .LVU1161
 4245 0030 8242     		cmp	r2, r0
 4246 0032 15D8     		bhi	.L336
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4247              		.loc 1 3327 4 is_stmt 1 view .LVU1162
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4248              		.loc 1 3327 19 is_stmt 0 view .LVU1163
 4249 0034 0023     		movs	r3, #0
 4250 0036 2360     		str	r3, [r4]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4251              		.loc 1 3328 4 is_stmt 1 view .LVU1164
 4252              	.LVL282:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4253              		.loc 1 3328 12 is_stmt 0 view .LVU1165
 4254 0038 0124     		movs	r4, #1
 4255              	.LVL283:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4256              		.loc 1 3328 12 view .LVU1166
 4257 003a 1AE0     		b	.L327
 4258              	.LVL284:
 4259              	.L334:
 4260              		.cfi_def_cfa_offset 0
 4261              		.cfi_restore 4
 4262              		.cfi_restore 5
 4263              		.cfi_restore 6
 4264              		.cfi_restore 14
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4265              		.loc 1 3328 12 view .LVU1167
 4266              	.LBE188:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4267              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1168
 4268              	.LBB189:
 4269              	.LBI189:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4270              		.loc 2 191 30 view .LVU1169
 4271              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4272              		.loc 2 193 1 view .LVU1170
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4273              		.loc 2 195 2 view .LVU1171
 4274              		.syntax unified
 4275              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4276 003c 4FF05003 			mov r3, #80												
 4277 0040 83F31188 		msr basepri, r3											
 4278 0044 BFF36F8F 		isb														
 4279 0048 BFF34F8F 		dsb														
 4280              	
 4281              	@ 0 "" 2
 4282              		.thumb
 4283              		.syntax unified
 4284              	.L324:
 4285              	.LBE190:
 4286              	.LBE189:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4287              		.loc 1 3278 2 discriminator 3 view .LVU1172
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 191


 4288              		.loc 1 3278 2 discriminator 3 view .LVU1173
 4289 004c FEE7     		b	.L324
 4290              	.L335:
 4291              		.cfi_def_cfa_offset 16
 4292              		.cfi_offset 4, -16
 4293              		.cfi_offset 5, -12
 4294              		.cfi_offset 6, -8
 4295              		.cfi_offset 14, -4
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4296              		.loc 1 3279 2 discriminator 1 view .LVU1174
 4297              	.LBB191:
 4298              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4299              		.loc 2 191 30 view .LVU1175
 4300              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4301              		.loc 2 193 1 view .LVU1176
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4302              		.loc 2 195 2 view .LVU1177
 4303              		.syntax unified
 4304              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4305 004e 4FF05003 			mov r3, #80												
 4306 0052 83F31188 		msr basepri, r3											
 4307 0056 BFF36F8F 		isb														
 4308 005a BFF34F8F 		dsb														
 4309              	
 4310              	@ 0 "" 2
 4311              		.thumb
 4312              		.syntax unified
 4313              	.L326:
 4314              	.LBE192:
 4315              	.LBE191:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4316              		.loc 1 3279 2 discriminator 3 view .LVU1178
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4317              		.loc 1 3279 2 discriminator 3 view .LVU1179
 4318 005e FEE7     		b	.L326
 4319              	.LVL285:
 4320              	.L336:
 4321              	.LBB193:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4322              		.loc 1 3321 4 view .LVU1180
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4323              		.loc 1 3321 19 is_stmt 0 view .LVU1181
 4324 0060 5B1A     		subs	r3, r3, r1
 4325 0062 1344     		add	r3, r3, r2
 4326 0064 2360     		str	r3, [r4]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4327              		.loc 1 3322 4 is_stmt 1 view .LVU1182
 4328 0066 2846     		mov	r0, r5
 4329              	.LVL286:
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4330              		.loc 1 3322 4 is_stmt 0 view .LVU1183
 4331 0068 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4332              	.LVL287:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4333              		.loc 1 3323 4 is_stmt 1 view .LVU1184
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 192


3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4334              		.loc 1 3323 12 is_stmt 0 view .LVU1185
 4335 006c 0024     		movs	r4, #0
 4336              	.LVL288:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4337              		.loc 1 3323 12 view .LVU1186
 4338 006e 00E0     		b	.L327
 4339              	.LVL289:
 4340              	.L330:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4341              		.loc 1 3304 13 view .LVU1187
 4342 0070 0024     		movs	r4, #0
 4343              	.LVL290:
 4344              	.L327:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4345              		.loc 1 3304 13 view .LVU1188
 4346              	.LBE193:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4347              		.loc 1 3331 2 is_stmt 1 view .LVU1189
 4348 0072 FFF7FEFF 		bl	vPortExitCritical
 4349              	.LVL291:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4350              		.loc 1 3333 2 view .LVU1190
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4351              		.loc 1 3334 1 is_stmt 0 view .LVU1191
 4352 0076 2046     		mov	r0, r4
 4353 0078 70BD     		pop	{r4, r5, r6, pc}
 4354              	.LVL292:
 4355              	.L331:
 4356              	.LBB194:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4357              		.loc 1 3316 12 view .LVU1192
 4358 007a 0124     		movs	r4, #1
 4359              	.LVL293:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4360              		.loc 1 3316 12 view .LVU1193
 4361 007c F9E7     		b	.L327
 4362              	.L338:
 4363 007e 00BF     		.align	2
 4364              	.L337:
 4365 0080 00000000 		.word	xTickCount
 4366 0084 00000000 		.word	xNumOfOverflows
 4367              	.LBE194:
 4368              		.cfi_endproc
 4369              	.LFE35:
 4371              		.section	.text.vTaskMissedYield,"ax",%progbits
 4372              		.align	1
 4373              		.global	vTaskMissedYield
 4374              		.syntax unified
 4375              		.thumb
 4376              		.thumb_func
 4378              	vTaskMissedYield:
 4379              	.LFB36:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4380              		.loc 1 3338 1 is_stmt 1 view -0
 4381              		.cfi_startproc
 4382              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 193


 4383              		@ frame_needed = 0, uses_anonymous_args = 0
 4384              		@ link register save eliminated.
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4385              		.loc 1 3339 2 view .LVU1195
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4386              		.loc 1 3339 16 is_stmt 0 view .LVU1196
 4387 0000 014B     		ldr	r3, .L340
 4388 0002 0122     		movs	r2, #1
 4389 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4390              		.loc 1 3340 1 view .LVU1197
 4391 0006 7047     		bx	lr
 4392              	.L341:
 4393              		.align	2
 4394              	.L340:
 4395 0008 00000000 		.word	xYieldPending
 4396              		.cfi_endproc
 4397              	.LFE36:
 4399              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4400              		.align	1
 4401              		.global	xTaskGetCurrentTaskHandle
 4402              		.syntax unified
 4403              		.thumb
 4404              		.thumb_func
 4406              	xTaskGetCurrentTaskHandle:
 4407              	.LFB42:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4408              		.loc 1 3970 2 is_stmt 1 view -0
 4409              		.cfi_startproc
 4410              		@ args = 0, pretend = 0, frame = 0
 4411              		@ frame_needed = 0, uses_anonymous_args = 0
 4412              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4413              		.loc 1 3971 2 view .LVU1199
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4414              		.loc 1 3976 3 view .LVU1200
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4415              		.loc 1 3976 11 is_stmt 0 view .LVU1201
 4416 0000 014B     		ldr	r3, .L343
 4417 0002 1868     		ldr	r0, [r3]
 4418              	.LVL294:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4419              		.loc 1 3978 3 is_stmt 1 view .LVU1202
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4420              		.loc 1 3979 2 is_stmt 0 view .LVU1203
 4421 0004 7047     		bx	lr
 4422              	.L344:
 4423 0006 00BF     		.align	2
 4424              	.L343:
 4425 0008 00000000 		.word	pxCurrentTCB
 4426              		.cfi_endproc
 4427              	.LFE42:
 4429              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4430              		.align	1
 4431              		.global	xTaskGetSchedulerState
 4432              		.syntax unified
 4433              		.thumb
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 194


 4434              		.thumb_func
 4436              	xTaskGetSchedulerState:
 4437              	.LFB43:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4438              		.loc 1 3987 2 is_stmt 1 view -0
 4439              		.cfi_startproc
 4440              		@ args = 0, pretend = 0, frame = 0
 4441              		@ frame_needed = 0, uses_anonymous_args = 0
 4442              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4443              		.loc 1 3988 2 view .LVU1205
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4444              		.loc 1 3990 3 view .LVU1206
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4445              		.loc 1 3990 25 is_stmt 0 view .LVU1207
 4446 0000 054B     		ldr	r3, .L350
 4447 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4448              		.loc 1 3990 5 view .LVU1208
 4449 0004 33B1     		cbz	r3, .L347
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4450              		.loc 1 3996 4 is_stmt 1 view .LVU1209
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4451              		.loc 1 3996 29 is_stmt 0 view .LVU1210
 4452 0006 054B     		ldr	r3, .L350+4
 4453 0008 1B68     		ldr	r3, [r3]
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4454              		.loc 1 3996 6 view .LVU1211
 4455 000a 0BB1     		cbz	r3, .L349
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4456              		.loc 1 4002 13 view .LVU1212
 4457 000c 0020     		movs	r0, #0
 4458              	.LVL295:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4459              		.loc 1 4006 3 is_stmt 1 view .LVU1213
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4460              		.loc 1 4007 2 is_stmt 0 view .LVU1214
 4461 000e 7047     		bx	lr
 4462              	.LVL296:
 4463              	.L349:
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4464              		.loc 1 3998 13 view .LVU1215
 4465 0010 0220     		movs	r0, #2
 4466 0012 7047     		bx	lr
 4467              	.L347:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4468              		.loc 1 3992 12 view .LVU1216
 4469 0014 0120     		movs	r0, #1
 4470 0016 7047     		bx	lr
 4471              	.L351:
 4472              		.align	2
 4473              	.L350:
 4474 0018 00000000 		.word	xSchedulerRunning
 4475 001c 00000000 		.word	uxSchedulerSuspended
 4476              		.cfi_endproc
 4477              	.LFE43:
 4479              		.section	.text.xTaskPriorityInherit,"ax",%progbits
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 195


 4480              		.align	1
 4481              		.global	xTaskPriorityInherit
 4482              		.syntax unified
 4483              		.thumb
 4484              		.thumb_func
 4486              	xTaskPriorityInherit:
 4487              	.LVL297:
 4488              	.LFB44:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4489              		.loc 1 4015 2 is_stmt 1 view -0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 0
 4492              		@ frame_needed = 0, uses_anonymous_args = 0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4493              		.loc 1 4016 2 view .LVU1218
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4494              		.loc 1 4017 2 view .LVU1219
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4495              		.loc 1 4022 3 view .LVU1220
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4496              		.loc 1 4022 5 is_stmt 0 view .LVU1221
 4497 0000 0028     		cmp	r0, #0
 4498 0002 48D0     		beq	.L358
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4499              		.loc 1 4015 2 view .LVU1222
 4500 0004 38B5     		push	{r3, r4, r5, lr}
 4501              		.cfi_def_cfa_offset 16
 4502              		.cfi_offset 3, -16
 4503              		.cfi_offset 4, -12
 4504              		.cfi_offset 5, -8
 4505              		.cfi_offset 14, -4
 4506 0006 0446     		mov	r4, r0
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4507              		.loc 1 4027 4 is_stmt 1 view .LVU1223
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4508              		.loc 1 4027 24 is_stmt 0 view .LVU1224
 4509 0008 C36A     		ldr	r3, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4510              		.loc 1 4027 51 view .LVU1225
 4511 000a 254A     		ldr	r2, .L365
 4512 000c 1268     		ldr	r2, [r2]
 4513 000e D26A     		ldr	r2, [r2, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4514              		.loc 1 4027 6 view .LVU1226
 4515 0010 9342     		cmp	r3, r2
 4516 0012 38D2     		bcs	.L354
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4517              		.loc 1 4032 5 is_stmt 1 view .LVU1227
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4518              		.loc 1 4032 11 is_stmt 0 view .LVU1228
 4519 0014 8269     		ldr	r2, [r0, #24]
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4520              		.loc 1 4032 7 view .LVU1229
 4521 0016 002A     		cmp	r2, #0
 4522 0018 05DB     		blt	.L355
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4523              		.loc 1 4034 6 is_stmt 1 view .LVU1230
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 196


 4524 001a 214A     		ldr	r2, .L365
 4525 001c 1268     		ldr	r2, [r2]
 4526 001e D26A     		ldr	r2, [r2, #44]
 4527 0020 C2F10702 		rsb	r2, r2, #7
 4528 0024 8261     		str	r2, [r0, #24]
 4529              	.L355:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4530              		.loc 1 4038 30 view .LVU1231
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4531              		.loc 1 4043 5 view .LVU1232
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4532              		.loc 1 4043 9 is_stmt 0 view .LVU1233
 4533 0026 6169     		ldr	r1, [r4, #20]
 4534 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4535 002c 1D4A     		ldr	r2, .L365+4
 4536 002e 02EB8303 		add	r3, r2, r3, lsl #2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4537              		.loc 1 4043 7 view .LVU1234
 4538 0032 9942     		cmp	r1, r3
 4539 0034 05D0     		beq	.L364
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4540              		.loc 1 4064 6 is_stmt 1 view .LVU1235
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4541              		.loc 1 4064 49 is_stmt 0 view .LVU1236
 4542 0036 1A4B     		ldr	r3, .L365
 4543 0038 1B68     		ldr	r3, [r3]
 4544 003a DB6A     		ldr	r3, [r3, #44]
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4545              		.loc 1 4064 35 view .LVU1237
 4546 003c E362     		str	r3, [r4, #44]
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4547              		.loc 1 4070 13 view .LVU1238
 4548 003e 0120     		movs	r0, #1
 4549              	.LVL298:
 4550              	.L352:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4551              		.loc 1 4097 2 view .LVU1239
 4552 0040 38BD     		pop	{r3, r4, r5, pc}
 4553              	.LVL299:
 4554              	.L364:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4555              		.loc 1 4045 6 is_stmt 1 view .LVU1240
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4556              		.loc 1 4045 10 is_stmt 0 view .LVU1241
 4557 0042 251D     		adds	r5, r4, #4
 4558 0044 2846     		mov	r0, r5
 4559              	.LVL300:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4560              		.loc 1 4045 10 view .LVU1242
 4561 0046 FFF7FEFF 		bl	uxListRemove
 4562              	.LVL301:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4563              		.loc 1 4045 8 discriminator 1 view .LVU1243
 4564 004a 38B9     		cbnz	r0, .L357
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4565              		.loc 1 4050 7 is_stmt 1 view .LVU1244
 4566 004c E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 197


 4567 004e 0122     		movs	r2, #1
 4568 0050 9A40     		lsls	r2, r2, r3
 4569 0052 1549     		ldr	r1, .L365+8
 4570 0054 0B68     		ldr	r3, [r1]
 4571 0056 23EA0203 		bic	r3, r3, r2
 4572 005a 0B60     		str	r3, [r1]
 4573              	.L357:
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4574              		.loc 1 4054 31 view .LVU1245
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4575              		.loc 1 4058 6 view .LVU1246
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4576              		.loc 1 4058 49 is_stmt 0 view .LVU1247
 4577 005c 104B     		ldr	r3, .L365
 4578 005e 1B68     		ldr	r3, [r3]
 4579 0060 D86A     		ldr	r0, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4580              		.loc 1 4058 35 view .LVU1248
 4581 0062 E062     		str	r0, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4582              		.loc 1 4059 6 is_stmt 1 view .LVU1249
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4583              		.loc 1 4059 6 view .LVU1250
 4584 0064 0124     		movs	r4, #1
 4585              	.LVL302:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4586              		.loc 1 4059 6 is_stmt 0 view .LVU1251
 4587 0066 04FA00F3 		lsl	r3, r4, r0
 4588 006a 0F4A     		ldr	r2, .L365+8
 4589 006c 1168     		ldr	r1, [r2]
 4590 006e 0B43     		orrs	r3, r3, r1
 4591 0070 1360     		str	r3, [r2]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4592              		.loc 1 4059 6 is_stmt 1 view .LVU1252
 4593 0072 00EB8000 		add	r0, r0, r0, lsl #2
 4594 0076 2946     		mov	r1, r5
 4595 0078 0A4B     		ldr	r3, .L365+4
 4596 007a 03EB8000 		add	r0, r3, r0, lsl #2
 4597 007e FFF7FEFF 		bl	vListInsertEnd
 4598              	.LVL303:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4599              		.loc 1 4059 47 discriminator 1 view .LVU1253
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4600              		.loc 1 4070 13 is_stmt 0 view .LVU1254
 4601 0082 2046     		mov	r0, r4
 4602 0084 DCE7     		b	.L352
 4603              	.LVL304:
 4604              	.L354:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4605              		.loc 1 4074 5 is_stmt 1 view .LVU1255
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4606              		.loc 1 4074 25 is_stmt 0 view .LVU1256
 4607 0086 426C     		ldr	r2, [r0, #68]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4608              		.loc 1 4074 56 view .LVU1257
 4609 0088 054B     		ldr	r3, .L365
 4610 008a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 198


 4611 008c DB6A     		ldr	r3, [r3, #44]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4612              		.loc 1 4074 7 view .LVU1258
 4613 008e 9A42     		cmp	r2, r3
 4614 0090 03D3     		bcc	.L359
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4615              		.loc 1 4017 13 view .LVU1259
 4616 0092 0020     		movs	r0, #0
 4617              	.LVL305:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4618              		.loc 1 4017 13 view .LVU1260
 4619 0094 D4E7     		b	.L352
 4620              	.LVL306:
 4621              	.L358:
 4622              		.cfi_def_cfa_offset 0
 4623              		.cfi_restore 3
 4624              		.cfi_restore 4
 4625              		.cfi_restore 5
 4626              		.cfi_restore 14
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4627              		.loc 1 4017 13 view .LVU1261
 4628 0096 0020     		movs	r0, #0
 4629              	.LVL307:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4630              		.loc 1 4097 2 view .LVU1262
 4631 0098 7047     		bx	lr
 4632              	.LVL308:
 4633              	.L359:
 4634              		.cfi_def_cfa_offset 16
 4635              		.cfi_offset 3, -16
 4636              		.cfi_offset 4, -12
 4637              		.cfi_offset 5, -8
 4638              		.cfi_offset 14, -4
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4639              		.loc 1 4083 14 view .LVU1263
 4640 009a 0120     		movs	r0, #1
 4641              	.LVL309:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4642              		.loc 1 4093 28 is_stmt 1 view .LVU1264
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4643              		.loc 1 4096 3 view .LVU1265
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4644              		.loc 1 4096 10 is_stmt 0 view .LVU1266
 4645 009c D0E7     		b	.L352
 4646              	.L366:
 4647 009e 00BF     		.align	2
 4648              	.L365:
 4649 00a0 00000000 		.word	pxCurrentTCB
 4650 00a4 00000000 		.word	pxReadyTasksLists
 4651 00a8 00000000 		.word	uxTopReadyPriority
 4652              		.cfi_endproc
 4653              	.LFE44:
 4655              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4656              		.align	1
 4657              		.global	xTaskPriorityDisinherit
 4658              		.syntax unified
 4659              		.thumb
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 199


 4660              		.thumb_func
 4662              	xTaskPriorityDisinherit:
 4663              	.LVL310:
 4664              	.LFB45:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4665              		.loc 1 4105 2 is_stmt 1 view -0
 4666              		.cfi_startproc
 4667              		@ args = 0, pretend = 0, frame = 0
 4668              		@ frame_needed = 0, uses_anonymous_args = 0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4669              		.loc 1 4106 2 view .LVU1268
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4670              		.loc 1 4107 2 view .LVU1269
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4671              		.loc 1 4109 3 view .LVU1270
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4672              		.loc 1 4109 5 is_stmt 0 view .LVU1271
 4673 0000 0028     		cmp	r0, #0
 4674 0002 4BD0     		beq	.L374
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4675              		.loc 1 4105 2 view .LVU1272
 4676 0004 38B5     		push	{r3, r4, r5, lr}
 4677              		.cfi_def_cfa_offset 16
 4678              		.cfi_offset 3, -16
 4679              		.cfi_offset 4, -12
 4680              		.cfi_offset 5, -8
 4681              		.cfi_offset 14, -4
 4682 0006 0446     		mov	r4, r0
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4683              		.loc 1 4115 4 is_stmt 1 view .LVU1273
 4684 0008 264B     		ldr	r3, .L382
 4685 000a 1B68     		ldr	r3, [r3]
 4686 000c 8342     		cmp	r3, r0
 4687 000e 08D0     		beq	.L369
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4688              		.loc 1 4115 4 discriminator 1 view .LVU1274
 4689              	.LBB195:
 4690              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4691              		.loc 2 191 30 view .LVU1275
 4692              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4693              		.loc 2 193 1 view .LVU1276
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4694              		.loc 2 195 2 view .LVU1277
 4695              		.syntax unified
 4696              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4697 0010 4FF05003 			mov r3, #80												
 4698 0014 83F31188 		msr basepri, r3											
 4699 0018 BFF36F8F 		isb														
 4700 001c BFF34F8F 		dsb														
 4701              	
 4702              	@ 0 "" 2
 4703              		.thumb
 4704              		.syntax unified
 4705              	.L370:
 4706              	.LBE196:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 200


 4707              	.LBE195:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4708              		.loc 1 4115 4 discriminator 3 view .LVU1278
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4709              		.loc 1 4115 4 discriminator 3 view .LVU1279
 4710 0020 FEE7     		b	.L370
 4711              	.L369:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4712              		.loc 1 4115 41 discriminator 2 view .LVU1280
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4713              		.loc 1 4116 4 view .LVU1281
 4714 0022 836C     		ldr	r3, [r0, #72]
 4715 0024 43B9     		cbnz	r3, .L371
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4716              		.loc 1 4116 4 discriminator 1 view .LVU1282
 4717              	.LBB197:
 4718              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4719              		.loc 2 191 30 view .LVU1283
 4720              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4721              		.loc 2 193 1 view .LVU1284
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4722              		.loc 2 195 2 view .LVU1285
 4723              		.syntax unified
 4724              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4725 0026 4FF05003 			mov r3, #80												
 4726 002a 83F31188 		msr basepri, r3											
 4727 002e BFF36F8F 		isb														
 4728 0032 BFF34F8F 		dsb														
 4729              	
 4730              	@ 0 "" 2
 4731              		.thumb
 4732              		.syntax unified
 4733              	.L372:
 4734              	.LBE198:
 4735              	.LBE197:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4736              		.loc 1 4116 4 discriminator 3 view .LVU1286
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4737              		.loc 1 4116 4 discriminator 3 view .LVU1287
 4738 0036 FEE7     		b	.L372
 4739              	.L371:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4740              		.loc 1 4116 40 discriminator 2 view .LVU1288
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4741              		.loc 1 4117 4 view .LVU1289
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4742              		.loc 1 4117 28 is_stmt 0 view .LVU1290
 4743 0038 013B     		subs	r3, r3, #1
 4744 003a 8364     		str	r3, [r0, #72]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4745              		.loc 1 4121 4 is_stmt 1 view .LVU1291
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4746              		.loc 1 4121 13 is_stmt 0 view .LVU1292
 4747 003c C16A     		ldr	r1, [r0, #44]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 201


 4748              		.loc 1 4121 34 view .LVU1293
 4749 003e 426C     		ldr	r2, [r0, #68]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4750              		.loc 1 4121 6 view .LVU1294
 4751 0040 9142     		cmp	r1, r2
 4752 0042 2DD0     		beq	.L375
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4753              		.loc 1 4124 5 is_stmt 1 view .LVU1295
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4754              		.loc 1 4124 7 is_stmt 0 view .LVU1296
 4755 0044 0BB1     		cbz	r3, .L381
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4756              		.loc 1 4107 13 view .LVU1297
 4757 0046 0020     		movs	r0, #0
 4758              	.LVL311:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4759              		.loc 1 4173 28 is_stmt 1 view .LVU1298
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4760              		.loc 1 4176 3 view .LVU1299
 4761              	.L367:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4762              		.loc 1 4177 2 is_stmt 0 view .LVU1300
 4763 0048 38BD     		pop	{r3, r4, r5, pc}
 4764              	.LVL312:
 4765              	.L381:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4766              		.loc 1 4131 6 is_stmt 1 view .LVU1301
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4767              		.loc 1 4131 10 is_stmt 0 view .LVU1302
 4768 004a 051D     		adds	r5, r0, #4
 4769 004c 2846     		mov	r0, r5
 4770              	.LVL313:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4771              		.loc 1 4131 10 view .LVU1303
 4772 004e FFF7FEFF 		bl	uxListRemove
 4773              	.LVL314:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4774              		.loc 1 4131 8 discriminator 1 view .LVU1304
 4775 0052 68B9     		cbnz	r0, .L373
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4776              		.loc 1 4133 7 is_stmt 1 view .LVU1305
 4777 0054 E36A     		ldr	r3, [r4, #44]
 4778 0056 03EB8302 		add	r2, r3, r3, lsl #2
 4779 005a 9200     		lsls	r2, r2, #2
 4780 005c 1249     		ldr	r1, .L382+4
 4781 005e 8A58     		ldr	r2, [r1, r2]
 4782 0060 32B9     		cbnz	r2, .L373
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4783              		.loc 1 4133 7 discriminator 1 view .LVU1306
 4784 0062 0122     		movs	r2, #1
 4785 0064 9A40     		lsls	r2, r2, r3
 4786 0066 1149     		ldr	r1, .L382+8
 4787 0068 0B68     		ldr	r3, [r1]
 4788 006a 23EA0203 		bic	r3, r3, r2
 4789 006e 0B60     		str	r3, [r1]
 4790              	.L373:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 202


 4791              		.loc 1 4137 31 view .LVU1307
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4792              		.loc 1 4142 67 view .LVU1308
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4793              		.loc 1 4143 6 view .LVU1309
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4794              		.loc 1 4143 31 is_stmt 0 view .LVU1310
 4795 0070 606C     		ldr	r0, [r4, #68]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4796              		.loc 1 4143 24 view .LVU1311
 4797 0072 E062     		str	r0, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4798              		.loc 1 4148 6 is_stmt 1 view .LVU1312
 4799 0074 C0F10703 		rsb	r3, r0, #7
 4800 0078 A361     		str	r3, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4801              		.loc 1 4149 6 view .LVU1313
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4802              		.loc 1 4149 6 view .LVU1314
 4803 007a 0124     		movs	r4, #1
 4804              	.LVL315:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4805              		.loc 1 4149 6 is_stmt 0 view .LVU1315
 4806 007c 04FA00F3 		lsl	r3, r4, r0
 4807 0080 0A4A     		ldr	r2, .L382+8
 4808 0082 1168     		ldr	r1, [r2]
 4809 0084 0B43     		orrs	r3, r3, r1
 4810 0086 1360     		str	r3, [r2]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4811              		.loc 1 4149 6 is_stmt 1 view .LVU1316
 4812 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4813 008c 2946     		mov	r1, r5
 4814 008e 064B     		ldr	r3, .L382+4
 4815 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4816 0094 FFF7FEFF 		bl	vListInsertEnd
 4817              	.LVL316:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4818              		.loc 1 4149 36 discriminator 1 view .LVU1317
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4819              		.loc 1 4159 6 view .LVU1318
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4820              		.loc 1 4159 14 is_stmt 0 view .LVU1319
 4821 0098 2046     		mov	r0, r4
 4822 009a D5E7     		b	.L367
 4823              	.LVL317:
 4824              	.L374:
 4825              		.cfi_def_cfa_offset 0
 4826              		.cfi_restore 3
 4827              		.cfi_restore 4
 4828              		.cfi_restore 5
 4829              		.cfi_restore 14
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4830              		.loc 1 4107 13 view .LVU1320
 4831 009c 0020     		movs	r0, #0
 4832              	.LVL318:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4833              		.loc 1 4177 2 view .LVU1321
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 203


 4834 009e 7047     		bx	lr
 4835              	.LVL319:
 4836              	.L375:
 4837              		.cfi_def_cfa_offset 16
 4838              		.cfi_offset 3, -16
 4839              		.cfi_offset 4, -12
 4840              		.cfi_offset 5, -8
 4841              		.cfi_offset 14, -4
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4842              		.loc 1 4107 13 view .LVU1322
 4843 00a0 0020     		movs	r0, #0
 4844              	.LVL320:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4845              		.loc 1 4107 13 view .LVU1323
 4846 00a2 D1E7     		b	.L367
 4847              	.L383:
 4848              		.align	2
 4849              	.L382:
 4850 00a4 00000000 		.word	pxCurrentTCB
 4851 00a8 00000000 		.word	pxReadyTasksLists
 4852 00ac 00000000 		.word	uxTopReadyPriority
 4853              		.cfi_endproc
 4854              	.LFE45:
 4856              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4857              		.align	1
 4858              		.global	vTaskPriorityDisinheritAfterTimeout
 4859              		.syntax unified
 4860              		.thumb
 4861              		.thumb_func
 4863              	vTaskPriorityDisinheritAfterTimeout:
 4864              	.LVL321:
 4865              	.LFB46:
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4866              		.loc 1 4185 2 is_stmt 1 view -0
 4867              		.cfi_startproc
 4868              		@ args = 0, pretend = 0, frame = 0
 4869              		@ frame_needed = 0, uses_anonymous_args = 0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4870              		.loc 1 4186 2 view .LVU1325
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4871              		.loc 1 4187 2 view .LVU1326
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4872              		.loc 1 4188 2 view .LVU1327
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4873              		.loc 1 4190 3 view .LVU1328
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4874              		.loc 1 4190 5 is_stmt 0 view .LVU1329
 4875 0000 0028     		cmp	r0, #0
 4876 0002 4FD0     		beq	.L394
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4877              		.loc 1 4185 2 view .LVU1330
 4878 0004 38B5     		push	{r3, r4, r5, lr}
 4879              		.cfi_def_cfa_offset 16
 4880              		.cfi_offset 3, -16
 4881              		.cfi_offset 4, -12
 4882              		.cfi_offset 5, -8
 4883              		.cfi_offset 14, -4
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 204


 4884 0006 0446     		mov	r4, r0
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4885              		.loc 1 4194 4 is_stmt 1 view .LVU1331
 4886 0008 836C     		ldr	r3, [r0, #72]
 4887 000a 43B9     		cbnz	r3, .L386
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4888              		.loc 1 4194 4 discriminator 1 view .LVU1332
 4889              	.LBB199:
 4890              	.LBI199:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4891              		.loc 2 191 30 view .LVU1333
 4892              	.LBB200:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4893              		.loc 2 193 1 view .LVU1334
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4894              		.loc 2 195 2 view .LVU1335
 4895              		.syntax unified
 4896              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4897 000c 4FF05003 			mov r3, #80												
 4898 0010 83F31188 		msr basepri, r3											
 4899 0014 BFF36F8F 		isb														
 4900 0018 BFF34F8F 		dsb														
 4901              	
 4902              	@ 0 "" 2
 4903              		.thumb
 4904              		.syntax unified
 4905              	.L387:
 4906              	.LBE200:
 4907              	.LBE199:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4908              		.loc 1 4194 4 discriminator 3 view .LVU1336
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4909              		.loc 1 4194 4 discriminator 3 view .LVU1337
 4910 001c FEE7     		b	.L387
 4911              	.L386:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4912              		.loc 1 4194 40 discriminator 2 view .LVU1338
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4913              		.loc 1 4200 4 view .LVU1339
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4914              		.loc 1 4200 13 is_stmt 0 view .LVU1340
 4915 001e 426C     		ldr	r2, [r0, #68]
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4916              		.loc 1 4200 6 view .LVU1341
 4917 0020 8A42     		cmp	r2, r1
 4918 0022 00D2     		bcs	.L388
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4919              		.loc 1 4202 21 view .LVU1342
 4920 0024 0A46     		mov	r2, r1
 4921              	.L388:
 4922              	.LVL322:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4923              		.loc 1 4210 4 is_stmt 1 view .LVU1343
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4924              		.loc 1 4210 13 is_stmt 0 view .LVU1344
 4925 0026 E16A     		ldr	r1, [r4, #44]
 4926              	.LVL323:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 205


4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4927              		.loc 1 4210 6 view .LVU1345
 4928 0028 9142     		cmp	r1, r2
 4929 002a 01D0     		beq	.L384
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4930              		.loc 1 4216 5 is_stmt 1 view .LVU1346
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4931              		.loc 1 4216 7 is_stmt 0 view .LVU1347
 4932 002c 012B     		cmp	r3, #1
 4933 002e 00D0     		beq	.L397
 4934              	.LVL324:
 4935              	.L384:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4936              		.loc 1 4282 2 view .LVU1348
 4937 0030 38BD     		pop	{r3, r4, r5, pc}
 4938              	.LVL325:
 4939              	.L397:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4940              		.loc 1 4221 6 is_stmt 1 view .LVU1349
 4941 0032 1D4B     		ldr	r3, .L399
 4942 0034 1B68     		ldr	r3, [r3]
 4943 0036 A342     		cmp	r3, r4
 4944 0038 2BD0     		beq	.L398
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4945              		.loc 1 4221 43 discriminator 2 view .LVU1350
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4946              		.loc 1 4226 67 view .LVU1351
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4947              		.loc 1 4227 6 view .LVU1352
 4948              	.LVL326:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4949              		.loc 1 4228 6 view .LVU1353
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4950              		.loc 1 4228 24 is_stmt 0 view .LVU1354
 4951 003a E262     		str	r2, [r4, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4952              		.loc 1 4232 6 is_stmt 1 view .LVU1355
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4953              		.loc 1 4232 12 is_stmt 0 view .LVU1356
 4954 003c A369     		ldr	r3, [r4, #24]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4955              		.loc 1 4232 8 view .LVU1357
 4956 003e 002B     		cmp	r3, #0
 4957 0040 02DB     		blt	.L391
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4958              		.loc 1 4234 7 is_stmt 1 view .LVU1358
 4959 0042 C2F10702 		rsb	r2, r2, #7
 4960              	.LVL327:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4961              		.loc 1 4234 7 is_stmt 0 view .LVU1359
 4962 0046 A261     		str	r2, [r4, #24]
 4963              	.L391:
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4964              		.loc 1 4238 31 is_stmt 1 view .LVU1360
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4965              		.loc 1 4247 6 view .LVU1361
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 206


 4966              		.loc 1 4247 10 is_stmt 0 view .LVU1362
 4967 0048 6269     		ldr	r2, [r4, #20]
 4968 004a 01EB8101 		add	r1, r1, r1, lsl #2
 4969              	.LVL328:
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4970              		.loc 1 4247 10 view .LVU1363
 4971 004e 174B     		ldr	r3, .L399+4
 4972 0050 03EB8103 		add	r3, r3, r1, lsl #2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4973              		.loc 1 4247 8 view .LVU1364
 4974 0054 9A42     		cmp	r2, r3
 4975 0056 EBD1     		bne	.L384
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4976              		.loc 1 4249 7 is_stmt 1 view .LVU1365
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4977              		.loc 1 4249 11 is_stmt 0 view .LVU1366
 4978 0058 251D     		adds	r5, r4, #4
 4979 005a 2846     		mov	r0, r5
 4980              	.LVL329:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4981              		.loc 1 4249 11 view .LVU1367
 4982 005c FFF7FEFF 		bl	uxListRemove
 4983              	.LVL330:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4984              		.loc 1 4249 9 discriminator 1 view .LVU1368
 4985 0060 38B9     		cbnz	r0, .L392
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4986              		.loc 1 4254 8 is_stmt 1 view .LVU1369
 4987 0062 E36A     		ldr	r3, [r4, #44]
 4988 0064 0122     		movs	r2, #1
 4989 0066 9A40     		lsls	r2, r2, r3
 4990 0068 1149     		ldr	r1, .L399+8
 4991 006a 0B68     		ldr	r3, [r1]
 4992 006c 23EA0203 		bic	r3, r3, r2
 4993 0070 0B60     		str	r3, [r1]
 4994              	.L392:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4995              		.loc 1 4258 32 view .LVU1370
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4996              		.loc 1 4261 7 view .LVU1371
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4997              		.loc 1 4261 7 view .LVU1372
 4998 0072 E06A     		ldr	r0, [r4, #44]
 4999 0074 0123     		movs	r3, #1
 5000 0076 8340     		lsls	r3, r3, r0
 5001 0078 0D4A     		ldr	r2, .L399+8
 5002 007a 1168     		ldr	r1, [r2]
 5003 007c 0B43     		orrs	r3, r3, r1
 5004 007e 1360     		str	r3, [r2]
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5005              		.loc 1 4261 7 view .LVU1373
 5006 0080 00EB8000 		add	r0, r0, r0, lsl #2
 5007 0084 2946     		mov	r1, r5
 5008 0086 094B     		ldr	r3, .L399+4
 5009 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5010 008c FFF7FEFF 		bl	vListInsertEnd
 5011              	.LVL331:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 207


4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5012              		.loc 1 4261 37 discriminator 1 view .LVU1374
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5013              		.loc 1 4280 28 view .LVU1375
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5014              		.loc 1 4282 2 is_stmt 0 view .LVU1376
 5015 0090 CEE7     		b	.L384
 5016              	.LVL332:
 5017              	.L398:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5018              		.loc 1 4221 6 is_stmt 1 discriminator 1 view .LVU1377
 5019              	.LBB201:
 5020              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5021              		.loc 2 191 30 view .LVU1378
 5022              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5023              		.loc 2 193 1 view .LVU1379
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5024              		.loc 2 195 2 view .LVU1380
 5025              		.syntax unified
 5026              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5027 0092 4FF05003 			mov r3, #80												
 5028 0096 83F31188 		msr basepri, r3											
 5029 009a BFF36F8F 		isb														
 5030 009e BFF34F8F 		dsb														
 5031              	
 5032              	@ 0 "" 2
 5033              		.thumb
 5034              		.syntax unified
 5035              	.L390:
 5036              	.LBE202:
 5037              	.LBE201:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5038              		.loc 1 4221 6 discriminator 3 view .LVU1381
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5039              		.loc 1 4221 6 discriminator 3 view .LVU1382
 5040 00a2 FEE7     		b	.L390
 5041              	.LVL333:
 5042              	.L394:
 5043              		.cfi_def_cfa_offset 0
 5044              		.cfi_restore 3
 5045              		.cfi_restore 4
 5046              		.cfi_restore 5
 5047              		.cfi_restore 14
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5048              		.loc 1 4221 6 is_stmt 0 discriminator 3 view .LVU1383
 5049 00a4 7047     		bx	lr
 5050              	.L400:
 5051 00a6 00BF     		.align	2
 5052              	.L399:
 5053 00a8 00000000 		.word	pxCurrentTCB
 5054 00ac 00000000 		.word	pxReadyTasksLists
 5055 00b0 00000000 		.word	uxTopReadyPriority
 5056              		.cfi_endproc
 5057              	.LFE46:
 5059              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 208


 5060              		.align	1
 5061              		.global	uxTaskResetEventItemValue
 5062              		.syntax unified
 5063              		.thumb
 5064              		.thumb_func
 5066              	uxTaskResetEventItemValue:
 5067              	.LFB47:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5068              		.loc 1 4603 1 is_stmt 1 view -0
 5069              		.cfi_startproc
 5070              		@ args = 0, pretend = 0, frame = 0
 5071              		@ frame_needed = 0, uses_anonymous_args = 0
 5072              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5073              		.loc 1 4604 1 view .LVU1385
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5074              		.loc 1 4606 2 view .LVU1386
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5075              		.loc 1 4606 13 is_stmt 0 view .LVU1387
 5076 0000 044A     		ldr	r2, .L402
 5077 0002 1368     		ldr	r3, [r2]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4606 11 view .LVU1388
 5079 0004 9869     		ldr	r0, [r3, #24]
 5080              	.LVL334:
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5081              		.loc 1 4610 2 is_stmt 1 view .LVU1389
 5082 0006 1368     		ldr	r3, [r2]
 5083 0008 DB6A     		ldr	r3, [r3, #44]
 5084 000a 1268     		ldr	r2, [r2]
 5085 000c C3F10703 		rsb	r3, r3, #7
 5086 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5087              		.loc 1 4612 2 view .LVU1390
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5088              		.loc 1 4613 1 is_stmt 0 view .LVU1391
 5089 0012 7047     		bx	lr
 5090              	.L403:
 5091              		.align	2
 5092              	.L402:
 5093 0014 00000000 		.word	pxCurrentTCB
 5094              		.cfi_endproc
 5095              	.LFE47:
 5097              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5098              		.align	1
 5099              		.global	pvTaskIncrementMutexHeldCount
 5100              		.syntax unified
 5101              		.thumb
 5102              		.thumb_func
 5104              	pvTaskIncrementMutexHeldCount:
 5105              	.LFB48:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5106              		.loc 1 4619 2 is_stmt 1 view -0
 5107              		.cfi_startproc
 5108              		@ args = 0, pretend = 0, frame = 0
 5109              		@ frame_needed = 0, uses_anonymous_args = 0
 5110              		@ link register save eliminated.
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 209


4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5111              		.loc 1 4622 3 view .LVU1393
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5112              		.loc 1 4622 20 is_stmt 0 view .LVU1394
 5113 0000 054B     		ldr	r3, .L406
 5114 0002 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5115              		.loc 1 4622 5 view .LVU1395
 5116 0004 23B1     		cbz	r3, .L405
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5117              		.loc 1 4624 4 is_stmt 1 view .LVU1396
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5118              		.loc 1 4624 18 is_stmt 0 view .LVU1397
 5119 0006 044B     		ldr	r3, .L406
 5120 0008 1A68     		ldr	r2, [r3]
 5121 000a 936C     		ldr	r3, [r2, #72]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5122              		.loc 1 4624 35 view .LVU1398
 5123 000c 0133     		adds	r3, r3, #1
 5124 000e 9364     		str	r3, [r2, #72]
 5125              	.L405:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5126              		.loc 1 4627 3 is_stmt 1 view .LVU1399
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5127              		.loc 1 4627 10 is_stmt 0 view .LVU1400
 5128 0010 014B     		ldr	r3, .L406
 5129 0012 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5130              		.loc 1 4628 2 view .LVU1401
 5131 0014 7047     		bx	lr
 5132              	.L407:
 5133 0016 00BF     		.align	2
 5134              	.L406:
 5135 0018 00000000 		.word	pxCurrentTCB
 5136              		.cfi_endproc
 5137              	.LFE48:
 5139              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5140              		.align	1
 5141              		.global	ulTaskNotifyTake
 5142              		.syntax unified
 5143              		.thumb
 5144              		.thumb_func
 5146              	ulTaskNotifyTake:
 5147              	.LVL335:
 5148              	.LFB49:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5149              		.loc 1 4636 2 is_stmt 1 view -0
 5150              		.cfi_startproc
 5151              		@ args = 0, pretend = 0, frame = 0
 5152              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5153              		.loc 1 4636 2 is_stmt 0 view .LVU1403
 5154 0000 38B5     		push	{r3, r4, r5, lr}
 5155              		.cfi_def_cfa_offset 16
 5156              		.cfi_offset 3, -16
 5157              		.cfi_offset 4, -12
 5158              		.cfi_offset 5, -8
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 210


 5159              		.cfi_offset 14, -4
 5160 0002 0546     		mov	r5, r0
 5161 0004 0C46     		mov	r4, r1
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5162              		.loc 1 4637 2 is_stmt 1 view .LVU1404
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5163              		.loc 1 4639 3 view .LVU1405
 5164 0006 FFF7FEFF 		bl	vPortEnterCritical
 5165              	.LVL336:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5166              		.loc 1 4642 4 view .LVU1406
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5167              		.loc 1 4642 20 is_stmt 0 view .LVU1407
 5168 000a 1A4B     		ldr	r3, .L414
 5169 000c 1B68     		ldr	r3, [r3]
 5170 000e DB6C     		ldr	r3, [r3, #76]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5171              		.loc 1 4642 6 view .LVU1408
 5172 0010 2BB9     		cbnz	r3, .L409
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5173              		.loc 1 4645 5 is_stmt 1 view .LVU1409
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5174              		.loc 1 4645 17 is_stmt 0 view .LVU1410
 5175 0012 184B     		ldr	r3, .L414
 5176 0014 1B68     		ldr	r3, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5177              		.loc 1 4645 33 view .LVU1411
 5178 0016 0122     		movs	r2, #1
 5179 0018 83F85020 		strb	r2, [r3, #80]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5180              		.loc 1 4647 5 is_stmt 1 view .LVU1412
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5181              		.loc 1 4647 7 is_stmt 0 view .LVU1413
 5182 001c ACB9     		cbnz	r4, .L413
 5183              	.L409:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5184              		.loc 1 4665 29 is_stmt 1 view .LVU1414
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5185              		.loc 1 4668 3 view .LVU1415
 5186 001e FFF7FEFF 		bl	vPortExitCritical
 5187              	.LVL337:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5188              		.loc 1 4670 3 view .LVU1416
 5189 0022 FFF7FEFF 		bl	vPortEnterCritical
 5190              	.LVL338:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5191              		.loc 1 4672 27 view .LVU1417
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5192              		.loc 1 4673 4 view .LVU1418
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5193              		.loc 1 4673 27 is_stmt 0 view .LVU1419
 5194 0026 134B     		ldr	r3, .L414
 5195 0028 1B68     		ldr	r3, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5196              		.loc 1 4673 13 view .LVU1420
 5197 002a DC6C     		ldr	r4, [r3, #76]
 5198              	.LVL339:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 211


4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5199              		.loc 1 4675 4 is_stmt 1 view .LVU1421
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5200              		.loc 1 4675 6 is_stmt 0 view .LVU1422
 5201 002c 24B1     		cbz	r4, .L410
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5202              		.loc 1 4677 5 is_stmt 1 view .LVU1423
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5203              		.loc 1 4677 7 is_stmt 0 view .LVU1424
 5204 002e DDB1     		cbz	r5, .L411
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5205              		.loc 1 4679 6 is_stmt 1 view .LVU1425
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5206              		.loc 1 4679 18 is_stmt 0 view .LVU1426
 5207 0030 104B     		ldr	r3, .L414
 5208 0032 1B68     		ldr	r3, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5209              		.loc 1 4679 36 view .LVU1427
 5210 0034 0022     		movs	r2, #0
 5211 0036 DA64     		str	r2, [r3, #76]
 5212              	.L410:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5213              		.loc 1 4688 29 is_stmt 1 view .LVU1428
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5214              		.loc 1 4691 4 view .LVU1429
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5215              		.loc 1 4691 16 is_stmt 0 view .LVU1430
 5216 0038 0E4B     		ldr	r3, .L414
 5217 003a 1B68     		ldr	r3, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5218              		.loc 1 4691 32 view .LVU1431
 5219 003c 0022     		movs	r2, #0
 5220 003e 83F85020 		strb	r2, [r3, #80]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5221              		.loc 1 4693 3 is_stmt 1 view .LVU1432
 5222 0042 FFF7FEFF 		bl	vPortExitCritical
 5223              	.LVL340:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5224              		.loc 1 4695 3 view .LVU1433
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5225              		.loc 1 4696 2 is_stmt 0 view .LVU1434
 5226 0046 2046     		mov	r0, r4
 5227 0048 38BD     		pop	{r3, r4, r5, pc}
 5228              	.LVL341:
 5229              	.L413:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5230              		.loc 1 4649 6 is_stmt 1 view .LVU1435
 5231 004a 1146     		mov	r1, r2
 5232 004c 2046     		mov	r0, r4
 5233 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5234              	.LVL342:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5235              		.loc 1 4650 35 view .LVU1436
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5236              		.loc 1 4656 6 view .LVU1437
 5237 0052 4FF0E023 		mov	r3, #-536813568
 5238 0056 4FF08052 		mov	r2, #268435456
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 212


 5239 005a C3F8042D 		str	r2, [r3, #3332]
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5240              		.loc 1 4656 6 view .LVU1438
 5241              		.syntax unified
 5242              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5243 005e BFF34F8F 		dsb
 5244              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5245              		.loc 1 4656 6 view .LVU1439
 5246              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5247 0062 BFF36F8F 		isb
 5248              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5249              		.loc 1 4656 28 view .LVU1440
 5250              		.thumb
 5251              		.syntax unified
 5252 0066 DAE7     		b	.L409
 5253              	.LVL343:
 5254              	.L411:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5255              		.loc 1 4683 6 view .LVU1441
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5256              		.loc 1 4683 18 is_stmt 0 view .LVU1442
 5257 0068 024B     		ldr	r3, .L414
 5258 006a 1B68     		ldr	r3, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5259              		.loc 1 4683 47 view .LVU1443
 5260 006c 621E     		subs	r2, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5261              		.loc 1 4683 36 view .LVU1444
 5262 006e DA64     		str	r2, [r3, #76]
 5263 0070 E2E7     		b	.L410
 5264              	.L415:
 5265 0072 00BF     		.align	2
 5266              	.L414:
 5267 0074 00000000 		.word	pxCurrentTCB
 5268              		.cfi_endproc
 5269              	.LFE49:
 5271              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5272              		.align	1
 5273              		.global	xTaskNotifyWait
 5274              		.syntax unified
 5275              		.thumb
 5276              		.thumb_func
 5278              	xTaskNotifyWait:
 5279              	.LVL344:
 5280              	.LFB50:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5281              		.loc 1 4704 2 is_stmt 1 view -0
 5282              		.cfi_startproc
 5283              		@ args = 0, pretend = 0, frame = 0
 5284              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5285              		.loc 1 4704 2 is_stmt 0 view .LVU1446
 5286 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5287              		.cfi_def_cfa_offset 24
 5288              		.cfi_offset 3, -24
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 213


 5289              		.cfi_offset 4, -20
 5290              		.cfi_offset 5, -16
 5291              		.cfi_offset 6, -12
 5292              		.cfi_offset 7, -8
 5293              		.cfi_offset 14, -4
 5294 0002 0646     		mov	r6, r0
 5295 0004 0F46     		mov	r7, r1
 5296 0006 1446     		mov	r4, r2
 5297 0008 1D46     		mov	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5298              		.loc 1 4705 2 is_stmt 1 view .LVU1447
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5299              		.loc 1 4707 3 view .LVU1448
 5300 000a FFF7FEFF 		bl	vPortEnterCritical
 5301              	.LVL345:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5302              		.loc 1 4710 4 view .LVU1449
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5303              		.loc 1 4710 20 is_stmt 0 view .LVU1450
 5304 000e 204B     		ldr	r3, .L424
 5305 0010 1B68     		ldr	r3, [r3]
 5306 0012 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5307              		.loc 1 4710 6 view .LVU1451
 5308 0016 022B     		cmp	r3, #2
 5309 0018 0AD0     		beq	.L417
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5310              		.loc 1 4715 5 is_stmt 1 view .LVU1452
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5311              		.loc 1 4715 17 is_stmt 0 view .LVU1453
 5312 001a 1D4A     		ldr	r2, .L424
 5313 001c 1168     		ldr	r1, [r2]
 5314 001e CB6C     		ldr	r3, [r1, #76]
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5315              		.loc 1 4715 35 view .LVU1454
 5316 0020 23EA0603 		bic	r3, r3, r6
 5317 0024 CB64     		str	r3, [r1, #76]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5318              		.loc 1 4718 5 is_stmt 1 view .LVU1455
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5319              		.loc 1 4718 17 is_stmt 0 view .LVU1456
 5320 0026 1368     		ldr	r3, [r2]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5321              		.loc 1 4718 33 view .LVU1457
 5322 0028 0122     		movs	r2, #1
 5323 002a 83F85020 		strb	r2, [r3, #80]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5324              		.loc 1 4720 5 is_stmt 1 view .LVU1458
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5325              		.loc 1 4720 7 is_stmt 0 view .LVU1459
 5326 002e C5B9     		cbnz	r5, .L422
 5327              	.L417:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5328              		.loc 1 4738 29 is_stmt 1 view .LVU1460
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5329              		.loc 1 4741 3 view .LVU1461
 5330 0030 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 214


 5331              	.LVL346:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5332              		.loc 1 4743 3 view .LVU1462
 5333 0034 FFF7FEFF 		bl	vPortEnterCritical
 5334              	.LVL347:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5335              		.loc 1 4745 27 view .LVU1463
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5336              		.loc 1 4747 4 view .LVU1464
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5337              		.loc 1 4747 6 is_stmt 0 view .LVU1465
 5338 0038 1CB1     		cbz	r4, .L418
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5339              		.loc 1 4751 5 is_stmt 1 view .LVU1466
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5340              		.loc 1 4751 41 is_stmt 0 view .LVU1467
 5341 003a 154B     		ldr	r3, .L424
 5342 003c 1B68     		ldr	r3, [r3]
 5343 003e DB6C     		ldr	r3, [r3, #76]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5344              		.loc 1 4751 27 view .LVU1468
 5345 0040 2360     		str	r3, [r4]
 5346              	.L418:
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5347              		.loc 1 4758 4 is_stmt 1 view .LVU1469
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5348              		.loc 1 4758 20 is_stmt 0 view .LVU1470
 5349 0042 134B     		ldr	r3, .L424
 5350 0044 1B68     		ldr	r3, [r3]
 5351 0046 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5352              		.loc 1 4758 6 view .LVU1471
 5353 004a 022B     		cmp	r3, #2
 5354 004c 18D0     		beq	.L423
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5355              		.loc 1 4761 13 view .LVU1472
 5356 004e 0024     		movs	r4, #0
 5357              	.LVL348:
 5358              	.L419:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5359              		.loc 1 4771 4 is_stmt 1 view .LVU1473
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5360              		.loc 1 4771 16 is_stmt 0 view .LVU1474
 5361 0050 0F4B     		ldr	r3, .L424
 5362 0052 1B68     		ldr	r3, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5363              		.loc 1 4771 32 view .LVU1475
 5364 0054 0022     		movs	r2, #0
 5365 0056 83F85020 		strb	r2, [r3, #80]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5366              		.loc 1 4773 3 is_stmt 1 view .LVU1476
 5367 005a FFF7FEFF 		bl	vPortExitCritical
 5368              	.LVL349:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5369              		.loc 1 4775 3 view .LVU1477
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5370              		.loc 1 4776 2 is_stmt 0 view .LVU1478
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 215


 5371 005e 2046     		mov	r0, r4
 5372 0060 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5373              	.LVL350:
 5374              	.L422:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5375              		.loc 1 4722 6 is_stmt 1 view .LVU1479
 5376 0062 1146     		mov	r1, r2
 5377 0064 2846     		mov	r0, r5
 5378 0066 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5379              	.LVL351:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5380              		.loc 1 4723 35 view .LVU1480
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5381              		.loc 1 4729 6 view .LVU1481
 5382 006a 4FF0E023 		mov	r3, #-536813568
 5383 006e 4FF08052 		mov	r2, #268435456
 5384 0072 C3F8042D 		str	r2, [r3, #3332]
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5385              		.loc 1 4729 6 view .LVU1482
 5386              		.syntax unified
 5387              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5388 0076 BFF34F8F 		dsb
 5389              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5390              		.loc 1 4729 6 view .LVU1483
 5391              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5392 007a BFF36F8F 		isb
 5393              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5394              		.loc 1 4729 28 view .LVU1484
 5395              		.thumb
 5396              		.syntax unified
 5397 007e D7E7     		b	.L417
 5398              	.L423:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5399              		.loc 1 4767 5 view .LVU1485
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5400              		.loc 1 4767 17 is_stmt 0 view .LVU1486
 5401 0080 034B     		ldr	r3, .L424
 5402 0082 1A68     		ldr	r2, [r3]
 5403 0084 D36C     		ldr	r3, [r2, #76]
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5404              		.loc 1 4767 35 view .LVU1487
 5405 0086 23EA0703 		bic	r3, r3, r7
 5406 008a D364     		str	r3, [r2, #76]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5407              		.loc 1 4768 5 is_stmt 1 view .LVU1488
 5408              	.LVL352:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5409              		.loc 1 4768 13 is_stmt 0 view .LVU1489
 5410 008c 0124     		movs	r4, #1
 5411              	.LVL353:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5412              		.loc 1 4768 13 view .LVU1490
 5413 008e DFE7     		b	.L419
 5414              	.L425:
 5415              		.align	2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 216


 5416              	.L424:
 5417 0090 00000000 		.word	pxCurrentTCB
 5418              		.cfi_endproc
 5419              	.LFE50:
 5421              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5422              		.align	1
 5423              		.global	xTaskGenericNotify
 5424              		.syntax unified
 5425              		.thumb
 5426              		.thumb_func
 5428              	xTaskGenericNotify:
 5429              	.LVL354:
 5430              	.LFB51:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5431              		.loc 1 4784 2 is_stmt 1 view -0
 5432              		.cfi_startproc
 5433              		@ args = 0, pretend = 0, frame = 0
 5434              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5435              		.loc 1 4784 2 is_stmt 0 view .LVU1492
 5436 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5437              		.cfi_def_cfa_offset 24
 5438              		.cfi_offset 3, -24
 5439              		.cfi_offset 4, -20
 5440              		.cfi_offset 5, -16
 5441              		.cfi_offset 6, -12
 5442              		.cfi_offset 7, -8
 5443              		.cfi_offset 14, -4
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5444              		.loc 1 4785 2 is_stmt 1 view .LVU1493
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5445              		.loc 1 4786 2 view .LVU1494
 5446              	.LVL355:
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5447              		.loc 1 4787 2 view .LVU1495
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5448              		.loc 1 4789 3 view .LVU1496
 5449 0002 A8B1     		cbz	r0, .L446
 5450 0004 0F46     		mov	r7, r1
 5451 0006 1446     		mov	r4, r2
 5452 0008 1D46     		mov	r5, r3
 5453 000a 0646     		mov	r6, r0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5454              		.loc 1 4789 32 discriminator 2 view .LVU1497
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5455              		.loc 1 4790 3 view .LVU1498
 5456              	.LVL356:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5457              		.loc 1 4792 3 view .LVU1499
 5458 000c FFF7FEFF 		bl	vPortEnterCritical
 5459              	.LVL357:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5460              		.loc 1 4794 4 view .LVU1500
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5461              		.loc 1 4794 6 is_stmt 0 view .LVU1501
 5462 0010 0DB1     		cbz	r5, .L429
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 217


 5463              		.loc 1 4796 5 is_stmt 1 view .LVU1502
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5464              		.loc 1 4796 42 is_stmt 0 view .LVU1503
 5465 0012 F36C     		ldr	r3, [r6, #76]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5466              		.loc 1 4796 35 view .LVU1504
 5467 0014 2B60     		str	r3, [r5]
 5468              	.L429:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5469              		.loc 1 4799 4 is_stmt 1 view .LVU1505
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5470              		.loc 1 4799 26 is_stmt 0 view .LVU1506
 5471 0016 96F85030 		ldrb	r3, [r6, #80]	@ zero_extendqisi2
 5472 001a DBB2     		uxtb	r3, r3
 5473              	.LVL358:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5474              		.loc 1 4801 4 is_stmt 1 view .LVU1507
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5475              		.loc 1 4801 25 is_stmt 0 view .LVU1508
 5476 001c 0222     		movs	r2, #2
 5477 001e 86F85020 		strb	r2, [r6, #80]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5478              		.loc 1 4803 4 is_stmt 1 view .LVU1509
 5479 0022 042C     		cmp	r4, #4
 5480 0024 21D8     		bhi	.L430
 5481 0026 DFE804F0 		tbb	[pc, r4]
 5482              	.L432:
 5483 002a 0F       		.byte	(.L436-.L432)/2
 5484 002b 0C       		.byte	(.L435-.L432)/2
 5485 002c 16       		.byte	(.L434-.L432)/2
 5486 002d 1A       		.byte	(.L433-.L432)/2
 5487 002e 1C       		.byte	(.L431-.L432)/2
 5488              	.LVL359:
 5489 002f 00       		.p2align 1
 5490              	.L446:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5491              		.loc 1 4789 3 discriminator 1 view .LVU1510
 5492              	.LBB203:
 5493              	.LBI203:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5494              		.loc 2 191 30 view .LVU1511
 5495              	.LBB204:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5496              		.loc 2 193 1 view .LVU1512
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5497              		.loc 2 195 2 view .LVU1513
 5498              		.syntax unified
 5499              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5500 0030 4FF05003 			mov r3, #80												
 5501 0034 83F31188 		msr basepri, r3											
 5502 0038 BFF36F8F 		isb														
 5503 003c BFF34F8F 		dsb														
 5504              	
 5505              	@ 0 "" 2
 5506              	.LVL360:
 5507              		.thumb
 5508              		.syntax unified
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 218


 5509              	.L428:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5510              		.loc 2 195 2 is_stmt 0 view .LVU1514
 5511              	.LBE204:
 5512              	.LBE203:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5513              		.loc 1 4789 3 is_stmt 1 discriminator 3 view .LVU1515
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5514              		.loc 1 4789 3 discriminator 3 view .LVU1516
 5515 0040 FEE7     		b	.L428
 5516              	.LVL361:
 5517              	.L435:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5518              		.loc 1 4806 6 view .LVU1517
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5519              		.loc 1 4806 11 is_stmt 0 view .LVU1518
 5520 0042 F26C     		ldr	r2, [r6, #76]
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5521              		.loc 1 4806 29 view .LVU1519
 5522 0044 3A43     		orrs	r2, r2, r7
 5523 0046 F264     		str	r2, [r6, #76]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5524              		.loc 1 4807 6 is_stmt 1 view .LVU1520
 5525              	.L436:
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5526              		.loc 1 4843 22 view .LVU1521
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5527              		.loc 1 4847 4 view .LVU1522
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5528              		.loc 1 4847 6 is_stmt 0 view .LVU1523
 5529 0048 012B     		cmp	r3, #1
 5530 004a 1BD0     		beq	.L447
 5531 004c 0124     		movs	r4, #1
 5532              	.LVL362:
 5533              	.L437:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5534              		.loc 1 4884 29 is_stmt 1 view .LVU1524
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5535              		.loc 1 4887 3 view .LVU1525
 5536 004e FFF7FEFF 		bl	vPortExitCritical
 5537              	.LVL363:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5538              		.loc 1 4889 3 view .LVU1526
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5539              		.loc 1 4890 2 is_stmt 0 view .LVU1527
 5540 0052 2046     		mov	r0, r4
 5541 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5542              	.LVL364:
 5543              	.L434:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5544              		.loc 1 4810 6 is_stmt 1 view .LVU1528
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5545              		.loc 1 4810 13 is_stmt 0 view .LVU1529
 5546 0056 F26C     		ldr	r2, [r6, #76]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5547              		.loc 1 4810 32 view .LVU1530
 5548 0058 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 219


 5549 005a F264     		str	r2, [r6, #76]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5550              		.loc 1 4811 6 is_stmt 1 view .LVU1531
 5551 005c F4E7     		b	.L436
 5552              	.L433:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5553              		.loc 1 4814 6 view .LVU1532
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5554              		.loc 1 4814 29 is_stmt 0 view .LVU1533
 5555 005e F764     		str	r7, [r6, #76]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5556              		.loc 1 4815 6 is_stmt 1 view .LVU1534
 5557 0060 F2E7     		b	.L436
 5558              	.L431:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5559              		.loc 1 4818 6 view .LVU1535
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5560              		.loc 1 4818 8 is_stmt 0 view .LVU1536
 5561 0062 022B     		cmp	r3, #2
 5562 0064 3ED0     		beq	.L441
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5563              		.loc 1 4820 7 is_stmt 1 view .LVU1537
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5564              		.loc 1 4820 30 is_stmt 0 view .LVU1538
 5565 0066 F764     		str	r7, [r6, #76]
 5566 0068 EEE7     		b	.L436
 5567              	.L430:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5568              		.loc 1 4838 6 is_stmt 1 view .LVU1539
 5569 006a F26C     		ldr	r2, [r6, #76]
 5570 006c B2F1FF3F 		cmp	r2, #-1
 5571 0070 EAD0     		beq	.L436
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5572              		.loc 1 4838 6 discriminator 1 view .LVU1540
 5573              	.LBB205:
 5574              	.LBI205:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5575              		.loc 2 191 30 view .LVU1541
 5576              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5577              		.loc 2 193 1 view .LVU1542
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5578              		.loc 2 195 2 view .LVU1543
 5579              		.syntax unified
 5580              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5581 0072 4FF05003 			mov r3, #80												
 5582 0076 83F31188 		msr basepri, r3											
 5583 007a BFF36F8F 		isb														
 5584 007e BFF34F8F 		dsb														
 5585              	
 5586              	@ 0 "" 2
 5587              	.LVL365:
 5588              		.thumb
 5589              		.syntax unified
 5590              	.L438:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5591              		.loc 2 195 2 is_stmt 0 view .LVU1544
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 220


 5592              	.LBE206:
 5593              	.LBE205:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5594              		.loc 1 4838 6 is_stmt 1 discriminator 3 view .LVU1545
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5595              		.loc 1 4838 6 discriminator 3 view .LVU1546
 5596 0082 FEE7     		b	.L438
 5597              	.LVL366:
 5598              	.L447:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5599              		.loc 1 4849 5 view .LVU1547
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5600              		.loc 1 4849 14 is_stmt 0 view .LVU1548
 5601 0084 341D     		adds	r4, r6, #4
 5602 0086 2046     		mov	r0, r4
 5603 0088 FFF7FEFF 		bl	uxListRemove
 5604              	.LVL367:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5605              		.loc 1 4850 5 is_stmt 1 view .LVU1549
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5606              		.loc 1 4850 5 view .LVU1550
 5607 008c F06A     		ldr	r0, [r6, #44]
 5608 008e 0123     		movs	r3, #1
 5609 0090 8340     		lsls	r3, r3, r0
 5610 0092 164A     		ldr	r2, .L448
 5611 0094 1168     		ldr	r1, [r2]
 5612 0096 0B43     		orrs	r3, r3, r1
 5613 0098 1360     		str	r3, [r2]
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5614              		.loc 1 4850 5 view .LVU1551
 5615 009a 00EB8000 		add	r0, r0, r0, lsl #2
 5616 009e 2146     		mov	r1, r4
 5617 00a0 134B     		ldr	r3, .L448+4
 5618 00a2 03EB8000 		add	r0, r3, r0, lsl #2
 5619 00a6 FFF7FEFF 		bl	vListInsertEnd
 5620              	.LVL368:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5621              		.loc 1 4850 35 discriminator 1 view .LVU1552
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5622              		.loc 1 4853 5 view .LVU1553
 5623 00aa B36A     		ldr	r3, [r6, #40]
 5624 00ac 43B1     		cbz	r3, .L439
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5625              		.loc 1 4853 5 discriminator 1 view .LVU1554
 5626              	.LBB207:
 5627              	.LBI207:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5628              		.loc 2 191 30 view .LVU1555
 5629              	.LBB208:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5630              		.loc 2 193 1 view .LVU1556
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5631              		.loc 2 195 2 view .LVU1557
 5632              		.syntax unified
 5633              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5634 00ae 4FF05003 			mov r3, #80												
 5635 00b2 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 221


 5636 00b6 BFF36F8F 		isb														
 5637 00ba BFF34F8F 		dsb														
 5638              	
 5639              	@ 0 "" 2
 5640              		.thumb
 5641              		.syntax unified
 5642              	.L440:
 5643              	.LBE208:
 5644              	.LBE207:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5645              		.loc 1 4853 5 discriminator 3 view .LVU1558
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5646              		.loc 1 4853 5 discriminator 3 view .LVU1559
 5647 00be FEE7     		b	.L440
 5648              	.L439:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5649              		.loc 1 4853 82 discriminator 2 view .LVU1560
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5650              		.loc 1 4871 5 view .LVU1561
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5651              		.loc 1 4871 14 is_stmt 0 view .LVU1562
 5652 00c0 F26A     		ldr	r2, [r6, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5653              		.loc 1 4871 41 view .LVU1563
 5654 00c2 0C4B     		ldr	r3, .L448+8
 5655 00c4 1B68     		ldr	r3, [r3]
 5656 00c6 DB6A     		ldr	r3, [r3, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5657              		.loc 1 4871 7 view .LVU1564
 5658 00c8 9A42     		cmp	r2, r3
 5659 00ca 0DD9     		bls	.L443
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5660              		.loc 1 4875 6 is_stmt 1 view .LVU1565
 5661 00cc 4FF0E023 		mov	r3, #-536813568
 5662 00d0 4FF08052 		mov	r2, #268435456
 5663 00d4 C3F8042D 		str	r2, [r3, #3332]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5664              		.loc 1 4875 6 view .LVU1566
 5665              		.syntax unified
 5666              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5667 00d8 BFF34F8F 		dsb
 5668              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5669              		.loc 1 4875 6 view .LVU1567
 5670              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5671 00dc BFF36F8F 		isb
 5672              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5673              		.loc 1 4875 37 view .LVU1568
 5674              		.thumb
 5675              		.syntax unified
 5676 00e0 0124     		movs	r4, #1
 5677 00e2 B4E7     		b	.L437
 5678              	.LVL369:
 5679              	.L441:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5680              		.loc 1 4825 15 is_stmt 0 view .LVU1569
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 222


 5681 00e4 0024     		movs	r4, #0
 5682 00e6 B2E7     		b	.L437
 5683              	.LVL370:
 5684              	.L443:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5685              		.loc 1 4825 15 view .LVU1570
 5686 00e8 0124     		movs	r4, #1
 5687 00ea B0E7     		b	.L437
 5688              	.L449:
 5689              		.align	2
 5690              	.L448:
 5691 00ec 00000000 		.word	uxTopReadyPriority
 5692 00f0 00000000 		.word	pxReadyTasksLists
 5693 00f4 00000000 		.word	pxCurrentTCB
 5694              		.cfi_endproc
 5695              	.LFE51:
 5697              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5698              		.align	1
 5699              		.global	xTaskGenericNotifyFromISR
 5700              		.syntax unified
 5701              		.thumb
 5702              		.thumb_func
 5704              	xTaskGenericNotifyFromISR:
 5705              	.LVL371:
 5706              	.LFB52:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5707              		.loc 1 4898 2 is_stmt 1 view -0
 5708              		.cfi_startproc
 5709              		@ args = 4, pretend = 0, frame = 0
 5710              		@ frame_needed = 0, uses_anonymous_args = 0
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5711              		.loc 1 4899 2 view .LVU1572
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5712              		.loc 1 4900 2 view .LVU1573
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5713              		.loc 1 4901 2 view .LVU1574
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5714              		.loc 1 4902 2 view .LVU1575
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5715              		.loc 1 4904 3 view .LVU1576
 5716 0000 10B3     		cbz	r0, .L474
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5717              		.loc 1 4898 2 is_stmt 0 view .LVU1577
 5718 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5719              		.cfi_def_cfa_offset 24
 5720              		.cfi_offset 4, -24
 5721              		.cfi_offset 5, -20
 5722              		.cfi_offset 6, -16
 5723              		.cfi_offset 7, -12
 5724              		.cfi_offset 8, -8
 5725              		.cfi_offset 14, -4
 5726 0006 0F46     		mov	r7, r1
 5727 0008 1446     		mov	r4, r2
 5728 000a 1D46     		mov	r5, r3
 5729 000c 0646     		mov	r6, r0
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5730              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1578
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 223


4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5731              		.loc 1 4922 3 view .LVU1579
 5732 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5733              	.LVL372:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5734              		.loc 1 4924 3 view .LVU1580
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5735              		.loc 1 4926 3 view .LVU1581
 5736              	.LBB209:
 5737              	.LBI209:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5738              		.loc 2 207 34 view .LVU1582
 5739              	.LBB210:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5740              		.loc 2 209 1 view .LVU1583
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5741              		.loc 2 211 2 view .LVU1584
 5742              		.syntax unified
 5743              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5744 0012 EFF31183 			mrs r3, basepri											
 5745 0016 4FF05002 		mov r2, #80												
 5746 001a 82F31188 		msr basepri, r2											
 5747 001e BFF36F8F 		isb														
 5748 0022 BFF34F8F 		dsb														
 5749              	
 5750              	@ 0 "" 2
 5751              		.thumb
 5752              		.syntax unified
 5753 0026 9846     		mov	r8, r3
 5754              	.LVL373:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5755              		.loc 2 223 2 view .LVU1585
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5756              		.loc 2 223 2 is_stmt 0 view .LVU1586
 5757              	.LBE210:
 5758              	.LBE209:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5759              		.loc 1 4928 4 is_stmt 1 view .LVU1587
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5760              		.loc 1 4928 6 is_stmt 0 view .LVU1588
 5761 0028 0DB1     		cbz	r5, .L453
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5762              		.loc 1 4930 5 is_stmt 1 view .LVU1589
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5763              		.loc 1 4930 42 is_stmt 0 view .LVU1590
 5764 002a F36C     		ldr	r3, [r6, #76]
 5765              	.LVL374:
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5766              		.loc 1 4930 35 view .LVU1591
 5767 002c 2B60     		str	r3, [r5]
 5768              	.L453:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5769              		.loc 1 4933 4 is_stmt 1 view .LVU1592
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5770              		.loc 1 4933 26 is_stmt 0 view .LVU1593
 5771 002e 96F85030 		ldrb	r3, [r6, #80]	@ zero_extendqisi2
 5772 0032 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 224


 5773              	.LVL375:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5774              		.loc 1 4934 4 is_stmt 1 view .LVU1594
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5775              		.loc 1 4934 25 is_stmt 0 view .LVU1595
 5776 0034 0222     		movs	r2, #2
 5777 0036 86F85020 		strb	r2, [r6, #80]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5778              		.loc 1 4936 4 is_stmt 1 view .LVU1596
 5779 003a 042C     		cmp	r4, #4
 5780 003c 21D8     		bhi	.L454
 5781 003e DFE804F0 		tbb	[pc, r4]
 5782              	.L456:
 5783 0042 0F       		.byte	(.L460-.L456)/2
 5784 0043 0C       		.byte	(.L459-.L456)/2
 5785 0044 16       		.byte	(.L458-.L456)/2
 5786 0045 1A       		.byte	(.L457-.L456)/2
 5787 0046 1C       		.byte	(.L455-.L456)/2
 5788              	.LVL376:
 5789 0047 00       		.p2align 1
 5790              	.L474:
 5791              		.cfi_def_cfa_offset 0
 5792              		.cfi_restore 4
 5793              		.cfi_restore 5
 5794              		.cfi_restore 6
 5795              		.cfi_restore 7
 5796              		.cfi_restore 8
 5797              		.cfi_restore 14
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5798              		.loc 1 4904 3 discriminator 1 view .LVU1597
 5799              	.LBB211:
 5800              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5801              		.loc 2 191 30 view .LVU1598
 5802              	.LBB212:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5803              		.loc 2 193 1 view .LVU1599
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5804              		.loc 2 195 2 view .LVU1600
 5805              		.syntax unified
 5806              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5807 0048 4FF05003 			mov r3, #80												
 5808 004c 83F31188 		msr basepri, r3											
 5809 0050 BFF36F8F 		isb														
 5810 0054 BFF34F8F 		dsb														
 5811              	
 5812              	@ 0 "" 2
 5813              	.LVL377:
 5814              		.thumb
 5815              		.syntax unified
 5816              	.L452:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5817              		.loc 2 195 2 is_stmt 0 view .LVU1601
 5818              	.LBE212:
 5819              	.LBE211:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5820              		.loc 1 4904 3 is_stmt 1 discriminator 3 view .LVU1602
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 225


4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5821              		.loc 1 4904 3 discriminator 3 view .LVU1603
 5822 0058 FEE7     		b	.L452
 5823              	.LVL378:
 5824              	.L459:
 5825              		.cfi_def_cfa_offset 24
 5826              		.cfi_offset 4, -24
 5827              		.cfi_offset 5, -20
 5828              		.cfi_offset 6, -16
 5829              		.cfi_offset 7, -12
 5830              		.cfi_offset 8, -8
 5831              		.cfi_offset 14, -4
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5832              		.loc 1 4939 6 view .LVU1604
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5833              		.loc 1 4939 11 is_stmt 0 view .LVU1605
 5834 005a F26C     		ldr	r2, [r6, #76]
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5835              		.loc 1 4939 29 view .LVU1606
 5836 005c 3A43     		orrs	r2, r2, r7
 5837 005e F264     		str	r2, [r6, #76]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5838              		.loc 1 4940 6 is_stmt 1 view .LVU1607
 5839              	.L460:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5840              		.loc 1 4975 31 view .LVU1608
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5841              		.loc 1 4979 4 view .LVU1609
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5842              		.loc 1 4979 6 is_stmt 0 view .LVU1610
 5843 0060 012B     		cmp	r3, #1
 5844 0062 1BD0     		beq	.L475
 5845 0064 0120     		movs	r0, #1
 5846              	.LVL379:
 5847              	.L461:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5848              		.loc 1 5012 30 is_stmt 1 view .LVU1611
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5849              		.loc 1 5016 3 view .LVU1612
 5850              	.LBB213:
 5851              	.LBI213:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5852              		.loc 2 227 30 view .LVU1613
 5853              	.LBB214:
 5854              		.loc 2 229 2 view .LVU1614
 5855              		.syntax unified
 5856              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5857 0066 88F31188 			msr basepri, r8	
 5858              	@ 0 "" 2
 5859              		.thumb
 5860              		.syntax unified
 5861              	.LBE214:
 5862              	.LBE213:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5863              		.loc 1 5018 3 view .LVU1615
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5864              		.loc 1 5019 2 is_stmt 0 view .LVU1616
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 226


 5865 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5866              	.LVL380:
 5867              	.L458:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5868              		.loc 1 4943 6 is_stmt 1 view .LVU1617
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5869              		.loc 1 4943 13 is_stmt 0 view .LVU1618
 5870 006e F26C     		ldr	r2, [r6, #76]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5871              		.loc 1 4943 32 view .LVU1619
 5872 0070 0132     		adds	r2, r2, #1
 5873 0072 F264     		str	r2, [r6, #76]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5874              		.loc 1 4944 6 is_stmt 1 view .LVU1620
 5875 0074 F4E7     		b	.L460
 5876              	.L457:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5877              		.loc 1 4947 6 view .LVU1621
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5878              		.loc 1 4947 29 is_stmt 0 view .LVU1622
 5879 0076 F764     		str	r7, [r6, #76]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5880              		.loc 1 4948 6 is_stmt 1 view .LVU1623
 5881 0078 F2E7     		b	.L460
 5882              	.L455:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5883              		.loc 1 4951 6 view .LVU1624
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5884              		.loc 1 4951 8 is_stmt 0 view .LVU1625
 5885 007a 022B     		cmp	r3, #2
 5886 007c 44D0     		beq	.L468
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5887              		.loc 1 4953 7 is_stmt 1 view .LVU1626
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5888              		.loc 1 4953 30 is_stmt 0 view .LVU1627
 5889 007e F764     		str	r7, [r6, #76]
 5890 0080 EEE7     		b	.L460
 5891              	.L454:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5892              		.loc 1 4971 6 is_stmt 1 view .LVU1628
 5893 0082 F26C     		ldr	r2, [r6, #76]
 5894 0084 B2F1FF3F 		cmp	r2, #-1
 5895 0088 EAD0     		beq	.L460
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5896              		.loc 1 4971 6 discriminator 1 view .LVU1629
 5897              	.LBB215:
 5898              	.LBI215:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5899              		.loc 2 191 30 view .LVU1630
 5900              	.LBB216:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5901              		.loc 2 193 1 view .LVU1631
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5902              		.loc 2 195 2 view .LVU1632
 5903              		.syntax unified
 5904              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5905 008a 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 227


 5906 008e 83F31188 		msr basepri, r3											
 5907 0092 BFF36F8F 		isb														
 5908 0096 BFF34F8F 		dsb														
 5909              	
 5910              	@ 0 "" 2
 5911              	.LVL381:
 5912              		.thumb
 5913              		.syntax unified
 5914              	.L462:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5915              		.loc 2 195 2 is_stmt 0 view .LVU1633
 5916              	.LBE216:
 5917              	.LBE215:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5918              		.loc 1 4971 6 is_stmt 1 discriminator 3 view .LVU1634
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5919              		.loc 1 4971 6 discriminator 3 view .LVU1635
 5920 009a FEE7     		b	.L462
 5921              	.LVL382:
 5922              	.L475:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5923              		.loc 1 4982 5 view .LVU1636
 5924 009c B36A     		ldr	r3, [r6, #40]
 5925              	.LVL383:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5926              		.loc 1 4982 5 is_stmt 0 view .LVU1637
 5927 009e 43B1     		cbz	r3, .L463
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5928              		.loc 1 4982 5 is_stmt 1 discriminator 1 view .LVU1638
 5929              	.LBB217:
 5930              	.LBI217:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5931              		.loc 2 191 30 view .LVU1639
 5932              	.LBB218:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5933              		.loc 2 193 1 view .LVU1640
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5934              		.loc 2 195 2 view .LVU1641
 5935              		.syntax unified
 5936              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5937 00a0 4FF05003 			mov r3, #80												
 5938 00a4 83F31188 		msr basepri, r3											
 5939 00a8 BFF36F8F 		isb														
 5940 00ac BFF34F8F 		dsb														
 5941              	
 5942              	@ 0 "" 2
 5943              		.thumb
 5944              		.syntax unified
 5945              	.L464:
 5946              	.LBE218:
 5947              	.LBE217:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5948              		.loc 1 4982 5 discriminator 3 view .LVU1642
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5949              		.loc 1 4982 5 discriminator 3 view .LVU1643
 5950 00b0 FEE7     		b	.L464
 5951              	.L463:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 228


4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5952              		.loc 1 4982 82 discriminator 2 view .LVU1644
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5953              		.loc 1 4984 5 view .LVU1645
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5954              		.loc 1 4984 30 is_stmt 0 view .LVU1646
 5955 00b2 174B     		ldr	r3, .L476
 5956 00b4 1B68     		ldr	r3, [r3]
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5957              		.loc 1 4984 7 view .LVU1647
 5958 00b6 0BBB     		cbnz	r3, .L465
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5959              		.loc 1 4986 6 is_stmt 1 view .LVU1648
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5960              		.loc 1 4986 15 is_stmt 0 view .LVU1649
 5961 00b8 341D     		adds	r4, r6, #4
 5962 00ba 2046     		mov	r0, r4
 5963 00bc FFF7FEFF 		bl	uxListRemove
 5964              	.LVL384:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5965              		.loc 1 4987 6 is_stmt 1 view .LVU1650
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5966              		.loc 1 4987 6 view .LVU1651
 5967 00c0 F06A     		ldr	r0, [r6, #44]
 5968 00c2 0123     		movs	r3, #1
 5969 00c4 8340     		lsls	r3, r3, r0
 5970 00c6 134A     		ldr	r2, .L476+4
 5971 00c8 1168     		ldr	r1, [r2]
 5972 00ca 0B43     		orrs	r3, r3, r1
 5973 00cc 1360     		str	r3, [r2]
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5974              		.loc 1 4987 6 view .LVU1652
 5975 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 5976 00d2 2146     		mov	r1, r4
 5977 00d4 104B     		ldr	r3, .L476+8
 5978 00d6 03EB8000 		add	r0, r3, r0, lsl #2
 5979 00da FFF7FEFF 		bl	vListInsertEnd
 5980              	.LVL385:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5981              		.loc 1 4987 36 discriminator 1 view .LVU1653
 5982              	.L466:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5983              		.loc 1 4996 5 view .LVU1654
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5984              		.loc 1 4996 14 is_stmt 0 view .LVU1655
 5985 00de F26A     		ldr	r2, [r6, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5986              		.loc 1 4996 41 view .LVU1656
 5987 00e0 0E4B     		ldr	r3, .L476+12
 5988 00e2 1B68     		ldr	r3, [r3]
 5989 00e4 DB6A     		ldr	r3, [r3, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5990              		.loc 1 4996 7 view .LVU1657
 5991 00e6 9A42     		cmp	r2, r3
 5992 00e8 10D9     		bls	.L470
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5993              		.loc 1 5000 6 is_stmt 1 view .LVU1658
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 229


5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5994              		.loc 1 5000 8 is_stmt 0 view .LVU1659
 5995 00ea 069B     		ldr	r3, [sp, #24]
 5996 00ec 13B1     		cbz	r3, .L467
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5997              		.loc 1 5002 7 is_stmt 1 view .LVU1660
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5998              		.loc 1 5002 34 is_stmt 0 view .LVU1661
 5999 00ee 0123     		movs	r3, #1
 6000 00f0 069A     		ldr	r2, [sp, #24]
 6001 00f2 1360     		str	r3, [r2]
 6002              	.L467:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6003              		.loc 1 5008 6 is_stmt 1 view .LVU1662
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6004              		.loc 1 5008 20 is_stmt 0 view .LVU1663
 6005 00f4 0120     		movs	r0, #1
 6006 00f6 0A4B     		ldr	r3, .L476+16
 6007 00f8 1860     		str	r0, [r3]
 6008 00fa B4E7     		b	.L461
 6009              	.L465:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6010              		.loc 1 4993 6 is_stmt 1 view .LVU1664
 6011 00fc 06F11801 		add	r1, r6, #24
 6012 0100 0848     		ldr	r0, .L476+20
 6013 0102 FFF7FEFF 		bl	vListInsertEnd
 6014              	.LVL386:
 6015 0106 EAE7     		b	.L466
 6016              	.LVL387:
 6017              	.L468:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6018              		.loc 1 4958 15 is_stmt 0 view .LVU1665
 6019 0108 0020     		movs	r0, #0
 6020 010a ACE7     		b	.L461
 6021              	.LVL388:
 6022              	.L470:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6023              		.loc 1 4958 15 view .LVU1666
 6024 010c 0120     		movs	r0, #1
 6025 010e AAE7     		b	.L461
 6026              	.L477:
 6027              		.align	2
 6028              	.L476:
 6029 0110 00000000 		.word	uxSchedulerSuspended
 6030 0114 00000000 		.word	uxTopReadyPriority
 6031 0118 00000000 		.word	pxReadyTasksLists
 6032 011c 00000000 		.word	pxCurrentTCB
 6033 0120 00000000 		.word	xYieldPending
 6034 0124 00000000 		.word	xPendingReadyList
 6035              		.cfi_endproc
 6036              	.LFE52:
 6038              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6039              		.align	1
 6040              		.global	vTaskNotifyGiveFromISR
 6041              		.syntax unified
 6042              		.thumb
 6043              		.thumb_func
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 230


 6045              	vTaskNotifyGiveFromISR:
 6046              	.LVL389:
 6047              	.LFB53:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6048              		.loc 1 5027 2 is_stmt 1 view -0
 6049              		.cfi_startproc
 6050              		@ args = 0, pretend = 0, frame = 0
 6051              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6052              		.loc 1 5027 2 is_stmt 0 view .LVU1668
 6053 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6054              		.cfi_def_cfa_offset 24
 6055              		.cfi_offset 3, -24
 6056              		.cfi_offset 4, -20
 6057              		.cfi_offset 5, -16
 6058              		.cfi_offset 6, -12
 6059              		.cfi_offset 7, -8
 6060              		.cfi_offset 14, -4
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6061              		.loc 1 5028 2 is_stmt 1 view .LVU1669
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6062              		.loc 1 5029 2 view .LVU1670
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6063              		.loc 1 5030 2 view .LVU1671
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6064              		.loc 1 5032 3 view .LVU1672
 6065 0002 D8B1     		cbz	r0, .L488
 6066 0004 0D46     		mov	r5, r1
 6067 0006 0446     		mov	r4, r0
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6068              		.loc 1 5032 32 discriminator 2 view .LVU1673
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6069              		.loc 1 5050 3 view .LVU1674
 6070 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6071              	.LVL390:
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6072              		.loc 1 5052 3 view .LVU1675
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6073              		.loc 1 5054 3 view .LVU1676
 6074              	.LBB219:
 6075              	.LBI219:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6076              		.loc 2 207 34 view .LVU1677
 6077              	.LBB220:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6078              		.loc 2 209 1 view .LVU1678
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6079              		.loc 2 211 2 view .LVU1679
 6080              		.syntax unified
 6081              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6082 000c EFF31183 			mrs r3, basepri											
 6083 0010 4FF05002 		mov r2, #80												
 6084 0014 82F31188 		msr basepri, r2											
 6085 0018 BFF36F8F 		isb														
 6086 001c BFF34F8F 		dsb														
 6087              	
 6088              	@ 0 "" 2
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 231


 6089              		.thumb
 6090              		.syntax unified
 6091 0020 1E46     		mov	r6, r3
 6092              	.LVL391:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6093              		.loc 2 223 2 view .LVU1680
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6094              		.loc 2 223 2 is_stmt 0 view .LVU1681
 6095              	.LBE220:
 6096              	.LBE219:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6097              		.loc 1 5056 4 is_stmt 1 view .LVU1682
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6098              		.loc 1 5056 26 is_stmt 0 view .LVU1683
 6099 0022 94F85020 		ldrb	r2, [r4, #80]	@ zero_extendqisi2
 6100              	.LVL392:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6101              		.loc 1 5057 4 is_stmt 1 view .LVU1684
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6102              		.loc 1 5057 25 is_stmt 0 view .LVU1685
 6103 0026 0223     		movs	r3, #2
 6104              	.LVL393:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6105              		.loc 1 5057 25 view .LVU1686
 6106 0028 84F85030 		strb	r3, [r4, #80]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6107              		.loc 1 5061 4 is_stmt 1 view .LVU1687
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6108              		.loc 1 5061 11 is_stmt 0 view .LVU1688
 6109 002c E36C     		ldr	r3, [r4, #76]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6110              		.loc 1 5061 30 view .LVU1689
 6111 002e 0133     		adds	r3, r3, #1
 6112 0030 E364     		str	r3, [r4, #76]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6113              		.loc 1 5063 36 is_stmt 1 view .LVU1690
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6114              		.loc 1 5067 4 view .LVU1691
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6115              		.loc 1 5067 6 is_stmt 0 view .LVU1692
 6116 0032 012A     		cmp	r2, #1
 6117 0034 0BD0     		beq	.L489
 6118              	.LVL394:
 6119              	.L481:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6120              		.loc 1 5100 30 is_stmt 1 view .LVU1693
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6121              		.loc 1 5104 3 view .LVU1694
 6122              	.LBB221:
 6123              	.LBI221:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6124              		.loc 2 227 30 view .LVU1695
 6125              	.LBB222:
 6126              		.loc 2 229 2 view .LVU1696
 6127              		.syntax unified
 6128              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6129 0036 86F31188 			msr basepri, r6	
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 232


 6130              	@ 0 "" 2
 6131              		.thumb
 6132              		.syntax unified
 6133              	.LBE222:
 6134              	.LBE221:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6135              		.loc 1 5105 2 is_stmt 0 view .LVU1697
 6136 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6137              	.LVL395:
 6138              	.L488:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6139              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1698
 6140              	.LBB223:
 6141              	.LBI223:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6142              		.loc 2 191 30 view .LVU1699
 6143              	.LBB224:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6144              		.loc 2 193 1 view .LVU1700
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6145              		.loc 2 195 2 view .LVU1701
 6146              		.syntax unified
 6147              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6148 003c 4FF05003 			mov r3, #80												
 6149 0040 83F31188 		msr basepri, r3											
 6150 0044 BFF36F8F 		isb														
 6151 0048 BFF34F8F 		dsb														
 6152              	
 6153              	@ 0 "" 2
 6154              		.thumb
 6155              		.syntax unified
 6156              	.L480:
 6157              	.LBE224:
 6158              	.LBE223:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6159              		.loc 1 5032 3 discriminator 3 view .LVU1702
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6160              		.loc 1 5032 3 discriminator 3 view .LVU1703
 6161 004c FEE7     		b	.L480
 6162              	.LVL396:
 6163              	.L489:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6164              		.loc 1 5070 5 view .LVU1704
 6165 004e A36A     		ldr	r3, [r4, #40]
 6166 0050 43B1     		cbz	r3, .L482
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6167              		.loc 1 5070 5 discriminator 1 view .LVU1705
 6168              	.LBB225:
 6169              	.LBI225:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6170              		.loc 2 191 30 view .LVU1706
 6171              	.LBB226:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6172              		.loc 2 193 1 view .LVU1707
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6173              		.loc 2 195 2 view .LVU1708
 6174              		.syntax unified
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 233


 6175              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6176 0052 4FF05003 			mov r3, #80												
 6177 0056 83F31188 		msr basepri, r3											
 6178 005a BFF36F8F 		isb														
 6179 005e BFF34F8F 		dsb														
 6180              	
 6181              	@ 0 "" 2
 6182              		.thumb
 6183              		.syntax unified
 6184              	.L483:
 6185              	.LBE226:
 6186              	.LBE225:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6187              		.loc 1 5070 5 discriminator 3 view .LVU1709
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6188              		.loc 1 5070 5 discriminator 3 view .LVU1710
 6189 0062 FEE7     		b	.L483
 6190              	.L482:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6191              		.loc 1 5070 82 discriminator 2 view .LVU1711
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6192              		.loc 1 5072 5 view .LVU1712
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6193              		.loc 1 5072 30 is_stmt 0 view .LVU1713
 6194 0064 144B     		ldr	r3, .L490
 6195 0066 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6196              		.loc 1 5072 7 view .LVU1714
 6197 0068 FBB9     		cbnz	r3, .L484
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6198              		.loc 1 5074 6 is_stmt 1 view .LVU1715
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6199              		.loc 1 5074 15 is_stmt 0 view .LVU1716
 6200 006a 271D     		adds	r7, r4, #4
 6201 006c 3846     		mov	r0, r7
 6202 006e FFF7FEFF 		bl	uxListRemove
 6203              	.LVL397:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6204              		.loc 1 5075 6 is_stmt 1 view .LVU1717
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6205              		.loc 1 5075 6 view .LVU1718
 6206 0072 E06A     		ldr	r0, [r4, #44]
 6207 0074 0123     		movs	r3, #1
 6208 0076 8340     		lsls	r3, r3, r0
 6209 0078 104A     		ldr	r2, .L490+4
 6210 007a 1168     		ldr	r1, [r2]
 6211 007c 0B43     		orrs	r3, r3, r1
 6212 007e 1360     		str	r3, [r2]
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6213              		.loc 1 5075 6 view .LVU1719
 6214 0080 00EB8000 		add	r0, r0, r0, lsl #2
 6215 0084 3946     		mov	r1, r7
 6216 0086 0E4B     		ldr	r3, .L490+8
 6217 0088 03EB8000 		add	r0, r3, r0, lsl #2
 6218 008c FFF7FEFF 		bl	vListInsertEnd
 6219              	.LVL398:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 234


 6220              		.loc 1 5075 36 discriminator 1 view .LVU1720
 6221              	.L485:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6222              		.loc 1 5084 5 view .LVU1721
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6223              		.loc 1 5084 14 is_stmt 0 view .LVU1722
 6224 0090 E26A     		ldr	r2, [r4, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6225              		.loc 1 5084 41 view .LVU1723
 6226 0092 0C4B     		ldr	r3, .L490+12
 6227 0094 1B68     		ldr	r3, [r3]
 6228 0096 DB6A     		ldr	r3, [r3, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6229              		.loc 1 5084 7 view .LVU1724
 6230 0098 9A42     		cmp	r2, r3
 6231 009a CCD9     		bls	.L481
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6232              		.loc 1 5088 6 is_stmt 1 view .LVU1725
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6233              		.loc 1 5088 8 is_stmt 0 view .LVU1726
 6234 009c 0DB1     		cbz	r5, .L486
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6235              		.loc 1 5090 7 is_stmt 1 view .LVU1727
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6236              		.loc 1 5090 34 is_stmt 0 view .LVU1728
 6237 009e 0123     		movs	r3, #1
 6238 00a0 2B60     		str	r3, [r5]
 6239              	.L486:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6240              		.loc 1 5096 6 is_stmt 1 view .LVU1729
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6241              		.loc 1 5096 20 is_stmt 0 view .LVU1730
 6242 00a2 094B     		ldr	r3, .L490+16
 6243 00a4 0122     		movs	r2, #1
 6244 00a6 1A60     		str	r2, [r3]
 6245 00a8 C5E7     		b	.L481
 6246              	.LVL399:
 6247              	.L484:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6248              		.loc 1 5081 6 is_stmt 1 view .LVU1731
 6249 00aa 04F11801 		add	r1, r4, #24
 6250 00ae 0748     		ldr	r0, .L490+20
 6251 00b0 FFF7FEFF 		bl	vListInsertEnd
 6252              	.LVL400:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6253              		.loc 1 5081 6 is_stmt 0 view .LVU1732
 6254 00b4 ECE7     		b	.L485
 6255              	.L491:
 6256 00b6 00BF     		.align	2
 6257              	.L490:
 6258 00b8 00000000 		.word	uxSchedulerSuspended
 6259 00bc 00000000 		.word	uxTopReadyPriority
 6260 00c0 00000000 		.word	pxReadyTasksLists
 6261 00c4 00000000 		.word	pxCurrentTCB
 6262 00c8 00000000 		.word	xYieldPending
 6263 00cc 00000000 		.word	xPendingReadyList
 6264              		.cfi_endproc
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 235


 6265              	.LFE53:
 6267              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6268              		.align	1
 6269              		.global	xTaskNotifyStateClear
 6270              		.syntax unified
 6271              		.thumb
 6272              		.thumb_func
 6274              	xTaskNotifyStateClear:
 6275              	.LVL401:
 6276              	.LFB54:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6277              		.loc 1 5113 2 is_stmt 1 view -0
 6278              		.cfi_startproc
 6279              		@ args = 0, pretend = 0, frame = 0
 6280              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6281              		.loc 1 5113 2 is_stmt 0 view .LVU1734
 6282 0000 10B5     		push	{r4, lr}
 6283              		.cfi_def_cfa_offset 8
 6284              		.cfi_offset 4, -8
 6285              		.cfi_offset 14, -4
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6286              		.loc 1 5114 2 is_stmt 1 view .LVU1735
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6287              		.loc 1 5115 2 view .LVU1736
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6288              		.loc 1 5119 3 view .LVU1737
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6289              		.loc 1 5119 11 is_stmt 0 view .LVU1738
 6290 0002 0446     		mov	r4, r0
 6291 0004 50B1     		cbz	r0, .L497
 6292              	.LVL402:
 6293              	.L493:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6294              		.loc 1 5121 3 is_stmt 1 view .LVU1739
 6295 0006 FFF7FEFF 		bl	vPortEnterCritical
 6296              	.LVL403:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6297              		.loc 1 5123 4 view .LVU1740
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6298              		.loc 1 5123 13 is_stmt 0 view .LVU1741
 6299 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6300              		.loc 1 5123 6 view .LVU1742
 6301 000e 022B     		cmp	r3, #2
 6302 0010 07D0     		beq	.L498
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6303              		.loc 1 5130 13 view .LVU1743
 6304 0012 0024     		movs	r4, #0
 6305              	.LVL404:
 6306              	.L494:
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6307              		.loc 1 5133 3 is_stmt 1 view .LVU1744
 6308 0014 FFF7FEFF 		bl	vPortExitCritical
 6309              	.LVL405:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6310              		.loc 1 5135 3 view .LVU1745
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 236


5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6311              		.loc 1 5136 2 is_stmt 0 view .LVU1746
 6312 0018 2046     		mov	r0, r4
 6313 001a 10BD     		pop	{r4, pc}
 6314              	.LVL406:
 6315              	.L497:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6316              		.loc 1 5119 11 discriminator 1 view .LVU1747
 6317 001c 034B     		ldr	r3, .L499
 6318 001e 1C68     		ldr	r4, [r3]
 6319              	.LVL407:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6320              		.loc 1 5119 11 discriminator 1 view .LVU1748
 6321 0020 F1E7     		b	.L493
 6322              	.LVL408:
 6323              	.L498:
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6324              		.loc 1 5125 5 is_stmt 1 view .LVU1749
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6325              		.loc 1 5125 26 is_stmt 0 view .LVU1750
 6326 0022 0023     		movs	r3, #0
 6327 0024 84F85030 		strb	r3, [r4, #80]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6328              		.loc 1 5126 5 is_stmt 1 view .LVU1751
 6329              	.LVL409:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6330              		.loc 1 5126 13 is_stmt 0 view .LVU1752
 6331 0028 0124     		movs	r4, #1
 6332              	.LVL410:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6333              		.loc 1 5126 13 view .LVU1753
 6334 002a F3E7     		b	.L494
 6335              	.L500:
 6336              		.align	2
 6337              	.L499:
 6338 002c 00000000 		.word	pxCurrentTCB
 6339              		.cfi_endproc
 6340              	.LFE54:
 6342              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 6343              		.align	1
 6344              		.global	ulTaskNotifyValueClear
 6345              		.syntax unified
 6346              		.thumb
 6347              		.thumb_func
 6349              	ulTaskNotifyValueClear:
 6350              	.LVL411:
 6351              	.LFB55:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6352              		.loc 1 5144 2 is_stmt 1 view -0
 6353              		.cfi_startproc
 6354              		@ args = 0, pretend = 0, frame = 0
 6355              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6356              		.loc 1 5144 2 is_stmt 0 view .LVU1755
 6357 0000 70B5     		push	{r4, r5, r6, lr}
 6358              		.cfi_def_cfa_offset 16
 6359              		.cfi_offset 4, -16
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 237


 6360              		.cfi_offset 5, -12
 6361              		.cfi_offset 6, -8
 6362              		.cfi_offset 14, -4
 6363 0002 0C46     		mov	r4, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6364              		.loc 1 5145 2 is_stmt 1 view .LVU1756
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6365              		.loc 1 5146 2 view .LVU1757
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6366              		.loc 1 5150 3 view .LVU1758
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6367              		.loc 1 5150 11 is_stmt 0 view .LVU1759
 6368 0004 0546     		mov	r5, r0
 6369 0006 60B1     		cbz	r0, .L504
 6370              	.LVL412:
 6371              	.L502:
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6372              		.loc 1 5152 3 is_stmt 1 view .LVU1760
 6373 0008 FFF7FEFF 		bl	vPortEnterCritical
 6374              	.LVL413:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6375              		.loc 1 5156 4 view .LVU1761
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6376              		.loc 1 5156 27 is_stmt 0 view .LVU1762
 6377 000c 064B     		ldr	r3, .L505
 6378 000e 1B68     		ldr	r3, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6379              		.loc 1 5156 13 view .LVU1763
 6380 0010 DE6C     		ldr	r6, [r3, #76]
 6381              	.LVL414:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6382              		.loc 1 5157 4 is_stmt 1 view .LVU1764
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6383              		.loc 1 5157 9 is_stmt 0 view .LVU1765
 6384 0012 EB6C     		ldr	r3, [r5, #76]
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6385              		.loc 1 5157 27 view .LVU1766
 6386 0014 23EA0403 		bic	r3, r3, r4
 6387 0018 EB64     		str	r3, [r5, #76]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6388              		.loc 1 5159 3 is_stmt 1 view .LVU1767
 6389 001a FFF7FEFF 		bl	vPortExitCritical
 6390              	.LVL415:
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6391              		.loc 1 5161 3 view .LVU1768
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6392              		.loc 1 5162 2 is_stmt 0 view .LVU1769
 6393 001e 3046     		mov	r0, r6
 6394 0020 70BD     		pop	{r4, r5, r6, pc}
 6395              	.LVL416:
 6396              	.L504:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6397              		.loc 1 5150 11 discriminator 1 view .LVU1770
 6398 0022 014B     		ldr	r3, .L505
 6399 0024 1D68     		ldr	r5, [r3]
 6400              	.LVL417:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 238


 6401              		.loc 1 5150 11 discriminator 1 view .LVU1771
 6402 0026 EFE7     		b	.L502
 6403              	.L506:
 6404              		.align	2
 6405              	.L505:
 6406 0028 00000000 		.word	pxCurrentTCB
 6407              		.cfi_endproc
 6408              	.LFE55:
 6410              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6411              		.align	2
 6414              	uxSchedulerSuspended:
 6415 0000 00000000 		.space	4
 6416              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6417              		.align	2
 6420              	xIdleTaskHandle:
 6421 0000 00000000 		.space	4
 6422              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6423              		.align	2
 6426              	xNextTaskUnblockTime:
 6427 0000 00000000 		.space	4
 6428              		.section	.bss.uxTaskNumber,"aw",%nobits
 6429              		.align	2
 6432              	uxTaskNumber:
 6433 0000 00000000 		.space	4
 6434              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6435              		.align	2
 6438              	xNumOfOverflows:
 6439 0000 00000000 		.space	4
 6440              		.section	.bss.xYieldPending,"aw",%nobits
 6441              		.align	2
 6444              	xYieldPending:
 6445 0000 00000000 		.space	4
 6446              		.section	.bss.xPendedTicks,"aw",%nobits
 6447              		.align	2
 6450              	xPendedTicks:
 6451 0000 00000000 		.space	4
 6452              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6453              		.align	2
 6456              	xSchedulerRunning:
 6457 0000 00000000 		.space	4
 6458              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6459              		.align	2
 6462              	uxTopReadyPriority:
 6463 0000 00000000 		.space	4
 6464              		.section	.bss.xTickCount,"aw",%nobits
 6465              		.align	2
 6468              	xTickCount:
 6469 0000 00000000 		.space	4
 6470              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6471              		.align	2
 6474              	uxCurrentNumberOfTasks:
 6475 0000 00000000 		.space	4
 6476              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6477              		.align	2
 6480              	xSuspendedTaskList:
 6481 0000 00000000 		.space	20
 6481      00000000 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 239


 6481      00000000 
 6481      00000000 
 6481      00000000 
 6482              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6483              		.align	2
 6486              	uxDeletedTasksWaitingCleanUp:
 6487 0000 00000000 		.space	4
 6488              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6489              		.align	2
 6492              	xTasksWaitingTermination:
 6493 0000 00000000 		.space	20
 6493      00000000 
 6493      00000000 
 6493      00000000 
 6493      00000000 
 6494              		.section	.bss.xPendingReadyList,"aw",%nobits
 6495              		.align	2
 6498              	xPendingReadyList:
 6499 0000 00000000 		.space	20
 6499      00000000 
 6499      00000000 
 6499      00000000 
 6499      00000000 
 6500              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6501              		.align	2
 6504              	pxOverflowDelayedTaskList:
 6505 0000 00000000 		.space	4
 6506              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6507              		.align	2
 6510              	pxDelayedTaskList:
 6511 0000 00000000 		.space	4
 6512              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6513              		.align	2
 6516              	xDelayedTaskList2:
 6517 0000 00000000 		.space	20
 6517      00000000 
 6517      00000000 
 6517      00000000 
 6517      00000000 
 6518              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6519              		.align	2
 6522              	xDelayedTaskList1:
 6523 0000 00000000 		.space	20
 6523      00000000 
 6523      00000000 
 6523      00000000 
 6523      00000000 
 6524              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6525              		.align	2
 6528              	pxReadyTasksLists:
 6529 0000 00000000 		.space	140
 6529      00000000 
 6529      00000000 
 6529      00000000 
 6529      00000000 
 6530              		.global	pxCurrentTCB
 6531              		.section	.bss.pxCurrentTCB,"aw",%nobits
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 240


 6532              		.align	2
 6535              	pxCurrentTCB:
 6536 0000 00000000 		.space	4
 6537              		.text
 6538              	.Letext0:
 6539              		.file 3 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 6540              		.file 4 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 6541              		.file 5 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 6542              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6543              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6544              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6545              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6546              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 241


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:21     .text.prvTaskIsTaskSuspended:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:26     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:112    .text.prvTaskIsTaskSuspended:00000038 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6480   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6498   .bss.xPendingReadyList:00000000 xPendingReadyList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:118    .text.prvResetNextTaskUnblockTime:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:123    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:166    .text.prvResetNextTaskUnblockTime:00000024 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6510   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6426   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:172    .text.prvInitialiseNewTask:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:177    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:331    .text.prvInitialiseTaskLists:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:336    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:408    .text.prvInitialiseTaskLists:00000048 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6528   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6522   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6516   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6492   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6504   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:420    .text.prvAddNewTaskToReadyList:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:425    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:560    .text.prvAddNewTaskToReadyList:00000090 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6474   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6535   .bss.pxCurrentTCB:00000000 pxCurrentTCB
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6456   .bss.xSchedulerRunning:00000000 xSchedulerRunning
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6432   .bss.uxTaskNumber:00000000 uxTaskNumber
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6462   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:570    .text.prvDeleteTCB:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:575    .text.prvDeleteTCB:00000000 prvDeleteTCB
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:649    .text.prvCheckTasksWaitingTermination:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:654    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:725    .text.prvCheckTasksWaitingTermination:00000040 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6486   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:732    .text.prvIdleTask:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:737    .text.prvIdleTask:00000000 prvIdleTask
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:785    .text.prvIdleTask:00000024 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:790    .text.prvAddCurrentTaskToDelayedList:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:795    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:914    .text.prvAddCurrentTaskToDelayedList:0000007c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6468   .bss.xTickCount:00000000 xTickCount
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:925    .text.xTaskCreateStatic:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:931    .text.xTaskCreateStatic:00000000 xTaskCreateStatic
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1090   .text.xTaskCreate:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1096   .text.xTaskCreate:00000000 xTaskCreate
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1210   .text.vTaskDelete:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1216   .text.vTaskDelete:00000000 vTaskDelete
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1398   .text.vTaskDelete:000000bc $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6414   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1411   .text.uxTaskPriorityGet:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1417   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1462   .text.uxTaskPriorityGet:0000001c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1467   .text.uxTaskPriorityGetFromISR:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1473   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1551   .text.uxTaskPriorityGetFromISR:0000002c $d
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 242


C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1556   .text.vTaskPrioritySet:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1562   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1801   .text.vTaskPrioritySet:000000d8 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1808   .text.vTaskResume:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1814   .text.vTaskResume:00000000 vTaskResume
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1941   .text.vTaskResume:0000007c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1948   .text.xTaskResumeFromISR:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:1954   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2119   .text.xTaskResumeFromISR:00000090 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2128   .rodata.vTaskStartScheduler.str1.4:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2132   .text.vTaskStartScheduler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2138   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2239   .text.vTaskStartScheduler:0000005c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6420   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2249   .text.vTaskEndScheduler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2255   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2297   .text.vTaskEndScheduler:00000020 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2302   .text.vTaskSuspendAll:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2308   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2327   .text.vTaskSuspendAll:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2332   .text.xTaskGetTickCount:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2338   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2359   .text.xTaskGetTickCount:00000008 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2364   .text.xTaskGetTickCountFromISR:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2370   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2398   .text.xTaskGetTickCountFromISR:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2403   .text.uxTaskGetNumberOfTasks:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2409   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2425   .text.uxTaskGetNumberOfTasks:00000008 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2430   .text.pcTaskGetName:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2436   .text.pcTaskGetName:00000000 pcTaskGetName
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2493   .text.pcTaskGetName:00000024 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2498   .text.xTaskIncrementTick:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2504   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2771   .text.xTaskIncrementTick:000000ec $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6438   .bss.xNumOfOverflows:00000000 xNumOfOverflows
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6444   .bss.xYieldPending:00000000 xYieldPending
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6450   .bss.xPendedTicks:00000000 xPendedTicks
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2786   .text.xTaskResumeAll:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:2792   .text.xTaskResumeAll:00000000 xTaskResumeAll
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3023   .text.xTaskResumeAll:000000d8 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3035   .text.vTaskDelay:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3041   .text.vTaskDelay:00000000 vTaskDelay
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3130   .text.vTaskDelay:00000048 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3135   .text.xTaskCatchUpTicks:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3141   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3205   .text.xTaskCatchUpTicks:00000030 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3211   .text.vTaskSwitchContext:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3217   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3360   .text.vTaskSwitchContext:00000084 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3371   .text.vTaskSuspend:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3377   .text.vTaskSuspend:00000000 vTaskSuspend
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3577   .text.vTaskSuspend:000000cc $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3588   .text.vTaskPlaceOnEventList:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3594   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3657   .text.vTaskPlaceOnEventList:0000002c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3662   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 243


C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3668   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3776   .text.vTaskPlaceOnUnorderedEventList:00000050 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3782   .text.xTaskRemoveFromEventList:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3788   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3915   .text.xTaskRemoveFromEventList:00000074 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3925   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:3931   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4060   .text.vTaskRemoveFromUnorderedEventList:00000074 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4069   .text.vTaskSetTimeOutState:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4075   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4140   .text.vTaskSetTimeOutState:00000030 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4146   .text.vTaskInternalSetTimeOutState:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4152   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4175   .text.vTaskInternalSetTimeOutState:00000010 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4181   .text.xTaskCheckForTimeOut:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4187   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4365   .text.xTaskCheckForTimeOut:00000080 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4372   .text.vTaskMissedYield:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4378   .text.vTaskMissedYield:00000000 vTaskMissedYield
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4395   .text.vTaskMissedYield:00000008 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4400   .text.xTaskGetCurrentTaskHandle:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4406   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4425   .text.xTaskGetCurrentTaskHandle:00000008 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4430   .text.xTaskGetSchedulerState:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4436   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4474   .text.xTaskGetSchedulerState:00000018 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4480   .text.xTaskPriorityInherit:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4486   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4649   .text.xTaskPriorityInherit:000000a0 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4656   .text.xTaskPriorityDisinherit:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4662   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4850   .text.xTaskPriorityDisinherit:000000a4 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4857   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:4863   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5053   .text.vTaskPriorityDisinheritAfterTimeout:000000a8 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5060   .text.uxTaskResetEventItemValue:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5066   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5093   .text.uxTaskResetEventItemValue:00000014 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5098   .text.pvTaskIncrementMutexHeldCount:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5104   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5135   .text.pvTaskIncrementMutexHeldCount:00000018 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5140   .text.ulTaskNotifyTake:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5146   .text.ulTaskNotifyTake:00000000 ulTaskNotifyTake
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5267   .text.ulTaskNotifyTake:00000074 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5272   .text.xTaskNotifyWait:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5278   .text.xTaskNotifyWait:00000000 xTaskNotifyWait
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5417   .text.xTaskNotifyWait:00000090 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5422   .text.xTaskGenericNotify:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5428   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5483   .text.xTaskGenericNotify:0000002a $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5691   .text.xTaskGenericNotify:000000ec $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5698   .text.xTaskGenericNotifyFromISR:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5704   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5783   .text.xTaskGenericNotifyFromISR:00000042 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6029   .text.xTaskGenericNotifyFromISR:00000110 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6039   .text.vTaskNotifyGiveFromISR:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6045   .text.vTaskNotifyGiveFromISR:00000000 vTaskNotifyGiveFromISR
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s 			page 244


C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6258   .text.vTaskNotifyGiveFromISR:000000b8 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6268   .text.xTaskNotifyStateClear:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6274   .text.xTaskNotifyStateClear:00000000 xTaskNotifyStateClear
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6338   .text.xTaskNotifyStateClear:0000002c $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6343   .text.ulTaskNotifyValueClear:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6349   .text.ulTaskNotifyValueClear:00000000 ulTaskNotifyValueClear
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6406   .text.ulTaskNotifyValueClear:00000028 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6411   .bss.uxSchedulerSuspended:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6417   .bss.xIdleTaskHandle:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6423   .bss.xNextTaskUnblockTime:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6429   .bss.uxTaskNumber:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6435   .bss.xNumOfOverflows:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6441   .bss.xYieldPending:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6447   .bss.xPendedTicks:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6453   .bss.xSchedulerRunning:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6459   .bss.uxTopReadyPriority:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6465   .bss.xTickCount:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6471   .bss.uxCurrentNumberOfTasks:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6477   .bss.xSuspendedTaskList:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6483   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6489   .bss.xTasksWaitingTermination:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6495   .bss.xPendingReadyList:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6501   .bss.pxOverflowDelayedTaskList:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6507   .bss.pxDelayedTaskList:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6513   .bss.xDelayedTaskList2:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6519   .bss.xDelayedTaskList1:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6525   .bss.pxReadyTasksLists:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:6532   .bss.pxCurrentTCB:00000000 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5489   .text.xTaskGenericNotify:0000002f $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5489   .text.xTaskGenericNotify:00000030 $t
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5789   .text.xTaskGenericNotifyFromISR:00000047 $d
C:\Users\Rick\AppData\Local\Temp\ccY8m3tr.s:5789   .text.xTaskGenericNotifyFromISR:00000048 $t

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
