ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32f4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB239:
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc1;
  59:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc2;
  60:Core/Src/stm32f4xx_it.c **** extern ADC_HandleTypeDef hadc3;
  61:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim3;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_tx;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart3_rx;
  65:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart3;
  66:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim6;
  67:Core/Src/stm32f4xx_it.c **** 
  68:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  71:Core/Src/stm32f4xx_it.c **** 
  72:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  73:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  74:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Core/Src/stm32f4xx_it.c **** /**
  76:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  77:Core/Src/stm32f4xx_it.c ****   */
  78:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  79:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 79 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  80:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 3


  81:Core/Src/stm32f4xx_it.c **** 
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  83:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  84:Core/Src/stm32f4xx_it.c ****    while (1)
  36              		.loc 1 84 4 view .LVU1
  85:Core/Src/stm32f4xx_it.c ****   {
  86:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 86 3 view .LVU2
  84:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 84 10 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE239:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB240:
  87:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  88:Core/Src/stm32f4xx_it.c **** }
  89:Core/Src/stm32f4xx_it.c **** 
  90:Core/Src/stm32f4xx_it.c **** /**
  91:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  92:Core/Src/stm32f4xx_it.c ****   */
  93:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  94:Core/Src/stm32f4xx_it.c **** {
  52              		.loc 1 94 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  95:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  96:Core/Src/stm32f4xx_it.c **** 
  97:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c ****   while (1)
  59              		.loc 1 98 3 view .LVU5
  99:Core/Src/stm32f4xx_it.c ****   {
 100:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 101:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 102:Core/Src/stm32f4xx_it.c ****   }
  60              		.loc 1 102 3 view .LVU6
  98:Core/Src/stm32f4xx_it.c ****   {
  61              		.loc 1 98 9 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE240:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 4


  73              	MemManage_Handler:
  74              	.LFB241:
 103:Core/Src/stm32f4xx_it.c **** }
 104:Core/Src/stm32f4xx_it.c **** 
 105:Core/Src/stm32f4xx_it.c **** /**
 106:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 107:Core/Src/stm32f4xx_it.c ****   */
 108:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 109:Core/Src/stm32f4xx_it.c **** {
  75              		.loc 1 109 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 110:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f4xx_it.c **** 
 112:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c ****   while (1)
  82              		.loc 1 113 3 view .LVU9
 114:Core/Src/stm32f4xx_it.c ****   {
 115:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 116:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 117:Core/Src/stm32f4xx_it.c ****   }
  83              		.loc 1 117 3 view .LVU10
 113:Core/Src/stm32f4xx_it.c ****   {
  84              		.loc 1 113 9 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE241:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB242:
 118:Core/Src/stm32f4xx_it.c **** }
 119:Core/Src/stm32f4xx_it.c **** 
 120:Core/Src/stm32f4xx_it.c **** /**
 121:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 122:Core/Src/stm32f4xx_it.c ****   */
 123:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 124:Core/Src/stm32f4xx_it.c **** {
  98              		.loc 1 124 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 125:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 126:Core/Src/stm32f4xx_it.c **** 
 127:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c ****   while (1)
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 5


 105              		.loc 1 128 3 view .LVU13
 129:Core/Src/stm32f4xx_it.c ****   {
 130:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 131:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 132:Core/Src/stm32f4xx_it.c ****   }
 106              		.loc 1 132 3 view .LVU14
 128:Core/Src/stm32f4xx_it.c ****   {
 107              		.loc 1 128 9 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE242:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB243:
 133:Core/Src/stm32f4xx_it.c **** }
 134:Core/Src/stm32f4xx_it.c **** 
 135:Core/Src/stm32f4xx_it.c **** /**
 136:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 137:Core/Src/stm32f4xx_it.c ****   */
 138:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 139:Core/Src/stm32f4xx_it.c **** {
 121              		.loc 1 139 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 140:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 141:Core/Src/stm32f4xx_it.c **** 
 142:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c ****   while (1)
 128              		.loc 1 143 3 view .LVU17
 144:Core/Src/stm32f4xx_it.c ****   {
 145:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 146:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 147:Core/Src/stm32f4xx_it.c ****   }
 129              		.loc 1 147 3 view .LVU18
 143:Core/Src/stm32f4xx_it.c ****   {
 130              		.loc 1 143 9 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE243:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	SVC_Handler:
 143              	.LFB244:
 148:Core/Src/stm32f4xx_it.c **** }
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 6


 149:Core/Src/stm32f4xx_it.c **** 
 150:Core/Src/stm32f4xx_it.c **** /**
 151:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 152:Core/Src/stm32f4xx_it.c ****   */
 153:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void)
 154:Core/Src/stm32f4xx_it.c **** {
 144              		.loc 1 154 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 155:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 156:Core/Src/stm32f4xx_it.c **** 
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 158:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 159:Core/Src/stm32f4xx_it.c **** 
 160:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 161:Core/Src/stm32f4xx_it.c **** }
 149              		.loc 1 161 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE244:
 154              		.section	.text.DebugMon_Handler,"ax",%progbits
 155              		.align	1
 156              		.global	DebugMon_Handler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	DebugMon_Handler:
 162              	.LFB245:
 162:Core/Src/stm32f4xx_it.c **** 
 163:Core/Src/stm32f4xx_it.c **** /**
 164:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 165:Core/Src/stm32f4xx_it.c ****   */
 166:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 167:Core/Src/stm32f4xx_it.c **** {
 163              		.loc 1 167 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 169:Core/Src/stm32f4xx_it.c **** 
 170:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 171:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 172:Core/Src/stm32f4xx_it.c **** 
 173:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 174:Core/Src/stm32f4xx_it.c **** }
 168              		.loc 1 174 1 view .LVU23
 169 0000 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE245:
 173              		.section	.text.PendSV_Handler,"ax",%progbits
 174              		.align	1
 175              		.global	PendSV_Handler
 176              		.syntax unified
 177              		.thumb
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 7


 178              		.thumb_func
 180              	PendSV_Handler:
 181              	.LFB246:
 175:Core/Src/stm32f4xx_it.c **** 
 176:Core/Src/stm32f4xx_it.c **** /**
 177:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
 178:Core/Src/stm32f4xx_it.c ****   */
 179:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 180:Core/Src/stm32f4xx_it.c **** {
 182              		.loc 1 180 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 184:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 187:Core/Src/stm32f4xx_it.c **** }
 187              		.loc 1 187 1 view .LVU25
 188 0000 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE246:
 192              		.section	.text.SysTick_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	SysTick_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 199              	SysTick_Handler:
 200              	.LFB247:
 188:Core/Src/stm32f4xx_it.c **** 
 189:Core/Src/stm32f4xx_it.c **** /**
 190:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
 191:Core/Src/stm32f4xx_it.c ****   */
 192:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 193:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 193 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 194:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 195:Core/Src/stm32f4xx_it.c **** 
 196:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 197:Core/Src/stm32f4xx_it.c **** 
 198:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 199:Core/Src/stm32f4xx_it.c **** 
 200:Core/Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 201:Core/Src/stm32f4xx_it.c **** }
 206              		.loc 1 201 1 view .LVU27
 207 0000 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE247:
 211              		.section	.text.DMA1_Stream1_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 8


 212              		.align	1
 213              		.global	DMA1_Stream1_IRQHandler
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	DMA1_Stream1_IRQHandler:
 219              	.LFB248:
 202:Core/Src/stm32f4xx_it.c **** 
 203:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 204:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 205:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 206:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 207:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 208:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 209:Core/Src/stm32f4xx_it.c **** 
 210:Core/Src/stm32f4xx_it.c **** /**
 211:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream1 global interrupt.
 212:Core/Src/stm32f4xx_it.c ****   */
 213:Core/Src/stm32f4xx_it.c **** void DMA1_Stream1_IRQHandler(void)
 214:Core/Src/stm32f4xx_it.c **** {
 220              		.loc 1 214 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 3, -8
 227              		.cfi_offset 14, -4
 215:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */
 216:Core/Src/stm32f4xx_it.c **** 
 217:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 0 */
 218:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_rx);
 228              		.loc 1 218 3 view .LVU29
 229 0002 0248     		ldr	r0, .L17
 230 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 231              	.LVL0:
 219:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */
 220:Core/Src/stm32f4xx_it.c **** 
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream1_IRQn 1 */
 222:Core/Src/stm32f4xx_it.c **** }
 232              		.loc 1 222 1 is_stmt 0 view .LVU30
 233 0008 08BD     		pop	{r3, pc}
 234              	.L18:
 235 000a 00BF     		.align	2
 236              	.L17:
 237 000c 00000000 		.word	hdma_usart3_rx
 238              		.cfi_endproc
 239              	.LFE248:
 241              		.section	.text.DMA1_Stream3_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	DMA1_Stream3_IRQHandler
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	DMA1_Stream3_IRQHandler:
 249              	.LFB249:
 223:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 9


 224:Core/Src/stm32f4xx_it.c **** /**
 225:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream3 global interrupt.
 226:Core/Src/stm32f4xx_it.c ****   */
 227:Core/Src/stm32f4xx_it.c **** void DMA1_Stream3_IRQHandler(void)
 228:Core/Src/stm32f4xx_it.c **** {
 250              		.loc 1 228 1 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254 0000 08B5     		push	{r3, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 3, -8
 257              		.cfi_offset 14, -4
 229:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 0 */
 230:Core/Src/stm32f4xx_it.c **** 
 231:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 0 */
 232:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart3_tx);
 258              		.loc 1 232 3 view .LVU32
 259 0002 0248     		ldr	r0, .L21
 260 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 261              	.LVL1:
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream3_IRQn 1 */
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream3_IRQn 1 */
 236:Core/Src/stm32f4xx_it.c **** }
 262              		.loc 1 236 1 is_stmt 0 view .LVU33
 263 0008 08BD     		pop	{r3, pc}
 264              	.L22:
 265 000a 00BF     		.align	2
 266              	.L21:
 267 000c 00000000 		.word	hdma_usart3_tx
 268              		.cfi_endproc
 269              	.LFE249:
 271              		.section	.text.ADC_IRQHandler,"ax",%progbits
 272              		.align	1
 273              		.global	ADC_IRQHandler
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 278              	ADC_IRQHandler:
 279              	.LFB250:
 237:Core/Src/stm32f4xx_it.c **** 
 238:Core/Src/stm32f4xx_it.c **** /**
 239:Core/Src/stm32f4xx_it.c ****   * @brief This function handles ADC1, ADC2 and ADC3 interrupts.
 240:Core/Src/stm32f4xx_it.c ****   */
 241:Core/Src/stm32f4xx_it.c **** void ADC_IRQHandler(void)
 242:Core/Src/stm32f4xx_it.c **** {
 280              		.loc 1 242 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 08B5     		push	{r3, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 3, -8
 287              		.cfi_offset 14, -4
 243:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 0 */
 244:Core/Src/stm32f4xx_it.c **** 
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 10


 245:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 0 */
 246:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc1);
 288              		.loc 1 246 3 view .LVU35
 289 0002 0548     		ldr	r0, .L25
 290 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 291              	.LVL2:
 247:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc2);
 292              		.loc 1 247 3 view .LVU36
 293 0008 0448     		ldr	r0, .L25+4
 294 000a FFF7FEFF 		bl	HAL_ADC_IRQHandler
 295              	.LVL3:
 248:Core/Src/stm32f4xx_it.c ****   HAL_ADC_IRQHandler(&hadc3);
 296              		.loc 1 248 3 view .LVU37
 297 000e 0448     		ldr	r0, .L25+8
 298 0010 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 299              	.LVL4:
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN ADC_IRQn 1 */
 250:Core/Src/stm32f4xx_it.c **** 
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE END ADC_IRQn 1 */
 252:Core/Src/stm32f4xx_it.c **** }
 300              		.loc 1 252 1 is_stmt 0 view .LVU38
 301 0014 08BD     		pop	{r3, pc}
 302              	.L26:
 303 0016 00BF     		.align	2
 304              	.L25:
 305 0018 00000000 		.word	hadc1
 306 001c 00000000 		.word	hadc2
 307 0020 00000000 		.word	hadc3
 308              		.cfi_endproc
 309              	.LFE250:
 311              		.section	.text.TIM1_BRK_TIM9_IRQHandler,"ax",%progbits
 312              		.align	1
 313              		.global	TIM1_BRK_TIM9_IRQHandler
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 318              	TIM1_BRK_TIM9_IRQHandler:
 319              	.LFB251:
 253:Core/Src/stm32f4xx_it.c **** 
 254:Core/Src/stm32f4xx_it.c **** /**
 255:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
 256:Core/Src/stm32f4xx_it.c ****   */
 257:Core/Src/stm32f4xx_it.c **** void TIM1_BRK_TIM9_IRQHandler(void)
 258:Core/Src/stm32f4xx_it.c **** {
 320              		.loc 1 258 1 is_stmt 1 view -0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 3, -8
 327              		.cfi_offset 14, -4
 259:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */
 260:Core/Src/stm32f4xx_it.c **** 
 261:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
 262:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 328              		.loc 1 262 3 view .LVU40
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 11


 329 0002 0248     		ldr	r0, .L29
 330 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 331              	.LVL5:
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */
 264:Core/Src/stm32f4xx_it.c **** 
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
 266:Core/Src/stm32f4xx_it.c **** }
 332              		.loc 1 266 1 is_stmt 0 view .LVU41
 333 0008 08BD     		pop	{r3, pc}
 334              	.L30:
 335 000a 00BF     		.align	2
 336              	.L29:
 337 000c 00000000 		.word	htim1
 338              		.cfi_endproc
 339              	.LFE251:
 341              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 342              		.align	1
 343              		.global	TIM1_UP_TIM10_IRQHandler
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 348              	TIM1_UP_TIM10_IRQHandler:
 349              	.LFB252:
 267:Core/Src/stm32f4xx_it.c **** 
 268:Core/Src/stm32f4xx_it.c **** /**
 269:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 270:Core/Src/stm32f4xx_it.c ****   */
 271:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 272:Core/Src/stm32f4xx_it.c **** {
 350              		.loc 1 272 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354 0000 08B5     		push	{r3, lr}
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 273:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 274:Core/Src/stm32f4xx_it.c **** 
 275:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 276:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 358              		.loc 1 276 3 view .LVU43
 359 0002 0248     		ldr	r0, .L33
 360 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 361              	.LVL6:
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 278:Core/Src/stm32f4xx_it.c **** 
 279:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 280:Core/Src/stm32f4xx_it.c **** }
 362              		.loc 1 280 1 is_stmt 0 view .LVU44
 363 0008 08BD     		pop	{r3, pc}
 364              	.L34:
 365 000a 00BF     		.align	2
 366              	.L33:
 367 000c 00000000 		.word	htim1
 368              		.cfi_endproc
 369              	.LFE252:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 12


 371              		.section	.text.TIM1_CC_IRQHandler,"ax",%progbits
 372              		.align	1
 373              		.global	TIM1_CC_IRQHandler
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	TIM1_CC_IRQHandler:
 379              	.LFB253:
 281:Core/Src/stm32f4xx_it.c **** 
 282:Core/Src/stm32f4xx_it.c **** /**
 283:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 capture compare interrupt.
 284:Core/Src/stm32f4xx_it.c ****   */
 285:Core/Src/stm32f4xx_it.c **** void TIM1_CC_IRQHandler(void)
 286:Core/Src/stm32f4xx_it.c **** {
 380              		.loc 1 286 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 287:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 0 */
 288:Core/Src/stm32f4xx_it.c **** 
 289:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 0 */
 290:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 388              		.loc 1 290 3 view .LVU46
 389 0002 0248     		ldr	r0, .L37
 390 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 391              	.LVL7:
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_CC_IRQn 1 */
 292:Core/Src/stm32f4xx_it.c **** 
 293:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_CC_IRQn 1 */
 294:Core/Src/stm32f4xx_it.c **** }
 392              		.loc 1 294 1 is_stmt 0 view .LVU47
 393 0008 08BD     		pop	{r3, pc}
 394              	.L38:
 395 000a 00BF     		.align	2
 396              	.L37:
 397 000c 00000000 		.word	htim1
 398              		.cfi_endproc
 399              	.LFE253:
 401              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 402              		.align	1
 403              		.global	TIM3_IRQHandler
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	TIM3_IRQHandler:
 409              	.LFB254:
 295:Core/Src/stm32f4xx_it.c **** 
 296:Core/Src/stm32f4xx_it.c **** /**
 297:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 298:Core/Src/stm32f4xx_it.c ****   */
 299:Core/Src/stm32f4xx_it.c **** void TIM3_IRQHandler(void)
 300:Core/Src/stm32f4xx_it.c **** {
 410              		.loc 1 300 1 is_stmt 1 view -0
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 13


 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 08B5     		push	{r3, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 3, -8
 417              		.cfi_offset 14, -4
 301:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 302:Core/Src/stm32f4xx_it.c **** 
 303:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 304:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 418              		.loc 1 304 3 view .LVU49
 419 0002 0248     		ldr	r0, .L41
 420 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 421              	.LVL8:
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 306:Core/Src/stm32f4xx_it.c **** 
 307:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 308:Core/Src/stm32f4xx_it.c **** }
 422              		.loc 1 308 1 is_stmt 0 view .LVU50
 423 0008 08BD     		pop	{r3, pc}
 424              	.L42:
 425 000a 00BF     		.align	2
 426              	.L41:
 427 000c 00000000 		.word	htim3
 428              		.cfi_endproc
 429              	.LFE254:
 431              		.section	.text.USART3_IRQHandler,"ax",%progbits
 432              		.align	1
 433              		.global	USART3_IRQHandler
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 438              	USART3_IRQHandler:
 439              	.LFB255:
 309:Core/Src/stm32f4xx_it.c **** 
 310:Core/Src/stm32f4xx_it.c **** /**
 311:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART3 global interrupt.
 312:Core/Src/stm32f4xx_it.c ****   */
 313:Core/Src/stm32f4xx_it.c **** void USART3_IRQHandler(void)
 314:Core/Src/stm32f4xx_it.c **** {
 440              		.loc 1 314 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 08B5     		push	{r3, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 3, -8
 447              		.cfi_offset 14, -4
 315:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 0 */
 316:Core/Src/stm32f4xx_it.c **** 
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 0 */
 318:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart3);
 448              		.loc 1 318 3 view .LVU52
 449 0002 0248     		ldr	r0, .L45
 450 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 451              	.LVL9:
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 14


 319:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART3_IRQn 1 */
 320:Core/Src/stm32f4xx_it.c **** 
 321:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART3_IRQn 1 */
 322:Core/Src/stm32f4xx_it.c **** }
 452              		.loc 1 322 1 is_stmt 0 view .LVU53
 453 0008 08BD     		pop	{r3, pc}
 454              	.L46:
 455 000a 00BF     		.align	2
 456              	.L45:
 457 000c 00000000 		.word	huart3
 458              		.cfi_endproc
 459              	.LFE255:
 461              		.section	.text.TIM6_DAC_IRQHandler,"ax",%progbits
 462              		.align	1
 463              		.global	TIM6_DAC_IRQHandler
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 468              	TIM6_DAC_IRQHandler:
 469              	.LFB256:
 323:Core/Src/stm32f4xx_it.c **** 
 324:Core/Src/stm32f4xx_it.c **** /**
 325:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM6 global interrupt and DAC1, DAC2 underrun error interrupts.
 326:Core/Src/stm32f4xx_it.c ****   */
 327:Core/Src/stm32f4xx_it.c **** void TIM6_DAC_IRQHandler(void)
 328:Core/Src/stm32f4xx_it.c **** {
 470              		.loc 1 328 1 is_stmt 1 view -0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474 0000 08B5     		push	{r3, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 3, -8
 477              		.cfi_offset 14, -4
 329:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 0 */
 330:Core/Src/stm32f4xx_it.c **** 
 331:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 0 */
 332:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 478              		.loc 1 332 3 view .LVU55
 479 0002 0248     		ldr	r0, .L49
 480 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 481              	.LVL10:
 333:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM6_DAC_IRQn 1 */
 334:Core/Src/stm32f4xx_it.c **** 
 335:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM6_DAC_IRQn 1 */
 336:Core/Src/stm32f4xx_it.c **** }
 482              		.loc 1 336 1 is_stmt 0 view .LVU56
 483 0008 08BD     		pop	{r3, pc}
 484              	.L50:
 485 000a 00BF     		.align	2
 486              	.L49:
 487 000c 00000000 		.word	htim6
 488              		.cfi_endproc
 489              	.LFE256:
 491              		.text
 492              	.Letext0:
 493              		.file 2 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 15


 494              		.file 3 "C:/Users/Rick/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-too
 495              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 496              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 497              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 498              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 499              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 500              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 501              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:21     .text.NMI_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:27     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:136    .text.SVC_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:142    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:155    .text.DebugMon_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:161    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:174    .text.PendSV_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:180    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:193    .text.SysTick_Handler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:199    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:212    .text.DMA1_Stream1_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:218    .text.DMA1_Stream1_IRQHandler:00000000 DMA1_Stream1_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:237    .text.DMA1_Stream1_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:242    .text.DMA1_Stream3_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:248    .text.DMA1_Stream3_IRQHandler:00000000 DMA1_Stream3_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:267    .text.DMA1_Stream3_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:272    .text.ADC_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:278    .text.ADC_IRQHandler:00000000 ADC_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:305    .text.ADC_IRQHandler:00000018 $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:312    .text.TIM1_BRK_TIM9_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:318    .text.TIM1_BRK_TIM9_IRQHandler:00000000 TIM1_BRK_TIM9_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:337    .text.TIM1_BRK_TIM9_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:342    .text.TIM1_UP_TIM10_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:348    .text.TIM1_UP_TIM10_IRQHandler:00000000 TIM1_UP_TIM10_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:367    .text.TIM1_UP_TIM10_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:372    .text.TIM1_CC_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:378    .text.TIM1_CC_IRQHandler:00000000 TIM1_CC_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:397    .text.TIM1_CC_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:402    .text.TIM3_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:408    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:427    .text.TIM3_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:432    .text.USART3_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:438    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:457    .text.USART3_IRQHandler:0000000c $d
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:462    .text.TIM6_DAC_IRQHandler:00000000 $t
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:468    .text.TIM6_DAC_IRQHandler:00000000 TIM6_DAC_IRQHandler
C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s:487    .text.TIM6_DAC_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart3_rx
hdma_usart3_tx
HAL_ADC_IRQHandler
hadc1
hadc2
hadc3
HAL_TIM_IRQHandler
ARM GAS  C:\Users\Rick\AppData\Local\Temp\ccFoZRrJ.s 			page 17


htim1
htim3
HAL_UART_IRQHandler
huart3
htim6
